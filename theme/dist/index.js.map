{"mappings":"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","sources":["node_modules/@vue/shared/dist/shared.esm-bundler.js","node_modules/symbol-observable/es/index.js","node_modules/symbol-observable/es/ponyfill.js","src/components/App.vue","src/components/Section.vue","node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","src/components/MenuHorizontal.vue","src/components/MenuCollapsible.vue","src/bus.js","src/querier.js","node_modules/throttle-debounce/throttle.js","node_modules/throttle-debounce/debounce.js","node_modules/tslib/tslib.es6.js","node_modules/ts-invariant/src/invariant.ts","node_modules/@apollo/src/utilities/globals/maybe.ts","node_modules/@apollo/src/utilities/globals/global.ts","node_modules/@apollo/src/utilities/globals/DEV.ts","node_modules/process/browser.js","node_modules/ts-invariant/process/index.js","node_modules/graphql/jsutils/devAssert.mjs","node_modules/graphql/jsutils/inspect.mjs","node_modules/graphql/language/source.mjs","node_modules/graphql/jsutils/invariant.mjs","node_modules/graphql/language/location.mjs","node_modules/graphql/language/printLocation.mjs","node_modules/graphql/error/GraphQLError.mjs","node_modules/graphql/jsutils/isObjectLike.mjs","node_modules/graphql/error/syntaxError.mjs","node_modules/graphql/language/ast.mjs","node_modules/graphql/language/directiveLocation.mjs","node_modules/graphql/language/kinds.mjs","node_modules/graphql/language/tokenKind.mjs","node_modules/graphql/language/characterClasses.mjs","node_modules/graphql/language/blockString.mjs","node_modules/graphql/language/lexer.mjs","node_modules/graphql/language/parser.mjs","node_modules/graphql/language/printString.mjs","node_modules/graphql/language/visitor.mjs","node_modules/graphql/language/printer.mjs","node_modules/@apollo/src/utilities/graphql/directives.ts","node_modules/@apollo/src/utilities/graphql/fragments.ts","node_modules/@apollo/src/utilities/common/objects.ts","node_modules/@apollo/src/utilities/graphql/storeUtils.ts","node_modules/@apollo/src/utilities/globals/fix-graphql.ts","node_modules/@apollo/src/utilities/globals/index.ts","node_modules/@apollo/src/utilities/graphql/getFromAST.ts","node_modules/@apollo/src/utilities/common/filterInPlace.ts","node_modules/@apollo/src/utilities/graphql/transform.ts","node_modules/zen-observable-ts/module.js","node_modules/@apollo/src/utilities/observables/Observable.ts","node_modules/@apollo/src/utilities/common/mergeDeep.ts","node_modules/@apollo/src/utilities/common/cloneDeep.ts","node_modules/@apollo/src/utilities/common/maybeDeepFreeze.ts","node_modules/@apollo/src/utilities/observables/iteration.ts","node_modules/@apollo/src/utilities/observables/asyncMap.ts","node_modules/@apollo/src/utilities/common/canUse.ts","node_modules/@apollo/src/utilities/observables/subclassing.ts","node_modules/@apollo/src/utilities/observables/Concast.ts","node_modules/@apollo/src/utilities/common/arrays.ts","node_modules/@apollo/src/utilities/common/errorHandling.ts","node_modules/@apollo/src/utilities/common/compact.ts","node_modules/@apollo/src/utilities/common/makeUniqueId.ts","node_modules/@apollo/src/link/utils/fromError.ts","node_modules/@apollo/src/link/utils/throwServerError.ts","node_modules/@apollo/src/link/core/ApolloLink.ts","node_modules/@apollo/src/link/utils/createOperation.ts","node_modules/@apollo/src/link/utils/transformOperation.ts","node_modules/@apollo/src/link/utils/validateOperation.ts","node_modules/@apollo/src/link/core/execute.ts","node_modules/@apollo/src/link/http/serializeFetchParameter.ts","node_modules/@apollo/src/link/http/parseAndCheckHttpResponse.ts","node_modules/@apollo/src/link/http/checkFetcher.ts","node_modules/@apollo/src/link/http/selectHttpOptionsAndBody.ts","node_modules/@apollo/src/link/http/createHttpLink.ts","node_modules/@apollo/src/link/http/selectURI.ts","node_modules/@apollo/src/link/http/createSignalIfSupported.ts","node_modules/@apollo/src/link/http/rewriteURIForGET.ts","node_modules/@apollo/src/link/http/HttpLink.ts","node_modules/@wry/equality/src/equality.ts","node_modules/@wry/trie/src/trie.ts","node_modules/@wry/context/src/slot.ts","node_modules/@wry/context/src/context.ts","node_modules/optimism/src/cache.ts","node_modules/optimism/src/context.ts","node_modules/optimism/src/helpers.ts","node_modules/optimism/src/entry.ts","node_modules/optimism/src/dep.ts","node_modules/optimism/src/index.ts","node_modules/@apollo/src/cache/core/cache.ts","node_modules/@apollo/src/cache/core/types/common.ts","node_modules/@apollo/src/cache/inmemory/helpers.ts","node_modules/@apollo/src/cache/inmemory/entityStore.ts","node_modules/@apollo/src/cache/inmemory/object-canon.ts","node_modules/@apollo/src/cache/inmemory/readFromStore.ts","node_modules/@apollo/src/cache/inmemory/reactiveVars.ts","node_modules/@apollo/src/cache/inmemory/key-extractor.ts","node_modules/@apollo/src/cache/inmemory/policies.ts","node_modules/@apollo/src/utilities/common/stringifyForDisplay.ts","node_modules/@apollo/src/cache/inmemory/writeToStore.ts","node_modules/@apollo/src/cache/inmemory/inMemoryCache.ts","node_modules/@apollo/src/errors/index.ts","node_modules/@apollo/src/core/networkStatus.ts","node_modules/@apollo/src/core/ObservableQuery.ts","node_modules/@apollo/src/core/LocalState.ts","node_modules/@apollo/src/core/QueryInfo.ts","node_modules/@apollo/src/core/QueryManager.ts","node_modules/@apollo/src/core/ApolloClient.ts","node_modules/@vue/apollo-composable/src/useApolloClient.ts","node_modules/@apollo/src/version.ts","node_modules/@vue/apollo-composable/src/util/paramToRef.ts","node_modules/@vue/apollo-composable/src/util/paramToReactive.ts","node_modules/@vue/apollo-composable/src/util/useEventHook.ts","node_modules/@vue/apollo-composable/src/util/loadingTracking.ts","node_modules/@vue/apollo-composable/src/util/toApolloError.ts","node_modules/@vue/apollo-composable/src/util/env.ts","node_modules/@vue/apollo-composable/src/useQuery.ts","node_modules/@vue/apollo-composable/src/useResult.ts","node_modules/@vue/devtools-api/lib/esm/env.js","node_modules/graphql-tag/src/index.ts","src/components/Home.vue","src/components/Carousel.vue","src/components/Button.vue","src/components/Page.vue","src/components/sermons/Serie.vue","src/components/sermons/Series.vue","node_modules/@vue/devtools-api/lib/esm/time.js","node_modules/@vue/devtools-api/lib/esm/proxy.js","node_modules/@vue/devtools-api/lib/esm/const.js","node_modules/@vue/devtools-api/lib/esm/index.js","node_modules/vue-router/dist/vue-router.esm-bundler.js","src/index.js"],"sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    // Split the content into individual lines but capture the newline sequence\r\n    // that separated each line. This is important because the actual sequence is\r\n    // needed to properly take into account the full line length for offset\r\n    // comparison\r\n    let lines = source.split(/(\\r?\\n)/);\r\n    // Separate the lines and newline sequences into separate arrays for easier referencing\r\n    const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\r\n    lines = lines.filter((_, idx) => idx % 2 === 0);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count +=\r\n            lines[i].length +\r\n                ((newlineSequences[i] && newlineSequences[i].length) || 0);\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                const newLineSeqLength = (newlineSequences[j] && newlineSequences[j].length) || 0;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - (lineLength + newLineSeqLength));\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + newLineSeqLength;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\n/**\r\n * Boolean attributes should be included if the value is truthy or ''.\r\n * e.g. `<select multiple>` compiles to `{ multiple: '' }`\r\n */\r\nfunction includeBooleanAttr(value) {\r\n    return !!value || value === '';\r\n}\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownHtmlAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nconst isKnownSvgAttr = /*#__PURE__*/ makeMap(`xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = isString(item)\r\n                ? parseStringStyle(item)\r\n                : normalizeStyle(item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isString(value)) {\r\n        return value;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles || isString(styles)) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\r\nfunction normalizeProps(props) {\r\n    if (!props)\r\n        return null;\r\n    let { class: klass, style } = props;\r\n    if (klass && !isString(klass)) {\r\n        props.class = normalizeClass(klass);\r\n    }\r\n    if (style) {\r\n        props.style = normalizeStyle(style);\r\n    }\r\n    return props;\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `(process.env.NODE_ENV !== 'production')` flag.\r\n */\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `(process.env.NODE_ENV !== 'production')` flag.\r\n */\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `(process.env.NODE_ENV !== 'production')` flag.\r\n */\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.slice(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return isString(val)\r\n        ? val\r\n        : val == null\r\n            ? ''\r\n            : isArray(val) ||\r\n                (isObject(val) &&\r\n                    (val.toString === objectToString || !isFunction(val.toString)))\r\n                ? JSON.stringify(val, replacer, 2)\r\n                : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    // can't use isRef here since @vue/shared has no deps\r\n    if (val && val.__v_isRef) {\r\n        return replacer(_key, val.value);\r\n    }\r\n    else if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,ref_for,ref_key,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => str ? `on${capitalize(str)}` : ``);\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, includeBooleanAttr, invokeArrayFns, isArray, isBooleanAttr, isBuiltInDirective, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownHtmlAttr, isKnownSvgAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeProps, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\n\t\t\tif (typeof Symbol.for === 'function') {\n\t\t\t\t// This just needs to be something that won't trample other user's Symbol.for use\n\t\t\t\t// It also will guide people to the source of their issues, if this is problematic.\n\t\t\t\t// META: It's a resource locator!\n\t\t\t\tresult = Symbol.for('https://github.com/benlesh/symbol-observable');\n\t\t\t} else {\n\t\t\t\t// Symbol.for didn't exist! The best we can do at this point is a totally \n\t\t\t\t// unique symbol. Note that the string argument here is a descriptor, not\n\t\t\t\t// an identifier. This symbol is unique.\n\t\t\t\tresult = Symbol('https://github.com/benlesh/symbol-observable');\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tSymbol.observable = result;\n\t\t\t} catch (err) {\n\t\t\t\t// Do nothing. In some environments, users have frozen `Symbol` for security reasons,\n\t\t\t\t// if it is frozen assigning to it will throw. In this case, we don't care, because\n\t\t\t\t// they will need to use the returned value from the ponyfill.\n\t\t\t}\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","<template>\n    <template v-if=\"!loading\">\n        <Section id=\"header\" flow=\"row\" class=\"light-gray\">\n            <div id=\"content\">\n                <header>\n                    <router-link to=\"/\">\n                        <img :src=\"data.logo\" />\n                    </router-link>\n                    <div id=\"title\">\n                        <router-link to=\"/\">\n                            <h1>{{ data.title }}</h1>\n                        </router-link>\n                        <h2>{{ data.subtitle }}</h2>\n                    </div>\n                </header>\n                <div id=\"menu-horizontal\">\n                    <MenuHorizontal ref=\"menu\" />\n                </div>\n                <div id=\"menu-collapsible\">\n                    <MenuCollapsible />\n                </div>\n            </div>\n        </Section>\n\n        <router-view v-on:pageLoaded=\"onPageLoaded\" v-on:scrolledToSection=\"onScrolledToSection\" />\n\n        <Section id=\"footer\" class=\"dark\">\n            <div id=\"footer-items\">\n                <div id=\"footer-main-item\">\n                    <h3>{{ data.footer.first.title }}</h3>\n                    {{ data.footer.first.content }}\n                </div>\n                <div id=\"footer-secondary-items\">\n                    <div id=\"item\">\n                        <h3>{{ data.footer.second.title }}</h3>\n                        {{ data.footer.second.content }}\n                    </div>\n                    <div id=\"item\">\n                        <h3>Redes Sociais</h3>\n                        <a v-if=\"data.footer.social.youtube\" :href=\"data.footer.social.youtube\">\n                            <i class=\"fab fa-youtube\" />\n                        </a>\n                        <a v-if=\"data.footer.social.instagram\" :href=\"data.footer.social.instagram\">\n                            <i class=\"fab fa-instagram\" />\n                        </a>\n                        <a v-if=\"data.footer.social.facebook\" :href=\"data.footer.social.facebook\">\n                            <i class=\"fab fa-facebook\" />\n                        </a>\n                        <a v-if=\"data.footer.social.spotify\" :href=\"data.footer.social.spotify\">\n                            <i class=\"fab fa-spotify\" />\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </Section>\n\n        <Section id=\"copyright\" class=\"darker center\">\n            <span>{{ data.title }}</span>\n        </Section>\n    </template>\n</template>\n\n<script>\nimport Section from './Section.vue'\nimport MenuHorizontal from './MenuHorizontal.vue'\nimport MenuCollapsible from './MenuCollapsible.vue'\n\nimport { ref } from 'vue'\nimport Bus from '../bus.js'\nimport Querier from '../querier.js'\n\nexport default {\n    components: {\n        Section,\n        MenuHorizontal,\n        MenuCollapsible,\n    },\n    setup() {\n        const { loading, data } = Querier.home()\n        return {\n            bus: new Bus(),\n            menu: ref(null),\n            loading,\n            data,\n        }\n    },\n    methods: {\n        once(event, f) {\n            this.bus.once(event, f)\n        },\n        onPageLoaded() {\n            this.bus.emit('pageLoaded')\n        },\n        onScrolledToSection(section) {\n            this.menu.activate(section)\n        }\n    }\n}\n</script>\n\n<style lang=\"stylus\">\nhtml, body\n    margin 0\n    padding 0\n    scroll-behavior smooth\n\nbody\n    color black\n    font-family 'Montserrat', 'sans-serif'\n    font-size 14px\n\n*, *:before, *:after\n    box-sizing border-box\n    text-decoration none\n\na\n    color black\n</style>\n\n<style scoped lang=\"stylus\">\nSection#header\n    border-bottom 1px solid #ccc\n    border-top 5px solid #3069B3 !important\n    box-shadow 0 0 2px 0 #aaa\n    height 90px\n    position sticky\n    top 0\n    z-index 1000\n\n    #content\n        align-items center\n        display flex\n        flex-flow row nowrap\n        height 100%\n        justify-content space-between\n        padding 0 10px\n        width 100%\n\n        header\n            display grid\n            grid-template-columns  55px 1fr\n            grid-template-rows  55px\n\n            img\n                height 100%\n\n            #title\n                display flex\n                flex-flow column nowrap\n                height 100%\n                justify-content center\n                padding-left 20px\n\n                h1\n                    font-size @css{min(26px, max(16px, 2vw))}\n                    margin 0\n                    padding 0\n\n                    span\n                        white-space nowrap\n\n                h2\n                    color #3069B3\n                    font-size @css{min(14px, max(12px, 1.4vw))}\n                    font-weight 600\n                    margin 0\n                    padding 0\n                    white-space nowrap\n\n    #menu-collapsible\n        display none\n        width 100%\n\n@media (max-width: 767px)\n    Section#header\n        height auto\n\n        #menu-horizontal\n            display none\n\n        #menu-collapsible\n            display block\n\n        #content\n            flex-flow column nowrap\n\n            header\n                padding 10px 0\n\n                #title h1 span\n                    white-space normal\n\nSection#footer\n    color #eee\n    font-size 14px\n    padding 40px 15px 40px\n\n    #footer-items\n        display grid\n        grid-gap 40px\n        grid-template-columns repeat(auto-fit, minmax(@css{min(100%, 300px)}, 1fr))\n\n        #footer-main-item, #footer-secondary-items\n            padding 0 20px\n            white-space pre-line\n\n        #footer-secondary-items\n            display grid\n            grid-gap 40px\n            grid-template-columns repeat(auto-fit, minmax(@css{min(100%, 200px)}, 1fr))\n\n            #item\n                font-weight 300\n                white-space pre-line\n\n        h3\n            font-size 16px\n            margin 0 0 10px\n\n        a\n            color white\n\n        i\n            font-size 22px\n            padding 5px 20px 0 0\n\n        i:hover\n            transform scale(1.1)\n\nSection#copyright\n    color #eee\n    font-size 15px\n    font-weight 300\n    padding 20px 0\n\n    span\n        text-align center\n        width 100%\n</style>\n","<template>\n    <section class=\"wrapper\">\n        <section id=\"main\" :class=\"flow\">\n            <h2 v-if=\"title\">{{title}}</h2>\n            <slot />\n        </section>\n    </section>\n</template>\n  \n<script>\nexport default {\n    props: ['title', 'flow'],\n} \n</script>\n  \n<style scoped lang=\"stylus\">\n.wrapper\n    border-top 1px solid #ededed\n    display flex\n    justify-content space-around\n    width 100%\n\n.wrapper.fill\n    justify-content center\n\n    #main\n        max-width 1920px\n        width 100%\n\n.wrapper.borderless\n    border-top none\n\n.wrapper.alternate\n    background #fafafa\n\n.wrapper.dark\n    background #211b1a\n\n.wrapper.darker\n    background #050505\n    border: none\n\n.wrapper.light-gray\n    background #f9f9f9\n\n.wrapper.gray\n    background #464646\n\n.wrapper.spacing\n    padding-bottom 60px\n    padding-top 60px\n\n.wrapper.spacing-top\n    padding-top 60px\n\n.wrapper.center #content\n    justify-content space-around\n\n#main\n    align-items center\n    display flex\n    height 100%\n    justify-content space-between\n    max-width 1300px\n    width 100%\n\n#main.row\n    flex-flow row nowrap\n\n#main.column\n    flex-flow column nowrap\n\n#main > h2\n    text-align center\n    margin 0 0 40px\n\n#main > h2::after\n    background #3069b3\n    content ''\n    display block\n    width 105%\n    height 4px\n    margin 5px 0 0 -2.5%\n</style>\n","import { extend, isArray, isMap, isIntegerKey, isSymbol, hasOwn, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nfunction warn(msg, ...args) {\r\n    console.warn(`[Vue warn] ${msg}`, ...args);\r\n}\n\nlet activeEffectScope;\r\nclass EffectScope {\r\n    constructor(detached = false) {\r\n        this.active = true;\r\n        this.effects = [];\r\n        this.cleanups = [];\r\n        if (!detached && activeEffectScope) {\r\n            this.parent = activeEffectScope;\r\n            this.index =\r\n                (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;\r\n        }\r\n    }\r\n    run(fn) {\r\n        if (this.active) {\r\n            try {\r\n                activeEffectScope = this;\r\n                return fn();\r\n            }\r\n            finally {\r\n                activeEffectScope = this.parent;\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`cannot run an inactive effect scope.`);\r\n        }\r\n    }\r\n    on() {\r\n        activeEffectScope = this;\r\n    }\r\n    off() {\r\n        activeEffectScope = this.parent;\r\n    }\r\n    stop(fromParent) {\r\n        if (this.active) {\r\n            let i, l;\r\n            for (i = 0, l = this.effects.length; i < l; i++) {\r\n                this.effects[i].stop();\r\n            }\r\n            for (i = 0, l = this.cleanups.length; i < l; i++) {\r\n                this.cleanups[i]();\r\n            }\r\n            if (this.scopes) {\r\n                for (i = 0, l = this.scopes.length; i < l; i++) {\r\n                    this.scopes[i].stop(true);\r\n                }\r\n            }\r\n            // nested scope, dereference from parent to avoid memory leaks\r\n            if (this.parent && !fromParent) {\r\n                // optimized O(1) removal\r\n                const last = this.parent.scopes.pop();\r\n                if (last && last !== this) {\r\n                    this.parent.scopes[this.index] = last;\r\n                    last.index = this.index;\r\n                }\r\n            }\r\n            this.active = false;\r\n        }\r\n    }\r\n}\r\nfunction effectScope(detached) {\r\n    return new EffectScope(detached);\r\n}\r\nfunction recordEffectScope(effect, scope = activeEffectScope) {\r\n    if (scope && scope.active) {\r\n        scope.effects.push(effect);\r\n    }\r\n}\r\nfunction getCurrentScope() {\r\n    return activeEffectScope;\r\n}\r\nfunction onScopeDispose(fn) {\r\n    if (activeEffectScope) {\r\n        activeEffectScope.cleanups.push(fn);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`onScopeDispose() is called when there is no active effect scope` +\r\n            ` to be associated with.`);\r\n    }\r\n}\n\nconst createDep = (effects) => {\r\n    const dep = new Set(effects);\r\n    dep.w = 0;\r\n    dep.n = 0;\r\n    return dep;\r\n};\r\nconst wasTracked = (dep) => (dep.w & trackOpBit) > 0;\r\nconst newTracked = (dep) => (dep.n & trackOpBit) > 0;\r\nconst initDepMarkers = ({ deps }) => {\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].w |= trackOpBit; // set was tracked\r\n        }\r\n    }\r\n};\r\nconst finalizeDepMarkers = (effect) => {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        let ptr = 0;\r\n        for (let i = 0; i < deps.length; i++) {\r\n            const dep = deps[i];\r\n            if (wasTracked(dep) && !newTracked(dep)) {\r\n                dep.delete(effect);\r\n            }\r\n            else {\r\n                deps[ptr++] = dep;\r\n            }\r\n            // clear bits\r\n            dep.w &= ~trackOpBit;\r\n            dep.n &= ~trackOpBit;\r\n        }\r\n        deps.length = ptr;\r\n    }\r\n};\n\nconst targetMap = new WeakMap();\r\n// The number of effects currently being tracked recursively.\r\nlet effectTrackDepth = 0;\r\nlet trackOpBit = 1;\r\n/**\r\n * The bitwise track markers support at most 30 levels of recursion.\r\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\r\n * When recursion depth is greater, fall back to using a full cleanup.\r\n */\r\nconst maxMarkerBits = 30;\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nclass ReactiveEffect {\r\n    constructor(fn, scheduler = null, scope) {\r\n        this.fn = fn;\r\n        this.scheduler = scheduler;\r\n        this.active = true;\r\n        this.deps = [];\r\n        this.parent = undefined;\r\n        recordEffectScope(this, scope);\r\n    }\r\n    run() {\r\n        if (!this.active) {\r\n            return this.fn();\r\n        }\r\n        let parent = activeEffect;\r\n        let lastShouldTrack = shouldTrack;\r\n        while (parent) {\r\n            if (parent === this) {\r\n                return;\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n        try {\r\n            this.parent = activeEffect;\r\n            activeEffect = this;\r\n            shouldTrack = true;\r\n            trackOpBit = 1 << ++effectTrackDepth;\r\n            if (effectTrackDepth <= maxMarkerBits) {\r\n                initDepMarkers(this);\r\n            }\r\n            else {\r\n                cleanupEffect(this);\r\n            }\r\n            return this.fn();\r\n        }\r\n        finally {\r\n            if (effectTrackDepth <= maxMarkerBits) {\r\n                finalizeDepMarkers(this);\r\n            }\r\n            trackOpBit = 1 << --effectTrackDepth;\r\n            activeEffect = this.parent;\r\n            shouldTrack = lastShouldTrack;\r\n            this.parent = undefined;\r\n        }\r\n    }\r\n    stop() {\r\n        if (this.active) {\r\n            cleanupEffect(this);\r\n            if (this.onStop) {\r\n                this.onStop();\r\n            }\r\n            this.active = false;\r\n        }\r\n    }\r\n}\r\nfunction cleanupEffect(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nfunction effect(fn, options) {\r\n    if (fn.effect) {\r\n        fn = fn.effect.fn;\r\n    }\r\n    const _effect = new ReactiveEffect(fn);\r\n    if (options) {\r\n        extend(_effect, options);\r\n        if (options.scope)\r\n            recordEffectScope(_effect, options.scope);\r\n    }\r\n    if (!options || !options.lazy) {\r\n        _effect.run();\r\n    }\r\n    const runner = _effect.run.bind(_effect);\r\n    runner.effect = _effect;\r\n    return runner;\r\n}\r\nfunction stop(runner) {\r\n    runner.effect.stop();\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (shouldTrack && activeEffect) {\r\n        let depsMap = targetMap.get(target);\r\n        if (!depsMap) {\r\n            targetMap.set(target, (depsMap = new Map()));\r\n        }\r\n        let dep = depsMap.get(key);\r\n        if (!dep) {\r\n            depsMap.set(key, (dep = createDep()));\r\n        }\r\n        const eventInfo = (process.env.NODE_ENV !== 'production')\r\n            ? { effect: activeEffect, target, type, key }\r\n            : undefined;\r\n        trackEffects(dep, eventInfo);\r\n    }\r\n}\r\nfunction trackEffects(dep, debuggerEventExtraInfo) {\r\n    let shouldTrack = false;\r\n    if (effectTrackDepth <= maxMarkerBits) {\r\n        if (!newTracked(dep)) {\r\n            dep.n |= trackOpBit; // set newly tracked\r\n            shouldTrack = !wasTracked(dep);\r\n        }\r\n    }\r\n    else {\r\n        // Full cleanup mode.\r\n        shouldTrack = !dep.has(activeEffect);\r\n    }\r\n    if (shouldTrack) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.onTrack) {\r\n            activeEffect.onTrack(Object.assign({\r\n                effect: activeEffect\r\n            }, debuggerEventExtraInfo));\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    let deps = [];\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        deps = [...depsMap.values()];\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                deps.push(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            deps.push(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    deps.push(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const eventInfo = (process.env.NODE_ENV !== 'production')\r\n        ? { target, type, key, newValue, oldValue, oldTarget }\r\n        : undefined;\r\n    if (deps.length === 1) {\r\n        if (deps[0]) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                triggerEffects(deps[0], eventInfo);\r\n            }\r\n            else {\r\n                triggerEffects(deps[0]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const effects = [];\r\n        for (const dep of deps) {\r\n            if (dep) {\r\n                effects.push(...dep);\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            triggerEffects(createDep(effects), eventInfo);\r\n        }\r\n        else {\r\n            triggerEffects(createDep(effects));\r\n        }\r\n    }\r\n}\r\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\r\n    // spread into array for stabilization\r\n    for (const effect of isArray(dep) ? dep : [...dep]) {\r\n        if (effect !== activeEffect || effect.allowRecurse) {\r\n            if ((process.env.NODE_ENV !== 'production') && effect.onTrigger) {\r\n                effect.onTrigger(extend({ effect }, debuggerEventExtraInfo));\r\n            }\r\n            if (effect.scheduler) {\r\n                effect.scheduler();\r\n            }\r\n            else {\r\n                effect.run();\r\n            }\r\n        }\r\n    }\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations();\r\nfunction createArrayInstrumentations() {\r\n    const instrumentations = {};\r\n    ['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            const arr = toRaw(this);\r\n            for (let i = 0, l = this.length; i < l; i++) {\r\n                track(arr, \"get\" /* GET */, i + '');\r\n            }\r\n            // we run the method using the original args first (which may be reactive)\r\n            const res = arr[key](...args);\r\n            if (res === -1 || res === false) {\r\n                // if that didn't work, run it again using raw values.\r\n                return arr[key](...args.map(toRaw));\r\n            }\r\n            else {\r\n                return res;\r\n            }\r\n        };\r\n    });\r\n    ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            pauseTracking();\r\n            const res = toRaw(this)[key].apply(this, args);\r\n            resetTracking();\r\n            return res;\r\n        };\r\n    });\r\n    return instrumentations;\r\n}\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_isShallow\" /* IS_SHALLOW */) {\r\n            return shallow;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver ===\r\n                (isReadonly\r\n                    ? shallow\r\n                        ? shallowReadonlyMap\r\n                        : readonlyMap\r\n                    : shallow\r\n                        ? shallowReactiveMap\r\n                        : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        let oldValue = target[key];\r\n        if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\r\n            return false;\r\n        }\r\n        if (!shallow && !isReadonly(value)) {\r\n            if (!isShallow(value)) {\r\n                value = toRaw(value);\r\n                oldValue = toRaw(oldValue);\r\n            }\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = /*#__PURE__*/ extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = /*#__PURE__*/ extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n    else if (target !== rawTarget) {\r\n        // #3602 readonly(reactive(Map))\r\n        // ensure that the nested reactive `Map` can do tracking for itself\r\n        target.get(key);\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nfunction createInstrumentations() {\r\n    const mutableInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, false)\r\n    };\r\n    const shallowInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, false, true);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, true)\r\n    };\r\n    const readonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* ADD */),\r\n        set: createReadonlyMethod(\"set\" /* SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n        forEach: createForEach(true, false)\r\n    };\r\n    const shallowReadonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* ADD */),\r\n        set: createReadonlyMethod(\"set\" /* SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n        forEach: createForEach(true, true)\r\n    };\r\n    const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\n    iteratorMethods.forEach(method => {\r\n        mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n        readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n        shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n        shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\r\n    });\r\n    return [\r\n        mutableInstrumentations,\r\n        readonlyInstrumentations,\r\n        shallowInstrumentations,\r\n        shallowReadonlyInstrumentations\r\n    ];\r\n}\r\nconst [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* #__PURE__*/ createInstrumentations();\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? isReadonly\r\n            ? shallowReadonlyInstrumentations\r\n            : shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, false)\r\n};\r\nconst shallowReadonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst shallowReactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nconst shallowReadonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (isReadonly(target)) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isShallow(value) {\r\n    return !!(value && value[\"__v_isShallow\" /* IS_SHALLOW */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    const raw = observed && observed[\"__v_raw\" /* RAW */];\r\n    return raw ? toRaw(raw) : observed;\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\r\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref) {\r\n    if (shouldTrack && activeEffect) {\r\n        ref = toRaw(ref);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            trackEffects(ref.dep || (ref.dep = createDep()), {\r\n                target: ref,\r\n                type: \"get\" /* GET */,\r\n                key: 'value'\r\n            });\r\n        }\r\n        else {\r\n            trackEffects(ref.dep || (ref.dep = createDep()));\r\n        }\r\n    }\r\n}\r\nfunction triggerRefValue(ref, newVal) {\r\n    ref = toRaw(ref);\r\n    if (ref.dep) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            triggerEffects(ref.dep, {\r\n                target: ref,\r\n                type: \"set\" /* SET */,\r\n                key: 'value',\r\n                newValue: newVal\r\n            });\r\n        }\r\n        else {\r\n            triggerEffects(ref.dep);\r\n        }\r\n    }\r\n}\r\nfunction isRef(r) {\r\n    return !!(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value, false);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nfunction createRef(rawValue, shallow) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nclass RefImpl {\r\n    constructor(value, __v_isShallow) {\r\n        this.__v_isShallow = __v_isShallow;\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        this._rawValue = __v_isShallow ? value : toRaw(value);\r\n        this._value = __v_isShallow ? value : toReactive(value);\r\n    }\r\n    get value() {\r\n        trackRefValue(this);\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        newVal = this.__v_isShallow ? newVal : toRaw(newVal);\r\n        if (hasChanged(newVal, this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this.__v_isShallow ? newVal : toReactive(newVal);\r\n            triggerRefValue(this, newVal);\r\n        }\r\n    }\r\n}\r\nfunction triggerRef(ref) {\r\n    triggerRefValue(ref, (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => trackRefValue(this), () => triggerRefValue(this));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key, _defaultValue) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this._defaultValue = _defaultValue;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        const val = this._object[this._key];\r\n        return val === undefined ? this._defaultValue : val;\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key, defaultValue) {\r\n    const val = object[key];\r\n    return isRef(val)\r\n        ? val\r\n        : new ObjectRefImpl(object, key, defaultValue);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly, isSSR) {\r\n        this._setter = _setter;\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        this._dirty = true;\r\n        this.effect = new ReactiveEffect(getter, () => {\r\n            if (!this._dirty) {\r\n                this._dirty = true;\r\n                triggerRefValue(this);\r\n            }\r\n        });\r\n        this.effect.computed = this;\r\n        this.effect.active = this._cacheable = !isSSR;\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        const self = toRaw(this);\r\n        trackRefValue(self);\r\n        if (self._dirty || !self._cacheable) {\r\n            self._dirty = false;\r\n            self._value = self.effect.run();\r\n        }\r\n        return self._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\r\n    let getter;\r\n    let setter;\r\n    const onlyGetter = isFunction(getterOrOptions);\r\n    if (onlyGetter) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\r\n    if ((process.env.NODE_ENV !== 'production') && debugOptions && !isSSR) {\r\n        cRef.effect.onTrack = debugOptions.onTrack;\r\n        cRef.effect.onTrigger = debugOptions.onTrigger;\r\n    }\r\n    return cRef;\r\n}\n\nvar _a;\r\nconst tick = Promise.resolve();\r\nconst queue = [];\r\nlet queued = false;\r\nconst scheduler = (fn) => {\r\n    queue.push(fn);\r\n    if (!queued) {\r\n        queued = true;\r\n        tick.then(flush);\r\n    }\r\n};\r\nconst flush = () => {\r\n    for (let i = 0; i < queue.length; i++) {\r\n        queue[i]();\r\n    }\r\n    queue.length = 0;\r\n    queued = false;\r\n};\r\nclass DeferredComputedRefImpl {\r\n    constructor(getter) {\r\n        this.dep = undefined;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this[_a] = true;\r\n        let compareTarget;\r\n        let hasCompareTarget = false;\r\n        let scheduled = false;\r\n        this.effect = new ReactiveEffect(getter, (computedTrigger) => {\r\n            if (this.dep) {\r\n                if (computedTrigger) {\r\n                    compareTarget = this._value;\r\n                    hasCompareTarget = true;\r\n                }\r\n                else if (!scheduled) {\r\n                    const valueToCompare = hasCompareTarget ? compareTarget : this._value;\r\n                    scheduled = true;\r\n                    hasCompareTarget = false;\r\n                    scheduler(() => {\r\n                        if (this.effect.active && this._get() !== valueToCompare) {\r\n                            triggerRefValue(this);\r\n                        }\r\n                        scheduled = false;\r\n                    });\r\n                }\r\n                // chained upstream computeds are notified synchronously to ensure\r\n                // value invalidation in case of sync access; normal effects are\r\n                // deferred to be triggered in scheduler.\r\n                for (const e of this.dep) {\r\n                    if (e.computed instanceof DeferredComputedRefImpl) {\r\n                        e.scheduler(true /* computedTrigger */);\r\n                    }\r\n                }\r\n            }\r\n            this._dirty = true;\r\n        });\r\n        this.effect.computed = this;\r\n    }\r\n    _get() {\r\n        if (this._dirty) {\r\n            this._dirty = false;\r\n            return (this._value = this.effect.run());\r\n        }\r\n        return this._value;\r\n    }\r\n    get value() {\r\n        trackRefValue(this);\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        return toRaw(this)._get();\r\n    }\r\n}\r\n_a = \"__v_isReadonly\" /* IS_READONLY */;\r\nfunction deferredComputed(getter) {\r\n    return new DeferredComputedRefImpl(getter);\r\n}\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, isShallow as isShallow$1, isReactive, ReactiveEffect, ref, reactive, shallowReactive, trigger, isProxy, shallowReadonly, track, EffectScope, markRaw, proxyRefs, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { EffectScope, ReactiveEffect, customRef, effect, effectScope, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, NOOP, getGlobalThis, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, hasChanged, remove, isObject, isSet, isMap, isPlainObject, invokeArrayFns, def, isReservedProp, EMPTY_ARR, capitalize, toRawType, makeMap, isBuiltInDirective, NO, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, normalizeClass, normalizeProps, normalizeStyle, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"sp\" /* SERVER_PREFETCH */]: 'serverPrefetch hook',\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(id) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < id ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        if (job.id == null) {\r\n            queue.push(job);\r\n        }\r\n        else {\r\n            queue.splice(findInsertionIndex(job.id), 0, job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > flushIndex) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    // conditional usage of checkRecursiveUpdate must be determined out of\r\n    // try ... catch block since Rollup by default de-optimizes treeshaking\r\n    // inside try-catch. This can leave all warning code unshaked. Although\r\n    // they would get eventually shaken by a minifier like terser, some minifiers\r\n    // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\r\n    const check = (process.env.NODE_ENV !== 'production')\r\n        ? (job) => checkRecursiveUpdates(seen, job)\r\n        : NOOP;\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job && job.active !== false) {\r\n                if ((process.env.NODE_ENV !== 'production') && check(job)) {\r\n                    continue;\r\n                }\r\n                // console.log(`running:`, job.id)\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length ||\r\n            pendingPreFlushCbs.length ||\r\n            pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            const instance = fn.ownerInstance;\r\n            const componentName = instance && getComponentName(instance.type);\r\n            warn(`Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n            return true;\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    getGlobalThis().__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, initialDef) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        initialDef: normalizeClassComponent(initialDef),\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction normalizeClassComponent(component) {\r\n    return isClassComponent(component) ? component.__vccOpts : component;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record) {\r\n        return;\r\n    }\r\n    // update initial record (for not-yet-rendered component)\r\n    record.initialDef.render = newRender;\r\n    [...record.instances].forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n            normalizeClassComponent(instance.type).render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    newComp = normalizeClassComponent(newComp);\r\n    // update initial def (for not-yet-rendered components)\r\n    updateComponentDef(record.initialDef, newComp);\r\n    // create a snapshot which avoids the set being mutated during updates\r\n    const instances = [...record.instances];\r\n    for (const instance of instances) {\r\n        const oldComp = normalizeClassComponent(instance.type);\r\n        if (!hmrDirtyComponents.has(oldComp)) {\r\n            // 1. Update existing comp definition to match new one\r\n            if (oldComp !== record.initialDef) {\r\n                updateComponentDef(oldComp, newComp);\r\n            }\r\n            // 2. mark definition dirty. This forces the renderer to replace the\r\n            // component on patch.\r\n            hmrDirtyComponents.add(oldComp);\r\n        }\r\n        // 3. invalidate options resolution cache\r\n        instance.appContext.optionsCache.delete(instance.type);\r\n        // 4. actually update\r\n        if (instance.ceReload) {\r\n            // custom element\r\n            hmrDirtyComponents.add(oldComp);\r\n            instance.ceReload(newComp.styles);\r\n            hmrDirtyComponents.delete(oldComp);\r\n        }\r\n        else if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n            // instance is the inner component of an async custom element\r\n            // invoke to reset styles\r\n            if (instance.parent.type.__asyncLoader &&\r\n                instance.parent.ceReload) {\r\n                instance.parent.ceReload(newComp.styles);\r\n            }\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    }\r\n    // 5. make sure to cleanup dirty hmr components after update\r\n    queuePostFlushCb(() => {\r\n        for (const instance of instances) {\r\n            hmrDirtyComponents.delete(normalizeClassComponent(instance.type));\r\n        }\r\n    });\r\n}\r\nfunction updateComponentDef(oldComp, newComp) {\r\n    extend(oldComp, newComp);\r\n    for (const key in oldComp) {\r\n        if (key !== '__file' && !(key in newComp)) {\r\n            delete oldComp[key];\r\n        }\r\n    }\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nlet buffer = [];\r\nlet devtoolsNotInstalled = false;\r\nfunction emit(event, ...args) {\r\n    if (devtools) {\r\n        devtools.emit(event, ...args);\r\n    }\r\n    else if (!devtoolsNotInstalled) {\r\n        buffer.push({ event, args });\r\n    }\r\n}\r\nfunction setDevtoolsHook(hook, target) {\r\n    var _a, _b;\r\n    devtools = hook;\r\n    if (devtools) {\r\n        devtools.enabled = true;\r\n        buffer.forEach(({ event, args }) => devtools.emit(event, ...args));\r\n        buffer = [];\r\n    }\r\n    else if (\r\n    // handle late devtools injection - only do this if we are in an actual\r\n    // browser environment to avoid the timer handle stalling test runner exit\r\n    // (#4815)\r\n    // eslint-disable-next-line no-restricted-globals\r\n    typeof window !== 'undefined' &&\r\n        // some envs mock window but not fully\r\n        window.HTMLElement &&\r\n        // also exclude jsdom\r\n        !((_b = (_a = window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) === null || _b === void 0 ? void 0 : _b.includes('jsdom'))) {\r\n        const replay = (target.__VUE_DEVTOOLS_HOOK_REPLAY__ =\r\n            target.__VUE_DEVTOOLS_HOOK_REPLAY__ || []);\r\n        replay.push((newHook) => {\r\n            setDevtoolsHook(newHook, target);\r\n        });\r\n        // clear buffer after 3s - the user probably doesn't have devtools installed\r\n        // at all, and keeping the buffer will cause memory leaks (#4738)\r\n        setTimeout(() => {\r\n            if (!devtools) {\r\n                target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;\r\n                devtoolsNotInstalled = true;\r\n                buffer = [];\r\n            }\r\n        }, 3000);\r\n    }\r\n    else {\r\n        // non-browser env, assume not installed\r\n        devtoolsNotInstalled = true;\r\n        buffer = [];\r\n    }\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = \r\n/*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = \r\n/*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nconst devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:start\" /* PERFORMANCE_START */);\r\nconst devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:end\" /* PERFORMANCE_END */);\r\nfunction createDevtoolsPerformanceHook(hook) {\r\n    return (component, type, time) => {\r\n        emit(hook, component.appContext.app, component.uid, component, type, time);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit$1(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions) &&\r\n                !(false )) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    let handlerName;\r\n    let handler = props[(handlerName = toHandlerKey(event))] ||\r\n        // also try camelCase event handler (#2249)\r\n        props[(handlerName = toHandlerKey(camelize(event)))];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handler = props[(handlerName = toHandlerKey(hyphenate(event)))];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            instance.emitted = {};\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        instance.emitted[handlerName] = true;\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.emitsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached !== undefined) {\r\n        return cached;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\r\n            if (normalizedFromExtend) {\r\n                hasExtends = true;\r\n                extend(normalized, normalizedFromExtend);\r\n            }\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, null);\r\n        return null;\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    cache.set(comp, normalized);\r\n    return normalized;\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nlet currentScopeId = null;\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nfunction setCurrentRenderingInstance(instance) {\r\n    const prev = currentRenderingInstance;\r\n    currentRenderingInstance = instance;\r\n    currentScopeId = (instance && instance.type.__scopeId) || null;\r\n    return prev;\r\n}\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nfunction pushScopeId(id) {\r\n    currentScopeId = id;\r\n}\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    currentScopeId = null;\r\n}\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nconst withScopeId = (_id) => withCtx;\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot // false only\r\n) {\r\n    if (!ctx)\r\n        return fn;\r\n    // already normalized\r\n    if (fn._n) {\r\n        return fn;\r\n    }\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we disable block tracking and\r\n        // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n        // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n        // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(-1);\r\n        }\r\n        const prevInstance = setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(prevInstance);\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(1);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentUpdated(ctx);\r\n        }\r\n        return res;\r\n    };\r\n    // mark normalized to avoid duplicated wrapping\r\n    renderFnWithContext._n = true;\r\n    // mark this as compiled by default\r\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n    // rendering flag.\r\n    renderFnWithContext._c = true;\r\n    // disable block tracking by default\r\n    renderFnWithContext._d = true;\r\n    return renderFnWithContext;\r\n}\n\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx, inheritAttrs } = instance;\r\n    let result;\r\n    let fallthroughAttrs;\r\n    const prev = setCurrentRenderingInstance(instance);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n    }\r\n    catch (err) {\r\n        blockStack.length = 0;\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    // attr merging\r\n    // in dev mode, comments are preserved, and it's possible for a template\r\n    // to have comments along side the root element which makes it a fragment\r\n    let root = result;\r\n    let setRoot = undefined;\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        result.patchFlag > 0 &&\r\n        result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n        [root, setRoot] = getChildRoot(result);\r\n    }\r\n    if (fallthroughAttrs && inheritAttrs !== false) {\r\n        const keys = Object.keys(fallthroughAttrs);\r\n        const { shapeFlag } = root;\r\n        if (keys.length) {\r\n            if (shapeFlag & (1 /* ELEMENT */ | 6 /* COMPONENT */)) {\r\n                if (propsOptions && keys.some(isModelListener)) {\r\n                    // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                    // prop, it indicates this component expects to handle v-model and\r\n                    // it should not fallthrough.\r\n                    // related: #1543, #1643, #1989\r\n                    fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                }\r\n                root = cloneVNode(root, fallthroughAttrs);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                const allAttrs = Object.keys(attrs);\r\n                const eventAttrs = [];\r\n                const extraAttrs = [];\r\n                for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                    const key = allAttrs[i];\r\n                    if (isOn(key)) {\r\n                        // ignore v-model handlers when they fail to fallthrough\r\n                        if (!isModelListener(key)) {\r\n                            // remove `on`, lowercase first letter to reflect event casing\r\n                            // accurately\r\n                            eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                        }\r\n                    }\r\n                    else {\r\n                        extraAttrs.push(key);\r\n                    }\r\n                }\r\n                if (extraAttrs.length) {\r\n                    warn(`Extraneous non-props attributes (` +\r\n                        `${extraAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes.`);\r\n                }\r\n                if (eventAttrs.length) {\r\n                    warn(`Extraneous non-emits event listeners (` +\r\n                        `${eventAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes. ` +\r\n                        `If the listener is intended to be a component custom event listener only, ` +\r\n                        `declare it using the \"emits\" option.`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // inherit directives\r\n    if (vnode.dirs) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n            warn(`Runtime directive used on component with non-element root node. ` +\r\n                `The directives will not function as intended.`);\r\n        }\r\n        root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n    }\r\n    // inherit transition data\r\n    if (vnode.transition) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n            warn(`Component inside <Transition> renders non-element root node ` +\r\n                `that cannot be animated.`);\r\n        }\r\n        root.transition = vnode.transition;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n        setRoot(root);\r\n    }\r\n    else {\r\n        result = root;\r\n    }\r\n    setCurrentRenderingInstance(prev);\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & (6 /* COMPONENT */ | 1 /* ELEMENT */) ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    name: 'Suspense',\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary,\r\n    normalize: normalizeSuspenseChildren\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl );\r\nfunction triggerEvent(vnode, name) {\r\n    const eventListener = vnode.props && vnode.props[name];\r\n    if (isFunction(eventListener)) {\r\n        eventListener();\r\n    }\r\n}\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // invoke @fallback event\r\n        triggerEvent(vnode, 'onPending');\r\n        triggerEvent(vnode, 'onFallback');\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, slotScopeIds);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, slotScopeIds, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            triggerEvent(n2, 'onPending');\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            triggerEvent(vnode, 'onResolve');\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            triggerEvent(vnode, 'onFallback');\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            suspense.isInFallback = true;\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult, false);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    const isSlotChildren = shapeFlag & 32 /* SLOTS_CHILDREN */;\r\n    vnode.ssContent = normalizeSuspenseSlot(isSlotChildren ? children.default : children);\r\n    vnode.ssFallback = isSlotChildren\r\n        ? normalizeSuspenseSlot(children.fallback)\r\n        : createVNode(Comment);\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    let block;\r\n    if (isFunction(s)) {\r\n        const trackBlock = isBlockTreeEnabled && s._c;\r\n        if (trackBlock) {\r\n            // disableTracking: false\r\n            // allow block tracking for compiled slots\r\n            // (see ./componentRenderContext.ts)\r\n            s._d = false;\r\n            openBlock();\r\n        }\r\n        s = s();\r\n        if (trackBlock) {\r\n            s._d = true;\r\n            block = currentBlock;\r\n            closeBlock();\r\n        }\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    s = normalizeVNode(s);\r\n    if (block && !s.dynamicChildren) {\r\n        s.dynamicChildren = block.filter(c => c !== s);\r\n    }\r\n    return s;\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the instance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue.call(instance.proxy)\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\nfunction watchPostEffect(effect, options) {\r\n    return doWatch(effect, null, ((process.env.NODE_ENV !== 'production')\r\n        ? Object.assign(options || {}, { flush: 'post' })\r\n        : { flush: 'post' }));\r\n}\r\nfunction watchSyncEffect(effect, options) {\r\n    return doWatch(effect, null, ((process.env.NODE_ENV !== 'production')\r\n        ? Object.assign(options || {}, { flush: 'sync' })\r\n        : { flush: 'sync' }));\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    const instance = currentInstance;\r\n    let getter;\r\n    let forceTrigger = false;\r\n    let isMultiSource = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = isShallow$1(source);\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        isMultiSource = true;\r\n        forceTrigger = source.some(isReactive);\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithAsyncErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onCleanup]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    let onCleanup = (fn) => {\r\n        cleanup = effect.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    // in SSR there is no need to setup an actual effect, and it should be noop\r\n    // unless it's eager\r\n    if (isInSSRComponentSetup) {\r\n        // we will also not call the invalidate callback (+ runner is not set up)\r\n        onCleanup = NOOP;\r\n        if (!cb) {\r\n            getter();\r\n        }\r\n        else if (immediate) {\r\n            callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                getter(),\r\n                isMultiSource ? [] : undefined,\r\n                onCleanup\r\n            ]);\r\n        }\r\n        return NOOP;\r\n    }\r\n    let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!effect.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = effect.run();\r\n            if (deep ||\r\n                forceTrigger ||\r\n                (isMultiSource\r\n                    ? newValue.some((v, i) => hasChanged(v, oldValue[i]))\r\n                    : hasChanged(newValue, oldValue)) ||\r\n                (false  )) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onCleanup\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            effect.run();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job; // the scheduler function gets called directly\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const effect = new ReactiveEffect(getter, scheduler);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        effect.onTrack = onTrack;\r\n        effect.onTrigger = onTrigger;\r\n    }\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = effect.run();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(effect.run.bind(effect), instance && instance.suspense);\r\n    }\r\n    else {\r\n        effect.run();\r\n    }\r\n    return () => {\r\n        effect.stop();\r\n        if (instance && instance.scope) {\r\n            remove(instance.scope.effects, effect);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, value, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? source.includes('.')\r\n            ? createPathGetter(publicThis, source)\r\n            : () => publicThis[source]\r\n        : source.bind(publicThis, publicThis);\r\n    let cb;\r\n    if (isFunction(value)) {\r\n        cb = value;\r\n    }\r\n    else {\r\n        cb = value.handler;\r\n        options = value;\r\n    }\r\n    const cur = currentInstance;\r\n    setCurrentInstance(this);\r\n    const res = doWatch(getter, cb.bind(publicThis), options);\r\n    if (cur) {\r\n        setCurrentInstance(cur);\r\n    }\r\n    else {\r\n        unsetCurrentInstance();\r\n    }\r\n    return res;\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction traverse(value, seen) {\r\n    if (!isObject(value) || value[\"__v_skip\" /* SKIP */]) {\r\n        return value;\r\n    }\r\n    seen = seen || new Set();\r\n    if (seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else if (isPlainObject(value)) {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                mode &&\r\n                mode !== 'in-out' && mode !== 'out-in' && mode !== 'default') {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest =\r\n                loader()\r\n                    .catch(err => {\r\n                    err = err instanceof Error ? err : new Error(String(err));\r\n                    if (userOnError) {\r\n                        return new Promise((resolve, reject) => {\r\n                            const userRetry = () => resolve(retry());\r\n                            const userFail = () => reject(err);\r\n                            userOnError(err, userRetry, userFail, retries + 1);\r\n                        });\r\n                    }\r\n                    else {\r\n                        throw err;\r\n                    }\r\n                })\r\n                    .then((comp) => {\r\n                    if (thisRequest !== pendingRequest && pendingRequest) {\r\n                        return pendingRequest;\r\n                    }\r\n                    if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                        warn(`Async component loader resolved to undefined. ` +\r\n                            `If you are using retry(), make sure to return its return value.`);\r\n                    }\r\n                    // interop module default\r\n                    if (comp &&\r\n                        (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                        comp = comp.default;\r\n                    }\r\n                    if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                        throw new Error(`Invalid async component load result: ${comp}`);\r\n                    }\r\n                    resolvedComp = comp;\r\n                    return comp;\r\n                })));\r\n    };\r\n    return defineComponent({\r\n        name: 'AsyncComponentWrapper',\r\n        __asyncLoader: load,\r\n        get __asyncResolved() {\r\n            return resolvedComp;\r\n        },\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (isInSSRComponentSetup)) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n                if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n                    // parent is keep-alive, force update so the loaded component's\r\n                    // name is taken into account\r\n                    queueJob(instance.parent.update);\r\n                }\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n        // for KeepAlive, we just need to render its children\r\n        if (!sharedContext.renderer) {\r\n            return slots.default;\r\n        }\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.__v_cache = cache;\r\n        }\r\n        const parentSuspense = instance.suspense;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense, true);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            // for async components, name check should be based in its loaded\r\n            // inner component if available\r\n            const name = getComponentName(isAsyncWrapper(vnode)\r\n                ? vnode.type.__asyncResolved || {}\r\n                : comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').includes(name);\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            return hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                unsetCurrentInstance();\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n(!isInSSRComponentSetup || lifecycle === \"sp\" /* SERVER_PREFETCH */) &&\r\n    injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onServerPrefetch = createHook(\"sp\" /* SERVER_PREFETCH */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nfunction onErrorCaptured(hook, target = currentInstance) {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet shouldCacheAccess = true;\r\nfunction applyOptions(instance) {\r\n    const options = resolveMergedOptions(instance);\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    // do not cache property access on public proxy during state initialization\r\n    shouldCacheAccess = false;\r\n    // call beforeCreate first before accessing other options since\r\n    // the hook may mutate resolved options (#2791)\r\n    if (options.beforeCreate) {\r\n        callHook(options.beforeCreate, instance, \"bc\" /* BEFORE_CREATE */);\r\n    }\r\n    const { \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // lifecycle\r\n    created, beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, serverPrefetch, \r\n    // public API\r\n    expose, inheritAttrs, \r\n    // assets\r\n    components, directives, filters } = options;\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        resolveInjections(injectOptions, ctx, checkDuplicateProperties, instance.appContext.config.unwrapInjectedRef);\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define\r\n                // methods to the proxy target, and those are read-only but\r\n                // reconfigurable, so it needs to be redefined here\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                else {\r\n                    ctx[key] = methodHandler.bind(publicThis);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (dataOptions) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isFunction(dataOptions)) {\r\n            warn(`The data option must be a function. ` +\r\n                `Plain object usage is no longer supported.`);\r\n        }\r\n        const data = dataOptions.call(publicThis, publicThis);\r\n        if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n            warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n                `intend to perform data fetching before component renders, use ` +\r\n                `async setup() + <Suspense>.`);\r\n        }\r\n        if (!isObject(data)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n        }\r\n        else {\r\n            instance.data = reactive(data);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                for (const key in data) {\r\n                    checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                    // expose data on ctx during dev\r\n                    if (key[0] !== '$' && key[0] !== '_') {\r\n                        Object.defineProperty(ctx, key, {\r\n                            configurable: true,\r\n                            enumerable: true,\r\n                            get: () => data[key],\r\n                            set: NOOP\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // state initialization complete at this point - start caching access\r\n    shouldCacheAccess = true;\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        for (const key in watchOptions) {\r\n            createWatcher(watchOptions[key], ctx, publicThis, key);\r\n        }\r\n    }\r\n    if (provideOptions) {\r\n        const provides = isFunction(provideOptions)\r\n            ? provideOptions.call(publicThis)\r\n            : provideOptions;\r\n        Reflect.ownKeys(provides).forEach(key => {\r\n            provide(key, provides[key]);\r\n        });\r\n    }\r\n    if (created) {\r\n        callHook(created, instance, \"c\" /* CREATED */);\r\n    }\r\n    function registerLifecycleHook(register, hook) {\r\n        if (isArray(hook)) {\r\n            hook.forEach(_hook => register(_hook.bind(publicThis)));\r\n        }\r\n        else if (hook) {\r\n            register(hook.bind(publicThis));\r\n        }\r\n    }\r\n    registerLifecycleHook(onBeforeMount, beforeMount);\r\n    registerLifecycleHook(onMounted, mounted);\r\n    registerLifecycleHook(onBeforeUpdate, beforeUpdate);\r\n    registerLifecycleHook(onUpdated, updated);\r\n    registerLifecycleHook(onActivated, activated);\r\n    registerLifecycleHook(onDeactivated, deactivated);\r\n    registerLifecycleHook(onErrorCaptured, errorCaptured);\r\n    registerLifecycleHook(onRenderTracked, renderTracked);\r\n    registerLifecycleHook(onRenderTriggered, renderTriggered);\r\n    registerLifecycleHook(onBeforeUnmount, beforeUnmount);\r\n    registerLifecycleHook(onUnmounted, unmounted);\r\n    registerLifecycleHook(onServerPrefetch, serverPrefetch);\r\n    if (isArray(expose)) {\r\n        if (expose.length) {\r\n            const exposed = instance.exposed || (instance.exposed = {});\r\n            expose.forEach(key => {\r\n                Object.defineProperty(exposed, key, {\r\n                    get: () => publicThis[key],\r\n                    set: val => (publicThis[key] = val)\r\n                });\r\n            });\r\n        }\r\n        else if (!instance.exposed) {\r\n            instance.exposed = {};\r\n        }\r\n    }\r\n    // options that are handled when creating the instance but also need to be\r\n    // applied from mixins\r\n    if (render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    if (inheritAttrs != null) {\r\n        instance.inheritAttrs = inheritAttrs;\r\n    }\r\n    // asset options.\r\n    if (components)\r\n        instance.components = components;\r\n    if (directives)\r\n        instance.directives = directives;\r\n}\r\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP, unwrapRef = false) {\r\n    if (isArray(injectOptions)) {\r\n        injectOptions = normalizeInject(injectOptions);\r\n    }\r\n    for (const key in injectOptions) {\r\n        const opt = injectOptions[key];\r\n        let injected;\r\n        if (isObject(opt)) {\r\n            if ('default' in opt) {\r\n                injected = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n            }\r\n            else {\r\n                injected = inject(opt.from || key);\r\n            }\r\n        }\r\n        else {\r\n            injected = inject(opt);\r\n        }\r\n        if (isRef(injected)) {\r\n            // TODO remove the check in 3.3\r\n            if (unwrapRef) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    get: () => injected.value,\r\n                    set: v => (injected.value = v)\r\n                });\r\n            }\r\n            else {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`injected property \"${key}\" is a ref and will be auto-unwrapped ` +\r\n                        `and no longer needs \\`.value\\` in the next minor release. ` +\r\n                        `To opt-in to the new behavior now, ` +\r\n                        `set \\`app.config.unwrapInjectedRef = true\\` (this config is ` +\r\n                        `temporary and will not be needed in the future.)`);\r\n                }\r\n                ctx[key] = injected;\r\n            }\r\n        }\r\n        else {\r\n            ctx[key] = injected;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n        }\r\n    }\r\n}\r\nfunction callHook(hook, instance, type) {\r\n    callWithAsyncErrorHandling(isArray(hook)\r\n        ? hook.map(h => h.bind(instance.proxy))\r\n        : hook.bind(instance.proxy), instance, type);\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nfunction resolveMergedOptions(instance) {\r\n    const base = instance.type;\r\n    const { mixins, extends: extendsOptions } = base;\r\n    const { mixins: globalMixins, optionsCache: cache, config: { optionMergeStrategies } } = instance.appContext;\r\n    const cached = cache.get(base);\r\n    let resolved;\r\n    if (cached) {\r\n        resolved = cached;\r\n    }\r\n    else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n        {\r\n            resolved = base;\r\n        }\r\n    }\r\n    else {\r\n        resolved = {};\r\n        if (globalMixins.length) {\r\n            globalMixins.forEach(m => mergeOptions(resolved, m, optionMergeStrategies, true));\r\n        }\r\n        mergeOptions(resolved, base, optionMergeStrategies);\r\n    }\r\n    cache.set(base, resolved);\r\n    return resolved;\r\n}\r\nfunction mergeOptions(to, from, strats, asMixin = false) {\r\n    const { mixins, extends: extendsOptions } = from;\r\n    if (extendsOptions) {\r\n        mergeOptions(to, extendsOptions, strats, true);\r\n    }\r\n    if (mixins) {\r\n        mixins.forEach((m) => mergeOptions(to, m, strats, true));\r\n    }\r\n    for (const key in from) {\r\n        if (asMixin && key === 'expose') {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`\"expose\" option is ignored when declared in mixins or extends. ` +\r\n                    `It should only be declared in the base component itself.`);\r\n        }\r\n        else {\r\n            const strat = internalOptionMergeStrats[key] || (strats && strats[key]);\r\n            to[key] = strat ? strat(to[key], from[key]) : from[key];\r\n        }\r\n    }\r\n    return to;\r\n}\r\nconst internalOptionMergeStrats = {\r\n    data: mergeDataFn,\r\n    props: mergeObjectOptions,\r\n    emits: mergeObjectOptions,\r\n    // objects\r\n    methods: mergeObjectOptions,\r\n    computed: mergeObjectOptions,\r\n    // lifecycle\r\n    beforeCreate: mergeAsArray,\r\n    created: mergeAsArray,\r\n    beforeMount: mergeAsArray,\r\n    mounted: mergeAsArray,\r\n    beforeUpdate: mergeAsArray,\r\n    updated: mergeAsArray,\r\n    beforeDestroy: mergeAsArray,\r\n    beforeUnmount: mergeAsArray,\r\n    destroyed: mergeAsArray,\r\n    unmounted: mergeAsArray,\r\n    activated: mergeAsArray,\r\n    deactivated: mergeAsArray,\r\n    errorCaptured: mergeAsArray,\r\n    serverPrefetch: mergeAsArray,\r\n    // assets\r\n    components: mergeObjectOptions,\r\n    directives: mergeObjectOptions,\r\n    // watch\r\n    watch: mergeWatchOptions,\r\n    // provide / inject\r\n    provide: mergeDataFn,\r\n    inject: mergeInject\r\n};\r\nfunction mergeDataFn(to, from) {\r\n    if (!from) {\r\n        return to;\r\n    }\r\n    if (!to) {\r\n        return from;\r\n    }\r\n    return function mergedDataFn() {\r\n        return (extend)(isFunction(to) ? to.call(this, this) : to, isFunction(from) ? from.call(this, this) : from);\r\n    };\r\n}\r\nfunction mergeInject(to, from) {\r\n    return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\r\n}\r\nfunction normalizeInject(raw) {\r\n    if (isArray(raw)) {\r\n        const res = {};\r\n        for (let i = 0; i < raw.length; i++) {\r\n            res[raw[i]] = raw[i];\r\n        }\r\n        return res;\r\n    }\r\n    return raw;\r\n}\r\nfunction mergeAsArray(to, from) {\r\n    return to ? [...new Set([].concat(to, from))] : from;\r\n}\r\nfunction mergeObjectOptions(to, from) {\r\n    return to ? extend(extend(Object.create(null), to), from) : from;\r\n}\r\nfunction mergeWatchOptions(to, from) {\r\n    if (!to)\r\n        return from;\r\n    if (!from)\r\n        return to;\r\n    const merged = extend(Object.create(null), to);\r\n    for (const key in from) {\r\n        merged[key] = mergeAsArray(to[key], from[key]);\r\n    }\r\n    return merged;\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    instance.propsDefaults = Object.create(null);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // ensure all declared prop keys are present\r\n    for (const key in instance.propsOptions[0]) {\r\n        if (!(key in props)) {\r\n            props[key] = undefined;\r\n        }\r\n    }\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                let key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        if (value !== attrs[key]) {\r\n                            attrs[key] = value;\r\n                            hasAttrsChanged = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    if (value !== attrs[key]) {\r\n                        attrs[key] = value;\r\n                        hasAttrsChanged = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        if (setFullProps(instance, rawProps, props, attrs)) {\r\n            hasAttrsChanged = true;\r\n        }\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawCurrentProps, key, undefined, instance, true /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps ||\r\n                    (!hasOwn(rawProps, key) &&\r\n                        (!false ))) {\r\n                    delete attrs[key];\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    if (hasAttrsChanged) {\r\n        trigger(instance, \"set\" /* SET */, '$attrs');\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    let rawCastValues;\r\n    if (rawProps) {\r\n        for (let key in rawProps) {\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            const value = rawProps[key];\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n                    props[camelKey] = value;\r\n                }\r\n                else {\r\n                    (rawCastValues || (rawCastValues = {}))[camelKey] = value;\r\n                }\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                if (!(key in attrs) || value !== attrs[key]) {\r\n                    attrs[key] = value;\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        const castValues = rawCastValues || EMPTY_OBJ;\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !hasOwn(castValues, key));\r\n        }\r\n    }\r\n    return hasAttrsChanged;\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                const { propsDefaults } = instance;\r\n                if (key in propsDefaults) {\r\n                    value = propsDefaults[key];\r\n                }\r\n                else {\r\n                    setCurrentInstance(instance);\r\n                    value = propsDefaults[key] = defaultValue.call(null, props);\r\n                    unsetCurrentInstance();\r\n                }\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (isAbsent && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.propsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, EMPTY_ARR);\r\n        return EMPTY_ARR;\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const res = [normalized, needCastKeys];\r\n    cache.set(comp, res);\r\n    return res;\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : ctor === null ? 'null' : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        return expectedTypes.findIndex(t => isSameType(t, type));\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(rawProps, props, instance) {\r\n    const resolvedValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, resolvedValues[key], opt, !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else if (expectedType === 'null') {\r\n        valid = value === null;\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(' | ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => {\r\n    const normalized = withCtx((...args) => {\r\n        if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n            warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n                `this will not track dependencies used in the slot. ` +\r\n                `Invoke the slot function inside the render function instead.`);\r\n        }\r\n        return normalizeSlotValue(rawSlot(...args));\r\n    }, ctx);\r\n    normalized._c = false;\r\n    return normalized;\r\n};\r\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !(false )) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        !isKeepAlive(instance.vnode) &&\r\n        !(false )) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n            // we should avoid the proxy object polluting the slots of the internal instance\r\n            instance.slots = toRaw(children);\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children, optimized) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (optimized && type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n                // #2893\r\n                // when rendering the optimized slots by manually written render function,\r\n                // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n                // i.e. let the `renderSlot` create the bailed Fragment\r\n                if (!optimized && type === 1 /* STABLE */) {\r\n                    delete slots._;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        if (dir.deep) {\r\n            traverse(value);\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        let hook = binding.dir[name];\r\n        if (hook) {\r\n            // disable tracking inside all lifecycle hooks\r\n            // since they can potentially be called inside effects.\r\n            pauseTracking();\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n            resetTracking();\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            errorHandler: undefined,\r\n            warnHandler: undefined,\r\n            compilerOptions: {}\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null),\r\n        optionsCache: new WeakMap(),\r\n        propsCache: new WeakMap(),\r\n        emitsCache: new WeakMap()\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            _instance: null,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate, isSVG) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer, isSVG);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer, isSVG);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        app._instance = vnode.component;\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return getExposeProxy(vnode.component) || vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        app._instance = null;\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\n/**\r\n * Function for handling a template ref\r\n */\r\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode, isUnmount));\r\n        return;\r\n    }\r\n    if (isAsyncWrapper(vnode) && !isUnmount) {\r\n        // when mounting async components, nothing needs to be done,\r\n        // because the template ref is forwarded to inner component\r\n        return;\r\n    }\r\n    const refValue = vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */\r\n        ? getExposeProxy(vnode.component) || vnode.component.proxy\r\n        : vnode.el;\r\n    const value = isUnmount ? null : refValue;\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // dynamic ref changed. unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else {\r\n        const _isString = isString(ref);\r\n        const _isRef = isRef(ref);\r\n        if (_isString || _isRef) {\r\n            const doSet = () => {\r\n                if (rawRef.f) {\r\n                    const existing = _isString ? refs[ref] : ref.value;\r\n                    if (isUnmount) {\r\n                        isArray(existing) && remove(existing, refValue);\r\n                    }\r\n                    else {\r\n                        if (!isArray(existing)) {\r\n                            if (_isString) {\r\n                                refs[ref] = [refValue];\r\n                            }\r\n                            else {\r\n                                ref.value = [refValue];\r\n                                if (rawRef.k)\r\n                                    refs[rawRef.k] = ref.value;\r\n                            }\r\n                        }\r\n                        else if (!existing.includes(refValue)) {\r\n                            existing.push(refValue);\r\n                        }\r\n                    }\r\n                }\r\n                else if (_isString) {\r\n                    refs[ref] = value;\r\n                    if (hasOwn(setupState, ref)) {\r\n                        setupState[ref] = value;\r\n                    }\r\n                }\r\n                else if (isRef(ref)) {\r\n                    ref.value = value;\r\n                    if (rawRef.k)\r\n                        refs[rawRef.k] = value;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid template ref type:', ref, `(${typeof ref})`);\r\n                }\r\n            };\r\n            if (value) {\r\n                doSet.id = -1;\r\n                queuePostRenderEffect(doSet, parentSuspense);\r\n            }\r\n            else {\r\n                doSet();\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn('Invalid template ref type:', ref, `(${typeof ref})`);\r\n        }\r\n    }\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if (!container.hasChildNodes()) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                    `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            flushPostFlushCbs();\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type.toLowerCase() !==\r\n                            node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    vnode.slotScopeIds = slotScopeIds;\r\n                    const container = parentNode(node);\r\n                    mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                    // #3787\r\n                    // if component is async, it may get moved / unmounted before its\r\n                    // inner component is loaded, so we need to give it a placeholder\r\n                    // vnode that matches its adopted DOM.\r\n                    if (isAsyncWrapper(vnode)) {\r\n                        let subTree;\r\n                        if (isFragmentStart) {\r\n                            subTree = createVNode(Fragment);\r\n                            subTree.anchor = nextNode\r\n                                ? nextNode.previousSibling\r\n                                : container.lastChild;\r\n                        }\r\n                        else {\r\n                            subTree =\r\n                                node.nodeType === 3 ? createTextVNode('') : createVNode('div');\r\n                        }\r\n                        subTree.el = node;\r\n                        vnode.component.subTree = subTree;\r\n                    }\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { type, props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // #4006 for form elements with non-string v-model value bindings\r\n        // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n        const forcePatchValue = (type === 'input' && dirs) || type === 'option';\r\n        // skip props & children if this is hoisted static nodes\r\n        // #5405 in dev, always hydrate children for HMR\r\n        if ((process.env.NODE_ENV !== 'production') || forcePatchValue || patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (forcePatchValue ||\r\n                    !optimized ||\r\n                    patchFlag & (16 /* FULL_PROPS */ | 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if ((forcePatchValue && key.endsWith('value')) ||\r\n                            (isOn(key) && !isReservedProp(key))) {\r\n                            patchProp(el, key, null, props[key], false, undefined, parentComponent);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick, false, undefined, parentComponent);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            else if (vnode.type === Text && !vnode.children) {\r\n                continue;\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsPerfStart(instance, type, supported ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsPerfEnd(instance, type, supported ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    const needWarn = [];\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        (process.env.NODE_ENV !== 'production') && needWarn.push(`__VUE_OPTIONS_API__`);\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        (process.env.NODE_ENV !== 'production') && needWarn.push(`__VUE_PROD_DEVTOOLS__`);\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn.length) {\r\n        const multi = needWarn.length > 1;\r\n        console.warn(`Feature flag${multi ? `s` : ``} ${needWarn.join(', ')} ${multi ? `are` : `is`} not explicitly defined. You are running the esm-bundler build of Vue, ` +\r\n            `which expects these compile-time feature flags to be globally injected ` +\r\n            `via the bundler config in order to get better tree-shaking in the ` +\r\n            `production bundle.\\n\\n` +\r\n            `For more details, see https://link.vuejs.org/feature-flags.`);\r\n    }\r\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    const target = getGlobalThis();\r\n    target.__VUE__ = true;\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = (process.env.NODE_ENV !== 'production') && isHmrUpdating ? false : !!n2.dynamicChildren) => {\r\n        if (n1 === n2) {\r\n            return;\r\n        }\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG, n2.el, n2.anchor);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (key !== 'value' && !isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                /**\r\n                 * Special case for setting value on DOM elements:\r\n                 * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\r\n                 * - it needs to be forced (#1471)\r\n                 * #2353 proposes adding another renderer option to configure this, but\r\n                 * the properties affects are so finite it is worth special casing it\r\n                 * here to reduce the complexity. (Special casing it also should not\r\n                 * affect non-DOM renderers)\r\n                 */\r\n                if ('value' in props) {\r\n                    hostPatchProp(el, 'value', null, props.value);\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (slotScopeIds) {\r\n            for (let i = 0; i < slotScopeIds.length; i++) {\r\n                hostSetScopeId(el, slotScopeIds[i]);\r\n            }\r\n        }\r\n        if (parentComponent) {\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                subTree.patchFlag > 0 &&\r\n                subTree.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                const parentVNode = parentComponent.vnode;\r\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        // disable recurse in beforeUpdate hooks\r\n        parentComponent && toggleRecurse(parentComponent, false);\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        parentComponent && toggleRecurse(parentComponent, true);\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        // #1471 force patch value\r\n                        if (next !== prev || key === 'value') {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // oldVNode may be an errored async setup() component inside Suspense\r\n            // which will not have a mounted element\r\n            oldVNode.el &&\r\n                // - In the case of a Fragment, we need to provide the actual parent\r\n                // of the Fragment itself so it can move its children.\r\n                (oldVNode.type === Fragment ||\r\n                    // - In the case of different nodes, there is going to be a replacement\r\n                    // which also requires the correct parent container\r\n                    !isSameVNodeType(oldVNode, newVNode) ||\r\n                    // - In the case of a component, it could contain anything.\r\n                    oldVNode.shapeFlag & (6 /* COMPONENT */ | 64 /* TELEPORT */))\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                // defer patching value\r\n                if (next !== prev && key !== 'value') {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n            if ('value' in newProps) {\r\n                hostPatchProp(el, 'value', oldProps.value, newProps.value);\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        // check if this is a slot fragment with :slotted scope ids\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        n2.slotScopeIds = slotScopeIds;\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `init`);\r\n            }\r\n            setupComponent(instance);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `init`);\r\n            }\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        const componentUpdateFn = () => {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\r\n                toggleRecurse(instance, false);\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if (!isAsyncWrapperVNode &&\r\n                    (vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                toggleRecurse(instance, true);\r\n                if (el && hydrateNode) {\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    const hydrateSubTree = () => {\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            startMeasure(instance, `render`);\r\n                        }\r\n                        instance.subTree = renderComponentRoot(instance);\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            endMeasure(instance, `render`);\r\n                        }\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            startMeasure(instance, `hydrate`);\r\n                        }\r\n                        hydrateNode(el, instance.subTree, instance, parentSuspense, null);\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            endMeasure(instance, `hydrate`);\r\n                        }\r\n                    };\r\n                    if (isAsyncWrapperVNode) {\r\n                        initialVNode.type.__asyncLoader().then(\r\n                        // note: we are moving the render call into an async callback,\r\n                        // which means it won't track dependencies - but it's ok because\r\n                        // a server-rendered async wrapper is already in resolved state\r\n                        // and it will never need to change.\r\n                        () => !instance.isUnmounted && hydrateSubTree());\r\n                    }\r\n                    else {\r\n                        hydrateSubTree();\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `render`);\r\n                    }\r\n                    const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `render`);\r\n                    }\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if (!isAsyncWrapperVNode &&\r\n                    (vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode), parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                if (initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    instance.a && queuePostRenderEffect(instance.a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                // Disallow component effect recursion during pre-lifecycle hooks.\r\n                toggleRecurse(instance, false);\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                toggleRecurse(instance, true);\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, next, vnode), parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        };\r\n        // create reactive effect for rendering\r\n        const effect = (instance.effect = new ReactiveEffect(componentUpdateFn, () => queueJob(instance.update), instance.scope // track it in component's effect scope\r\n        ));\r\n        const update = (instance.update = effect.run.bind(effect));\r\n        update.id = instance.uid;\r\n        // allowRecurse\r\n        // #1801, #2043 component render effects should allow recursive updates\r\n        toggleRecurse(instance, true);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            effect.onTrack = instance.rtc\r\n                ? e => invokeArrayFns(instance.rtc, e)\r\n                : void 0;\r\n            effect.onTrigger = instance.rtg\r\n                ? e => invokeArrayFns(instance.rtg, e)\r\n                : void 0;\r\n            // @ts-ignore (for scheduler)\r\n            update.ownerInstance = instance;\r\n        }\r\n        update();\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children, optimized);\r\n        pauseTracking();\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n        resetTracking();\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode, true);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\r\n        let vnodeHook;\r\n        if (shouldInvokeVnodeHook &&\r\n            (vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\r\n            }\r\n            else if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                patchFlag &\r\n                    (128 /* KEYED_FRAGMENT */ | 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((shouldInvokeVnodeHook &&\r\n            (vnodeHook = props && props.onVnodeUnmounted)) ||\r\n            shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, scope, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        // stop effects in component scope\r\n        scope.stop();\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            // so that scheduler will no longer invoke it\r\n            update.active = false;\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container, isSVG) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction toggleRecurse({ effect, update }, allowed) {\r\n    effect.allowRecurse = update.allowRecurse = allowed;\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always be moved. Therefore, in order to ensure correct move\r\n * position, el should be inherited from previous nodes.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = (u + v) >> 1;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        let { shapeFlag, children, dynamicChildren } = n2;\r\n        // #3302\r\n        // HMR updated, force full diff\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\r\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\r\n        if (target) {\r\n            hostRemove(targetAnchor);\r\n        }\r\n        // an unmounted teleport should always remove its children if not disabled\r\n        if (doRemove || !isTeleportDisabled(props)) {\r\n            hostRemove(anchor);\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    const child = children[i];\r\n                    unmount(child, parentComponent, parentSuspense, true, !!child.dynamicChildren);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name, maybeSelfReference) {\r\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // explicit self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first which is resolved for options API\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if (!res && maybeSelfReference) {\r\n            // fallback to implicit self-reference\r\n            return Component;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            const extra = type === COMPONENTS\r\n                ? `\\nIf this is a native custom element, make sure to exclude it from ` +\r\n                    `component resolution via compilerOptions.isCustomElement.`\r\n                : ``;\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet isBlockTreeEnabled = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    isBlockTreeEnabled += value;\r\n}\r\nfunction setupBlock(vnode) {\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren =\r\n        isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\r\n    return setupBlock(createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, true /* isBlock */));\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    return setupBlock(createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */));\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref, ref_key, ref_for }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for }\r\n            : ref\r\n        : null);\r\n};\r\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1 /* ELEMENT */, isBlockNode = false, needFullChildrenNormalization = false) {\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        slotScopeIds: null,\r\n        children,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    if (needFullChildrenNormalization) {\r\n        normalizeChildren(vnode, children);\r\n        // normalize suspense children\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            type.normalize(vnode);\r\n        }\r\n    }\r\n    else if (children) {\r\n        // compiled element vnode - if children is passed, only possible types are\r\n        // string or Array.\r\n        vnode.shapeFlag |= isString(children)\r\n            ? 8 /* TEXT_CHILDREN */\r\n            : 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    // track vnode for block tree\r\n    if (isBlockTreeEnabled > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (vnode.patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        vnode.patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nconst createVNode = ((process.env.NODE_ENV !== 'production') ? createVNodeWithArgsTransform : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        props = guardReactiveProps(props);\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    return createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, isBlockNode, true);\r\n}\r\nfunction guardReactiveProps(props) {\r\n    if (!props)\r\n        return null;\r\n    return isProxy(props) || InternalObjectKey in props\r\n        ? extend({}, props)\r\n        : props;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    const cloned = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        slotScopeIds: vnode.slotScopeIds,\r\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* HOISTED */ && isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: preserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n    return cloned;\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, \r\n        // #3666, avoid reference pollution when reusing vnode\r\n        child.slice());\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return cloneIfMounted(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null || child.memo ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & (1 /* ELEMENT */ | 64 /* TELEPORT */)) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && (slot._d = false);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && (slot._d = true);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.slots._ === 1 /* STABLE */) {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n                else {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = {};\r\n    for (let i = 0; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (incoming &&\r\n                    existing !== incoming &&\r\n                    !(isArray(existing) && existing.includes(incoming))) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, incoming)\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem, cache, index) {\r\n    let ret;\r\n    const cached = (cache && cache[index]);\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i, undefined, cached && cached[i]);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i, undefined, cached && cached[i]);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, (item, i) => renderItem(item, i, undefined, cached && cached[i]));\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i, cached && cached[i]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    if (cache) {\r\n        cache[index] = ret;\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback, noSlotted) {\r\n    if (currentRenderingInstance.isCE) {\r\n        return createVNode('slot', name === 'default' ? null : { name }, fallback && fallback());\r\n    }\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    if (slot && slot._c) {\r\n        slot._d = false;\r\n    }\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    if (!noSlotted && rendered.scopeId) {\r\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\r\n    }\r\n    if (slot && slot._c) {\r\n        slot._d = true;\r\n    }\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return getExposeProxy(i) || i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // prioritize <script setup> bindings during dev.\r\n        // this allows even properties that start with _ or $ to be used - so that\r\n        // it aligns with the production behavior where the render fn is inlined and\r\n        // indeed has access to all declared variables.\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            setupState !== EMPTY_OBJ &&\r\n            setupState.__isScriptSetup &&\r\n            hasOwn(setupState, key)) {\r\n            return setupState[key];\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 1 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 2 /* DATA */:\r\n                        return data[key];\r\n                    case 4 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 3 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 1 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 2 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 3 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 4 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\r\n                accessCache[key] = 0 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 4 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            {\r\n                return globalProperties[key];\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n            return true;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n            return true;\r\n        }\r\n        else if (hasOwn(instance.props, key)) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (!!accessCache[key] ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    },\r\n    defineProperty(target, key, descriptor) {\r\n        if (descriptor.get != null) {\r\n            this.set(target, key, descriptor.get(), null);\r\n        }\r\n        else if (descriptor.value != null) {\r\n            this.set(target, key, descriptor.value, null);\r\n        }\r\n        return Reflect.defineProperty(target, key, descriptor);\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// dev only\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createDevRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (!setupState.__isScriptSetup) {\r\n            if (key[0] === '$' || key[0] === '_') {\r\n                warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                    `which are reserved prefixes for Vue internals.`);\r\n                return;\r\n            }\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => setupState[key],\r\n                set: NOOP\r\n            });\r\n        }\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        effect: null,\r\n        update: null,\r\n        scope: new EffectScope(true /* detached */),\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        exposeProxy: null,\r\n        withProxy: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // props default value\r\n        propsDefaults: EMPTY_OBJ,\r\n        // inheritAttrs\r\n        inheritAttrs: type.inheritAttrs,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null,\r\n        sp: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createDevRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit$1.bind(null, instance);\r\n    // apply custom element special handling\r\n    if (vnode.ce) {\r\n        vnode.ce(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n    instance.scope.on();\r\n};\r\nconst unsetCurrentInstance = () => {\r\n    currentInstance && currentInstance.scope.off();\r\n    currentInstance = null;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n        if (Component.compilerOptions && isRuntimeOnly()) {\r\n            warn(`\"compilerOptions\" is only supported when using a build of Vue that ` +\r\n                `includes the runtime compiler. Since you are using a runtime-only ` +\r\n                `build, the options should be passed via your build tool config instead.`);\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        setCurrentInstance(instance);\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        unsetCurrentInstance();\r\n        if (isPromise(setupResult)) {\r\n            setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult\r\n                    .then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult, isSSR);\r\n                })\r\n                    .catch(e => {\r\n                    handleError(e, instance, 0 /* SETUP_FUNCTION */);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult, isSSR);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance, isSSR);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        if (instance.type.__ssrInlineRender) {\r\n            // when the function's name is `ssrRender` (compiled by SFC inline mode),\r\n            // set it as ssrRender instead.\r\n            instance.ssrRender = setupResult;\r\n        }\r\n        else {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance, isSSR);\r\n}\r\nlet compile;\r\nlet installWithProxy;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n    installWithProxy = i => {\r\n        if (i.render._rc) {\r\n            i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    };\r\n}\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    // could be already set when returned from setup()\r\n    if (!instance.render) {\r\n        // only do on-the-fly compile if not in SSR - SSR on-the-fly compilation\r\n        // is done by server-renderer\r\n        if (!isSSR && compile && !Component.render) {\r\n            const template = Component.template;\r\n            if (template) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `compile`);\r\n                }\r\n                const { isCustomElement, compilerOptions } = instance.appContext.config;\r\n                const { delimiters, compilerOptions: componentCompilerOptions } = Component;\r\n                const finalCompilerOptions = extend(extend({\r\n                    isCustomElement,\r\n                    delimiters\r\n                }, compilerOptions), componentCompilerOptions);\r\n                Component.render = compile(template, finalCompilerOptions);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `compile`);\r\n                }\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (installWithProxy) {\r\n            installWithProxy(instance);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__ && !(false )) {\r\n        setCurrentInstance(instance);\r\n        pauseTracking();\r\n        applyOptions(instance);\r\n        resetTracking();\r\n        unsetCurrentInstance();\r\n    }\r\n    // warn missing template/render\r\n    // the runtime compilation of template in SSR is done by server-render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP && !isSSR) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nfunction createAttrsProxy(instance) {\r\n    return new Proxy(instance.attrs, (process.env.NODE_ENV !== 'production')\r\n        ? {\r\n            get(target, key) {\r\n                markAttrsAccessed();\r\n                track(instance, \"get\" /* GET */, '$attrs');\r\n                return target[key];\r\n            },\r\n            set() {\r\n                warn(`setupContext.attrs is readonly.`);\r\n                return false;\r\n            },\r\n            deleteProperty() {\r\n                warn(`setupContext.attrs is readonly.`);\r\n                return false;\r\n            }\r\n        }\r\n        : {\r\n            get(target, key) {\r\n                track(instance, \"get\" /* GET */, '$attrs');\r\n                return target[key];\r\n            }\r\n        });\r\n}\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = exposed || {};\r\n    };\r\n    let attrs;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return attrs || (attrs = createAttrsProxy(instance));\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            get attrs() {\r\n                return attrs || (attrs = createAttrsProxy(instance));\r\n            },\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\nfunction getExposeProxy(instance) {\r\n    if (instance.exposed) {\r\n        return (instance.exposeProxy ||\r\n            (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\r\n                get(target, key) {\r\n                    if (key in target) {\r\n                        return target[key];\r\n                    }\r\n                    else if (key in publicPropertiesMap) {\r\n                        return publicPropertiesMap[key](instance);\r\n                    }\r\n                }\r\n            })));\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nconst computed = ((getterOrOptions, debugOptions) => {\r\n    // @ts-ignore\r\n    return computed$1(getterOrOptions, debugOptions, isInSSRComponentSetup);\r\n});\n\n// dev only\r\nconst warnRuntimeUsage = (method) => warn(`${method}() is a compiler-hint helper that is only usable inside ` +\r\n    `<script setup> of a single file component. Its arguments should be ` +\r\n    `compiled away and passing it at runtime has no effect.`);\r\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineProps`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmits() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineEmits`);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. variables inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\nfunction defineExpose(exposed) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineExpose`);\r\n    }\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` declaration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\r\nfunction withDefaults(props, defaults) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`withDefaults`);\r\n    }\r\n    return null;\r\n}\r\nfunction useSlots() {\r\n    return getContext().slots;\r\n}\r\nfunction useAttrs() {\r\n    return getContext().attrs;\r\n}\r\nfunction getContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nfunction mergeDefaults(raw, defaults) {\r\n    const props = isArray(raw)\r\n        ? raw.reduce((normalized, p) => ((normalized[p] = {}), normalized), {})\r\n        : raw;\r\n    for (const key in defaults) {\r\n        const opt = props[key];\r\n        if (opt) {\r\n            if (isArray(opt) || isFunction(opt)) {\r\n                props[key] = { type: opt, default: defaults[key] };\r\n            }\r\n            else {\r\n                opt.default = defaults[key];\r\n            }\r\n        }\r\n        else if (opt === null) {\r\n            props[key] = { default: defaults[key] };\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`props default key \"${key}\" has no corresponding declaration.`);\r\n        }\r\n    }\r\n    return props;\r\n}\r\n/**\r\n * Used to create a proxy for the rest element when destructuring props with\r\n * defineProps().\r\n * @internal\r\n */\r\nfunction createPropsRestProxy(props, excludedKeys) {\r\n    const ret = {};\r\n    for (const key in props) {\r\n        if (!excludedKeys.includes(key)) {\r\n            Object.defineProperty(ret, key, {\r\n                enumerable: true,\r\n                get: () => props[key]\r\n            });\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\r\nfunction withAsyncContext(getAwaitable) {\r\n    const ctx = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !ctx) {\r\n        warn(`withAsyncContext called without active current instance. ` +\r\n            `This is likely a bug.`);\r\n    }\r\n    let awaitable = getAwaitable();\r\n    unsetCurrentInstance();\r\n    if (isPromise(awaitable)) {\r\n        awaitable = awaitable.catch(e => {\r\n            setCurrentInstance(ctx);\r\n            throw e;\r\n        });\r\n    }\r\n    return [awaitable, () => setCurrentInstance(ctx)];\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction isShallow(value) {\r\n    return !!(value && value[\"__v_isShallow\" /* IS_SHALLOW */]);\r\n}\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, isShallow(obj) ? 'ShallowReactive' : 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, isShallow(obj) ? 'ShallowReadonly' : 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (isShallow(v)) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\nfunction withMemo(memo, render, cache, index) {\r\n    const cached = cache[index];\r\n    if (cached && isMemoSame(cached, memo)) {\r\n        return cached;\r\n    }\r\n    const ret = render();\r\n    // shallow clone\r\n    ret.memo = memo.slice();\r\n    return (cache[index] = ret);\r\n}\r\nfunction isMemoSame(cached, memo) {\r\n    const prev = cached.memo;\r\n    if (prev.length != memo.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < prev.length; i++) {\r\n        if (prev[i] !== memo[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    // make sure to let parent block track it when returning cached\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(cached);\r\n    }\r\n    return true;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.2.31\";\r\nconst _ssrUtils = {\r\n    createComponentInstance,\r\n    setupComponent,\r\n    renderComponentRoot,\r\n    setCurrentRenderingInstance,\r\n    isVNode,\r\n    normalizeVNode\r\n};\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (_ssrUtils );\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nconst resolveFilter = null;\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nconst compatUtils = (null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, compatUtils, computed, createBlock, createCommentVNode, createElementBlock, createBaseVNode as createElementVNode, createHydrationRenderer, createPropsRestProxy, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmits, defineExpose, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, guardReactiveProps, h, handleError, initCustomFormatter, inject, isMemoSame, isRuntimeOnly, isVNode, mergeDefaults, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onServerPrefetch, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveFilter, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useAttrs, useSSRContext, useSlots, useTransitionState, version, warn, watch, watchEffect, watchPostEffect, watchSyncEffect, withAsyncContext, withCtx, withDefaults, withDirectives, withMemo, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, defineComponent, nextTick, createVNode, getCurrentInstance, watchPostEffect, onMounted, onUnmounted, Fragment, Static, h, BaseTransition, useTransitionState, onUpdated, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createRenderer, isRuntimeOnly, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, includeBooleanAttr, isOn, isModelListener, isFunction, toNumber, camelize as camelize$1, extend, EMPTY_OBJ, isObject, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nconst templateContainer = doc && doc.createElement('template');\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is, props) => {\r\n        const el = isSVG\r\n            ? doc.createElementNS(svgNS, tag)\r\n            : doc.createElement(tag, is ? { is } : undefined);\r\n        if (tag === 'select' && props && props.multiple != null) {\r\n            el.setAttribute('multiple', props.multiple);\r\n        }\r\n        return el;\r\n    },\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        const cloned = el.cloneNode(true);\r\n        // #3072\r\n        // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n        // - normally, elements using `:value` bindings will not be hoisted, but if\r\n        //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n        //   hoisted.\r\n        // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n        //   cloneNode() does not copy the custom property we attached.\r\n        // - This may need to account for other custom DOM properties we attach to\r\n        //   elements in addition to `_value` in the future.\r\n        if (`_value` in el) {\r\n            cloned._value = el._value;\r\n        }\r\n        return cloned;\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG, start, end) {\r\n        // <parent> before | first ... last | anchor </parent>\r\n        const before = anchor ? anchor.previousSibling : parent.lastChild;\r\n        // #5308 can only take cached path if:\r\n        // - has a single root node\r\n        // - nextSibling info is still available\r\n        if (start && (start === end || start.nextSibling)) {\r\n            // cached\r\n            while (true) {\r\n                parent.insertBefore(start.cloneNode(true), anchor);\r\n                if (start === end || !(start = start.nextSibling))\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            // fresh insert\r\n            templateContainer.innerHTML = isSVG ? `<svg>${content}</svg>` : content;\r\n            const template = templateContainer.content;\r\n            if (isSVG) {\r\n                // remove outer svg wrapper\r\n                const wrapper = template.firstChild;\r\n                while (wrapper.firstChild) {\r\n                    template.appendChild(wrapper.firstChild);\r\n                }\r\n                template.removeChild(wrapper);\r\n            }\r\n            parent.insertBefore(template, anchor);\r\n        }\r\n        return [\r\n            // first\r\n            before ? before.nextSibling : parent.firstChild,\r\n            // last\r\n            anchor ? anchor.previousSibling : parent.lastChild\r\n        ];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    // directly setting className should be faster than setAttribute in theory\r\n    // if this is an element during a transition, take the temporary transition\r\n    // classes into account.\r\n    const transitionClasses = el._vtc;\r\n    if (transitionClasses) {\r\n        value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(' ');\r\n    }\r\n    if (value == null) {\r\n        el.removeAttribute('class');\r\n    }\r\n    else if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    const isCssString = isString(next);\r\n    if (next && !isCssString) {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const currentDisplay = style.display;\r\n        if (isCssString) {\r\n            if (prev !== next) {\r\n                style.cssText = next;\r\n            }\r\n        }\r\n        else if (prev) {\r\n            el.removeAttribute('style');\r\n        }\r\n        // indicates that the `display` of the element is controlled by `v-show`,\r\n        // so we always keep the current `display` value regardless of the `style`\r\n        // value, thus handing over control to `v-show`.\r\n        if ('_vod' in el) {\r\n            style.display = currentDisplay;\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG, instance) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && !includeBooleanAttr(value))) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' &&\r\n        el.tagName !== 'PROGRESS' &&\r\n        // custom elements may use _value internally\r\n        !el.tagName.includes('-')) {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue ||\r\n            // #4956: always set for OPTION elements because its value falls back to\r\n            // textContent if no value attribute is present. And setting .value for\r\n            // OPTION has no side effect\r\n            el.tagName === 'OPTION') {\r\n            el.value = newValue;\r\n        }\r\n        if (value == null) {\r\n            el.removeAttribute(key);\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = includeBooleanAttr(value);\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            // the value of some IDL attr must be greater than 0, e.g. input.size = 0 -> error\r\n            try {\r\n                el[key] = 0;\r\n            }\r\n            catch (_a) { }\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\nlet skipTimestampCheck = false;\r\nif (typeof window !== 'undefined') {\r\n    // Determine what event timestamp the browser is using. Annoyingly, the\r\n    // timestamp can either be hi-res (relative to page load) or low-res\r\n    // (relative to UNIX epoch), so in order to compare time we have to use the\r\n    // same timestamp type when saving the flush timestamp.\r\n    if (_getNow() > document.createEvent('Event').timeStamp) {\r\n        // if the low-res timestamp which is bigger than the event timestamp\r\n        // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n        // and we need to use the hi-res version for event listeners as well.\r\n        _getNow = () => performance.now();\r\n    }\r\n    // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n    // and does not fire microtasks in between event propagation, so safe to exclude.\r\n    const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i);\r\n    skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53);\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [hyphenate(name.slice(2)), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    if (key === 'class') {\r\n        patchClass(el, nextValue, isSVG);\r\n    }\r\n    else if (key === 'style') {\r\n        patchStyle(el, prevValue, nextValue);\r\n    }\r\n    else if (isOn(key)) {\r\n        // ignore v-model listeners\r\n        if (!isModelListener(key)) {\r\n            patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n        }\r\n    }\r\n    else if (key[0] === '.'\r\n        ? ((key = key.slice(1)), true)\r\n        : key[0] === '^'\r\n            ? ((key = key.slice(1)), false)\r\n            : shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n        patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n    }\r\n    else {\r\n        // special case for <input v-model type=\"checkbox\"> with\r\n        // :true-value & :false-value\r\n        // store value as dom properties since non-string values will be\r\n        // stringified.\r\n        if (key === 'true-value') {\r\n            el._trueValue = nextValue;\r\n        }\r\n        else if (key === 'false-value') {\r\n            el._falseValue = nextValue;\r\n        }\r\n        patchAttr(el, key, nextValue, isSVG);\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML & textContent\r\n        if (key === 'innerHTML' || key === 'textContent') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787, #2840 form property on form elements is readonly and must be set as\r\n    // attribute.\r\n    if (key === 'form') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // #2766 <textarea type> must be set as attribute\r\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction defineCustomElement(options, hydate) {\r\n    const Comp = defineComponent(options);\r\n    class VueCustomElement extends VueElement {\r\n        constructor(initialProps) {\r\n            super(Comp, initialProps, hydate);\r\n        }\r\n    }\r\n    VueCustomElement.def = Comp;\r\n    return VueCustomElement;\r\n}\r\nconst defineSSRCustomElement = ((options) => {\r\n    // @ts-ignore\r\n    return defineCustomElement(options, hydrate);\r\n});\r\nconst BaseClass = (typeof HTMLElement !== 'undefined' ? HTMLElement : class {\r\n});\r\nclass VueElement extends BaseClass {\r\n    constructor(_def, _props = {}, hydrate) {\r\n        super();\r\n        this._def = _def;\r\n        this._props = _props;\r\n        /**\r\n         * @internal\r\n         */\r\n        this._instance = null;\r\n        this._connected = false;\r\n        this._resolved = false;\r\n        this._numberProps = null;\r\n        if (this.shadowRoot && hydrate) {\r\n            hydrate(this._createVNode(), this.shadowRoot);\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && this.shadowRoot) {\r\n                warn(`Custom element has pre-rendered declarative shadow root but is not ` +\r\n                    `defined as hydratable. Use \\`defineSSRCustomElement\\`.`);\r\n            }\r\n            this.attachShadow({ mode: 'open' });\r\n        }\r\n    }\r\n    connectedCallback() {\r\n        this._connected = true;\r\n        if (!this._instance) {\r\n            this._resolveDef();\r\n        }\r\n    }\r\n    disconnectedCallback() {\r\n        this._connected = false;\r\n        nextTick(() => {\r\n            if (!this._connected) {\r\n                render(null, this.shadowRoot);\r\n                this._instance = null;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * resolve inner component definition (handle possible async component)\r\n     */\r\n    _resolveDef() {\r\n        if (this._resolved) {\r\n            return;\r\n        }\r\n        this._resolved = true;\r\n        // set initial attrs\r\n        for (let i = 0; i < this.attributes.length; i++) {\r\n            this._setAttr(this.attributes[i].name);\r\n        }\r\n        // watch future attr changes\r\n        new MutationObserver(mutations => {\r\n            for (const m of mutations) {\r\n                this._setAttr(m.attributeName);\r\n            }\r\n        }).observe(this, { attributes: true });\r\n        const resolve = (def) => {\r\n            const { props, styles } = def;\r\n            const hasOptions = !isArray(props);\r\n            const rawKeys = props ? (hasOptions ? Object.keys(props) : props) : [];\r\n            // cast Number-type props set before resolve\r\n            let numberProps;\r\n            if (hasOptions) {\r\n                for (const key in this._props) {\r\n                    const opt = props[key];\r\n                    if (opt === Number || (opt && opt.type === Number)) {\r\n                        this._props[key] = toNumber(this._props[key]);\r\n                        (numberProps || (numberProps = Object.create(null)))[key] = true;\r\n                    }\r\n                }\r\n            }\r\n            this._numberProps = numberProps;\r\n            // check if there are props set pre-upgrade or connect\r\n            for (const key of Object.keys(this)) {\r\n                if (key[0] !== '_') {\r\n                    this._setProp(key, this[key], true, false);\r\n                }\r\n            }\r\n            // defining getter/setters on prototype\r\n            for (const key of rawKeys.map(camelize$1)) {\r\n                Object.defineProperty(this, key, {\r\n                    get() {\r\n                        return this._getProp(key);\r\n                    },\r\n                    set(val) {\r\n                        this._setProp(key, val);\r\n                    }\r\n                });\r\n            }\r\n            // apply CSS\r\n            this._applyStyles(styles);\r\n            // initial render\r\n            this._update();\r\n        };\r\n        const asyncDef = this._def.__asyncLoader;\r\n        if (asyncDef) {\r\n            asyncDef().then(resolve);\r\n        }\r\n        else {\r\n            resolve(this._def);\r\n        }\r\n    }\r\n    _setAttr(key) {\r\n        let value = this.getAttribute(key);\r\n        if (this._numberProps && this._numberProps[key]) {\r\n            value = toNumber(value);\r\n        }\r\n        this._setProp(camelize$1(key), value, false);\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _getProp(key) {\r\n        return this._props[key];\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _setProp(key, val, shouldReflect = true, shouldUpdate = true) {\r\n        if (val !== this._props[key]) {\r\n            this._props[key] = val;\r\n            if (shouldUpdate && this._instance) {\r\n                this._update();\r\n            }\r\n            // reflect\r\n            if (shouldReflect) {\r\n                if (val === true) {\r\n                    this.setAttribute(hyphenate(key), '');\r\n                }\r\n                else if (typeof val === 'string' || typeof val === 'number') {\r\n                    this.setAttribute(hyphenate(key), val + '');\r\n                }\r\n                else if (!val) {\r\n                    this.removeAttribute(hyphenate(key));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _update() {\r\n        render(this._createVNode(), this.shadowRoot);\r\n    }\r\n    _createVNode() {\r\n        const vnode = createVNode(this._def, extend({}, this._props));\r\n        if (!this._instance) {\r\n            vnode.ce = instance => {\r\n                this._instance = instance;\r\n                instance.isCE = true;\r\n                // HMR\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    instance.ceReload = newStyles => {\r\n                        // always reset styles\r\n                        if (this._styles) {\r\n                            this._styles.forEach(s => this.shadowRoot.removeChild(s));\r\n                            this._styles.length = 0;\r\n                        }\r\n                        this._applyStyles(newStyles);\r\n                        // if this is an async component, ceReload is called from the inner\r\n                        // component so no need to reload the async wrapper\r\n                        if (!this._def.__asyncLoader) {\r\n                            // reload\r\n                            this._instance = null;\r\n                            this._update();\r\n                        }\r\n                    };\r\n                }\r\n                // intercept emit\r\n                instance.emit = (event, ...args) => {\r\n                    this.dispatchEvent(new CustomEvent(event, {\r\n                        detail: args\r\n                    }));\r\n                };\r\n                // locate nearest Vue custom element parent for provide/inject\r\n                let parent = this;\r\n                while ((parent =\r\n                    parent && (parent.parentNode || parent.host))) {\r\n                    if (parent instanceof VueElement) {\r\n                        instance.parent = parent._instance;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        return vnode;\r\n    }\r\n    _applyStyles(styles) {\r\n        if (styles) {\r\n            styles.forEach(css => {\r\n                const s = document.createElement('style');\r\n                s.textContent = css;\r\n                this.shadowRoot.appendChild(s);\r\n                // record for HMR\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    (this._styles || (this._styles = [])).push(s);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    watchPostEffect(setVars);\r\n    onMounted(() => {\r\n        const ob = new MutationObserver(setVars);\r\n        ob.observe(instance.subTree.el.parentNode, { childList: true });\r\n        onUnmounted(() => ob.disconnect());\r\n    });\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        setVarsOnNode(vnode.el, vars);\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n    else if (vnode.type === Static) {\r\n        let { el, anchor } = vnode;\r\n        while (el) {\r\n            setVarsOnNode(el, vars);\r\n            if (el === anchor)\r\n                break;\r\n            el = el.nextSibling;\r\n        }\r\n    }\r\n}\r\nfunction setVarsOnNode(el, vars) {\r\n    if (el.nodeType === 1) {\r\n        const style = el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props =\r\n    /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\r\nconst callHook = (hook, args = []) => {\r\n    if (isArray(hook)) {\r\n        hook.forEach(h => h(...args));\r\n    }\r\n    else if (hook) {\r\n        hook(...args);\r\n    }\r\n};\r\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\r\nconst hasExplicitCallback = (hook) => {\r\n    return hook\r\n        ? isArray(hook)\r\n            ? hook.some(h => h.length > 1)\r\n            : hook.length > 1\r\n        : false;\r\n};\r\nfunction resolveTransitionProps(rawProps) {\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (rawProps.css === false) {\r\n        return baseProps;\r\n    }\r\n    const { name = 'v', type, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            callHook(hook, [el, resolve]);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!hasExplicitCallback(hook)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            callHook(onBeforeEnter, [el]);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            callHook(onBeforeAppear, [el]);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!hasExplicitCallback(onLeave)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            callHook(onLeave, [el, resolve]);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            callHook(onEnterCancelled, [el]);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            callHook(onAppearCancelled, [el]);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            callHook(onLeaveCancelled, [el]);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            let tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1 ? root : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || (vnode.props && vnode.props.type === 'number');\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (lazy) {\r\n                return;\r\n            }\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    // #4096 array checkboxes need to be deep traversed\r\n    deep: true,\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    // <select multiple> value need to be deep traversed\r\n    deep: true,\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                if (el.selectedIndex !== i)\r\n                    el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple && el.selectedIndex !== -1) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nfunction initVModelForSSR() {\r\n    vModelText.getSSRProps = ({ value }) => ({ value });\r\n    vModelRadio.getSSRProps = ({ value }, vnode) => {\r\n        if (vnode.props && looseEqual(vnode.props.value, value)) {\r\n            return { checked: true };\r\n        }\r\n    };\r\n    vModelCheckbox.getSSRProps = ({ value }, vnode) => {\r\n        if (isArray(value)) {\r\n            if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\r\n                return { checked: true };\r\n            }\r\n        }\r\n        else if (isSet(value)) {\r\n            if (vnode.props && value.has(vnode.props.value)) {\r\n                return { checked: true };\r\n            }\r\n        }\r\n        else if (value) {\r\n            return { checked: true };\r\n        }\r\n    };\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event)) {\r\n            return;\r\n        }\r\n        const eventKey = hyphenate(event.key);\r\n        if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return fn(event);\r\n        }\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nfunction initVShowForSSR() {\r\n    vShow.getSSRProps = ({ value }) => {\r\n        if (!value) {\r\n            return { style: { display: 'none' } };\r\n        }\r\n    };\r\n}\n\nconst rendererOptions = extend({ patchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return (renderer ||\r\n        (renderer = createRenderer(rendererOptions)));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCompilerOptionsCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            // __UNSAFE__\r\n            // Reason: potential execution of JS expressions in in-DOM template.\r\n            // The user must make sure the in-DOM template is trusted. If it's\r\n            // rendered by the server, the template should not contain any user data.\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container, false, container instanceof SVGElement);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCompilerOptionsCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true, container instanceof SVGElement);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\n// dev only\r\nfunction injectCompilerOptionsCheck(app) {\r\n    if (isRuntimeOnly()) {\r\n        const isCustomElement = app.config.isCustomElement;\r\n        Object.defineProperty(app.config, 'isCustomElement', {\r\n            get() {\r\n                return isCustomElement;\r\n            },\r\n            set() {\r\n                warn(`The \\`isCustomElement\\` config option is deprecated. Use ` +\r\n                    `\\`compilerOptions.isCustomElement\\` instead.`);\r\n            }\r\n        });\r\n        const compilerOptions = app.config.compilerOptions;\r\n        const msg = `The \\`compilerOptions\\` config option is only respected when using ` +\r\n            `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\r\n            `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\r\n            `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\r\n            `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\r\n            `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\r\n            `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`;\r\n        Object.defineProperty(app.config, 'compilerOptions', {\r\n            get() {\r\n                warn(msg);\r\n                return compilerOptions;\r\n            },\r\n            set() {\r\n                warn(msg);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        window.ShadowRoot &&\r\n        container instanceof window.ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\r\nlet ssrDirectiveInitialized = false;\r\n/**\r\n * @internal\r\n */\r\nconst initDirectivesForSSR = () => {\r\n        if (!ssrDirectiveInitialized) {\r\n            ssrDirectiveInitialized = true;\r\n            initVModelForSSR();\r\n            initVShowForSSR();\r\n        }\r\n    }\r\n    ;\n\nexport { Transition, TransitionGroup, VueElement, createApp, createSSRApp, defineCustomElement, defineSSRCustomElement, hydrate, initDirectivesForSSR, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","<template>\n    <nav>\n        <span ref=\"inicio\">\n            <router-link to=\"/#inicio\">Início</router-link>\n        </span>\n        <span ref=\"sobre-nos\">\n            <router-link to=\"/#sobre-nos\">Sobre Nós</router-link>\n        </span>\n        <span ref=\"sermoes\">\n            <router-link to=\"/#sermoes\">Sermões</router-link>\n        </span>\n        <span ref=\"ministerios\">\n            <router-link to=\"/#ministerios\">Ministérios</router-link>\n        </span>\n        <span ref=\"contato\">\n            <router-link to=\"/#contato\">Contato</router-link>\n        </span>\n    </nav>\n</template>\n\n<script>\nexport default {\n    methods: {\n        activate(item) {\n            // if null, clear active mark\n            if (!item) {\n                this.$el.querySelector('.selected')?.classList.remove('selected')\n                return\n            }\n\n            const next = this.$refs[item]\n            if (next) {\n                const selected = this.$el.querySelector('.selected')\n                if (selected !== next) {\n                    selected?.classList.remove('selected')\n                    next.classList.add('selected')\n                }\n            }\n        }\n    }\n}\n</script>\n\n<style scoped lang=\"stylus\">\nnav\n    display flex\n    margin 0\n    padding 0\n    white-space nowrap\n\n    a\n        color #444\n        font-size @css{min(16px, max(14px, 1.5vw))}\n        font-weight 600\n        padding 8px\n        position relative\n        text-decoration none\n        text-transform uppercase\n\nnav span.selected a,\nnav:hover span:hover a\n    color #3069B3\n\nnav span.selected a:after,\nnav:hover span:hover a:after\n    background #3069B3\n    bottom 0px\n    content ''\n    height 4px\n    display block\n    left 8px\n    position absolute\n    right 8px\n\nnav:hover span a\n    color #444\n\nnav:hover span a:after\n    display none\n</style>\n","<template>\n    <div id=\"content\">\n        <a id=\"menu\" :onclick=\"toggleMenu\" :class=\"{ active: menuVisible }\">\n            Menu <i id=\"arrow\" class=\"fas fa-angle-double-down\"></i>\n        </a>\n        <nav :class=\"{ hidden: !menuVisible }\">\n            <a :onclick=\"toggleMenu\" href=\"/#sobre-nos\">Sobre Nós</a>\n            <a :onclick=\"toggleMenu\" href=\"/#sermoes\">Sermões</a>\n            <a :onclick=\"toggleMenu\" href=\"/#ministerios\">Ministérios</a>\n            <a :onclick=\"toggleMenu\" href=\"/#contato\">Contato</a>\n        </nav>\n    </div>\n</template>\n\n<script>\nexport default {\n    data: function() {\n        return {\n            menuVisible: false,\n        }\n    },\n    methods: {\n        toggleMenu: function() {\n            this.menuVisible = !this.menuVisible\n        }\n    }\n}\n</script>\n\n<style scoped lang=\"stylus\">\n#content\n    padding 10px 0\n\n    a\n        color #444\n        border-top 1px solid #eee\n        font-size 14px\n        line-height 14px\n        padding 8px\n        text-align center\n        text-decoration none\n        text-transform uppercase\n        white-space nowrap\n        width 100%\n\n    a#menu\n        cursor pointer\n        display flex\n        font-weight 600\n        gap 3px\n        justify-content center\n\n    i#arrow\n        display inline-block\n        transition transform 0.5s ease\n\n    a#menu.active i#arrow\n        transform rotate(180deg)\n\n    nav\n        display flex\n        flex-flow column\n        max-height 600px /* must be set but value doesn't matter */\n        transition max-height 0.5s ease\n        width 100%\n\n    nav.hidden\n        display none\n        max-height 0\n</style>\n","\nexport default class Bus {\n  constructor() {\n    this.last = {}\n    this.callbacks = {}\n  }\n\n  once(event, f) {\n    if (this.last[event]) {\n      f()\n      delete this.last[event]\n      return\n    }\n\n    this.callbacks[event] = this.callbacks[event] || []\n    this.callbacks[event].push(f)\n  }\n\n  emit(event) {\n    if (!this.callbacks[event]?.length) {\n      this.last[event] = true\n      return\n    }\n\n    while (this.callbacks[event]?.length) {\n      this.callbacks[event].shift()()\n    }\n  }\n}\n","import { useQuery, useResult } from '@vue/apollo-composable'\nimport gql from 'graphql-tag'\n\nexport default {\n  home: () => {\n    const { result, loading } = useQuery(gql`\n      query {\n        site: generalSettings {\n          title\n          description\n        }\n        theme: crbThemeOptions {\n          logo\n          welcomeTitle\n          welcomeSubtitle\n          welcomeVideo\n          banners {\n            image\n            page {\n              uri\n            }\n          }\n          aboutUs {\n            title\n            content\n            image\n            actions {\n              text\n              page {\n                uri\n              }\n            }\n          }\n          groups {\n            name\n            image\n            page {\n              uri\n            }\n          }\n          contactWhatsapp,\n          contactPhone,\n          contactLocation,\n          contactEmail,\n          footerFirstTitle,\n          footerFirst,\n          footerSecondTitle,\n          footerSecond,\n          socialYoutube,\n          socialInstagram,\n          socialFacebook,\n          socialSpotify,\n        }\n        sermons: sermonSeries {\n          nodes {\n            name\n            slug\n            count\n            image\n          }\n        }\n      }`)\n\n    return {\n      loading,\n      data: useResult(result, null, data => ({\n        title: data.site.title,\n        subtitle: data.site.description,\n        logo: data.theme.logo,\n        welcome: {\n          title: data.theme.welcomeTitle,\n          subtitle: data.theme.welcomeSubtitle,\n          video: data.theme.welcomeVideo,\n        },\n        banners: data.theme.banners.map(banner => ({\n          image: banner.image,\n          uri: banner.page[0]?.uri,\n        })),\n        aboutUs: data.theme.aboutUs.map(about => ({\n          title: about.title,\n          content: about.content,\n          image: about.image,\n          buttons: about.actions.map(action => ({\n            text: action.text,\n            uri: action.page[0]?.uri,\n          }))\n        })),\n        sermons: data.sermons.nodes.map(series => ({\n          name: series.name,\n          image: series.image,\n          slug: series.slug,\n          count: series.count ?? 0,\n        })),\n        groups: data.theme.groups.map(group => ({\n          name: group.name,\n          image: group.image,\n          uri: group.page[0]?.uri\n        })),\n        contact: {\n          whatsapp: data.theme.contactWhatsapp,\n          phone: data.theme.contactPhone,\n          location: data.theme.contactLocation,\n          email: data.theme.contactEmail,\n        },\n        footer: {\n          first: {\n            title: data.theme.footerFirstTitle,\n            content: data.theme.footerFirst,\n          },\n          second: {\n            title: data.theme.footerSecondTitle,\n            content: data.theme.footerSecond,\n          },\n          social: {\n            youtube: data.theme.socialYoutube,\n            instagram: data.theme.socialInstagram,\n            facebook: data.theme.socialFacebook,\n            spotify: data.theme.socialSpotify,\n          }\n        }\n      }))\n    }\n  },\n\n  page: (uri) => {\n    const { result, loading } = useQuery(gql`\n      query {\n        theme: crbThemeOptions {\n          bannerStandalonePage\n        }\n        page: pageBy(uri: \"${uri}\") {\n          title\n          content\n        }\n      }`)\n\n    return {\n      loading,\n      data: useResult(result, null, data => ({\n        banner: data.theme.bannerStandalonePage,\n        title: data.page.title,\n        content: data.page.content,\n      }))\n    }\n  },\n\n  sermonSeries: () => {\n    const { result, loading } = useQuery(gql`\n      query {\n        theme: crbThemeOptions {\n          bannerStandalonePage\n        }\n        sermons: sermonSeries {\n          nodes {\n            name\n            slug\n            count\n            image\n          }\n        }\n      }`)\n\n    return {\n      loading,\n      data: useResult(result, null, data => ({\n        banner: data.theme.bannerStandalonePage,\n        sermons: data.sermons.nodes.map(series => ({\n          name: series.name,\n          image: series.image,\n          slug: series.slug,\n          count: series.count ?? 0,\n        })),\n      }))\n    }\n  },\n\n  sermonSerie: (serie) => {\n    const { result, loading } = useQuery(gql`\n      query {\n        theme: crbThemeOptions {\n          bannerStandalonePage\n        }\n        series: sermonSeries(where: {slug: \"${serie}\"}) {\n          nodes {\n            name\n            description\n            image\n            sermons {\n              nodes {\n                slug\n                title\n                passage\n                embedCode\n                preached\n                preachers {\n                  nodes {\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }`)\n\n    return {\n      loading,\n      data: useResult(result, null, data => ({\n        banner: data.theme.bannerStandalonePage,\n        title: data.series.nodes[0]?.name,\n        description: data.series.nodes[0]?.description,\n        image: data.series.nodes[0]?.image,\n        sermons: data.series.nodes[0]?.sermons.nodes\n          .map(sermon => ({\n            slug: sermon.slug,\n            title: sermon.title,\n            passage: sermon.passage,\n            embedCode: sermon.embedCode,\n            date: new Date(sermon.preached),\n            preacher: sermon.preachers.nodes[0]?.name,\n          }))\n          .sort((s1, s2) => s1.date.getTime() - s2.date.getTime())\n      }))\n    }\n  }\n}\n","/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param  {number}    delay -          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {boolean}   [noTrailing] -   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds while the\n *                                    throttled-function is being called. If noTrailing is false or unspecified, callback will be executed one final time\n *                                    after the last throttled-function call. (After the throttled-function has not been called for `delay` milliseconds,\n *                                    the internal counter is reset).\n * @param  {Function}  callback -       A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                    to `callback` when the throttled-function is executed.\n * @param  {boolean}   [debounceMode] - If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is false (at end),\n *                                    schedule `callback` to execute after `delay` ms.\n *\n * @returns {Function}  A new, throttled, function.\n */\nexport default function (delay, noTrailing, callback, debounceMode) {\n\t/*\n\t * After wrapper has stopped being called, this timeout ensures that\n\t * `callback` is executed at the proper times in `throttle` and `end`\n\t * debounce modes.\n\t */\n\tlet timeoutID;\n\tlet cancelled = false;\n\n\t// Keep track of the last time `callback` was executed.\n\tlet lastExec = 0;\n\n\t// Function to clear existing timeout\n\tfunction clearExistingTimeout() {\n\t\tif (timeoutID) {\n\t\t\tclearTimeout(timeoutID);\n\t\t}\n\t}\n\n\t// Function to cancel next exec\n\tfunction cancel() {\n\t\tclearExistingTimeout();\n\t\tcancelled = true;\n\t}\n\n\t// `noTrailing` defaults to falsy.\n\tif (typeof noTrailing !== 'boolean') {\n\t\tdebounceMode = callback;\n\t\tcallback = noTrailing;\n\t\tnoTrailing = undefined;\n\t}\n\n\t/*\n\t * The `wrapper` function encapsulates all of the throttling / debouncing\n\t * functionality and when executed will limit the rate at which `callback`\n\t * is executed.\n\t */\n\tfunction wrapper(...arguments_) {\n\t\tlet self = this;\n\t\tlet elapsed = Date.now() - lastExec;\n\n\t\tif (cancelled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Execute `callback` and update the `lastExec` timestamp.\n\t\tfunction exec() {\n\t\t\tlastExec = Date.now();\n\t\t\tcallback.apply(self, arguments_);\n\t\t}\n\n\t\t/*\n\t\t * If `debounceMode` is true (at begin) this is used to clear the flag\n\t\t * to allow future `callback` executions.\n\t\t */\n\t\tfunction clear() {\n\t\t\ttimeoutID = undefined;\n\t\t}\n\n\t\tif (debounceMode && !timeoutID) {\n\t\t\t/*\n\t\t\t * Since `wrapper` is being called for the first time and\n\t\t\t * `debounceMode` is true (at begin), execute `callback`.\n\t\t\t */\n\t\t\texec();\n\t\t}\n\n\t\tclearExistingTimeout();\n\n\t\tif (debounceMode === undefined && elapsed > delay) {\n\t\t\t/*\n\t\t\t * In throttle mode, if `delay` time has been exceeded, execute\n\t\t\t * `callback`.\n\t\t\t */\n\t\t\texec();\n\t\t} else if (noTrailing !== true) {\n\t\t\t/*\n\t\t\t * In trailing throttle mode, since `delay` time has not been\n\t\t\t * exceeded, schedule `callback` to execute `delay` ms after most\n\t\t\t * recent execution.\n\t\t\t *\n\t\t\t * If `debounceMode` is true (at begin), schedule `clear` to execute\n\t\t\t * after `delay` ms.\n\t\t\t *\n\t\t\t * If `debounceMode` is false (at end), schedule `callback` to\n\t\t\t * execute after `delay` ms.\n\t\t\t */\n\t\t\ttimeoutID = setTimeout(\n\t\t\t\tdebounceMode ? clear : exec,\n\t\t\t\tdebounceMode === undefined ? delay - elapsed : delay\n\t\t\t);\n\t\t}\n\t}\n\n\twrapper.cancel = cancel;\n\n\t// Return the wrapper function.\n\treturn wrapper;\n}\n","/* eslint-disable no-undefined */\n\nimport throttle from './throttle';\n\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param  {number}   delay -         A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {boolean}  [atBegin] -     Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                  after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                  (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n * @param  {Function} callback -      A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                  to `callback` when the debounced-function is executed.\n *\n * @returns {Function} A new, debounced function.\n */\nexport default function (delay, atBegin, callback) {\n\treturn callback === undefined\n\t\t? throttle(delay, atBegin, false)\n\t\t: throttle(delay, callback, atBegin !== false);\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","const genericMessage = \"Invariant Violation\";\nconst {\n  setPrototypeOf = function (obj: any, proto: any) {\n    obj.__proto__ = proto;\n    return obj;\n  },\n} = Object as any;\n\nexport class InvariantError extends Error {\n  framesToPop = 1;\n  name = genericMessage;\n  constructor(message: string | number = genericMessage) {\n    super(\n      typeof message === \"number\"\n        ? `${genericMessage}: ${message} (see https://github.com/apollographql/invariant-packages)`\n        : message\n    );\n    setPrototypeOf(this, InvariantError.prototype);\n  }\n}\n\nexport function invariant(\n  condition: any,\n  message?: string | number,\n): asserts condition {\n  if (!condition) {\n    throw new InvariantError(message);\n  }\n}\n\nconst verbosityLevels = [\"debug\", \"log\", \"warn\", \"error\", \"silent\"] as const;\nexport type VerbosityLevel = (typeof verbosityLevels)[number];\nexport type ConsoleMethodName = Exclude<VerbosityLevel, \"silent\">;\nlet verbosityLevel = verbosityLevels.indexOf(\"log\");\n\nfunction wrapConsoleMethod<M extends ConsoleMethodName>(name: M) {\n  return function () {\n    if (verbosityLevels.indexOf(name) >= verbosityLevel) {\n      // Default to console.log if this host environment happens not to provide\n      // all the console.* methods we need.\n      const method = console[name] || console.log;\n      return method.apply(console, arguments as any);\n    }\n  } as (typeof console)[M];\n}\n\nexport namespace invariant {\n  export const debug = wrapConsoleMethod(\"debug\");\n  export const log = wrapConsoleMethod(\"log\");\n  export const warn = wrapConsoleMethod(\"warn\");\n  export const error = wrapConsoleMethod(\"error\");\n}\n\nexport function setVerbosity(level: VerbosityLevel): VerbosityLevel {\n  const old = verbosityLevels[verbosityLevel];\n  verbosityLevel = Math.max(0, verbosityLevels.indexOf(level));\n  return old;\n}\n\nexport default invariant;\n","export function maybe<T>(thunk: () => T): T | undefined {\n  try { return thunk() } catch {}\n}\n","import { maybe } from \"./maybe\";\n\ndeclare global {\n  // Despite our attempts to reuse the React Native __DEV__ constant instead of\n  // inventing something new and Apollo-specific, declaring a useful type for\n  // __DEV__ unfortunately conflicts (TS2451) with the global declaration in\n  // @types/react-native/index.d.ts.\n  //\n  // To hide that harmless conflict, we @ts-ignore this line, which should\n  // continue to provide a type for __DEV__ elsewhere in the Apollo Client\n  // codebase, even when @types/react-native is not in use.\n  //\n  // However, because TypeScript drops @ts-ignore comments when generating .d.ts\n  // files (https://github.com/microsoft/TypeScript/issues/38628), we also\n  // sanitize the dist/utilities/globals/global.d.ts file to avoid declaring\n  // __DEV__ globally altogether when @apollo/client is installed in the\n  // node_modules directory of an application.\n  //\n  // @ts-ignore\n  const __DEV__: boolean | undefined;\n}\n\nexport default (\n  maybe(() => globalThis) ||\n  maybe(() => window) ||\n  maybe(() => self) ||\n  maybe(() => global) ||\n  // We don't expect the Function constructor ever to be invoked at runtime, as\n  // long as at least one of globalThis, window, self, or global is defined, so\n  // we are under no obligation to make it easy for static analysis tools to\n  // detect syntactic usage of the Function constructor. If you think you can\n  // improve your static analysis to detect this obfuscation, think again. This\n  // is an arms race you cannot win, at least not in JavaScript.\n  maybe(function() { return maybe.constructor(\"return this\")() })\n) as typeof globalThis & {\n  __DEV__: typeof __DEV__;\n};\n","import global from \"./global\";\nimport { maybe } from \"./maybe\";\n\n// To keep string-based find/replace minifiers from messing with __DEV__ inside\n// string literals or properties like global.__DEV__, we construct the \"__DEV__\"\n// string in a roundabout way that won't be altered by find/replace strategies.\nconst __ = \"__\";\nconst GLOBAL_KEY = [__, __].join(\"DEV\");\n\nfunction getDEV() {\n  try {\n    return Boolean(__DEV__);\n  } catch {\n    Object.defineProperty(global, GLOBAL_KEY, {\n      // In a buildless browser environment, maybe(() => process.env.NODE_ENV)\n      // evaluates as undefined, so __DEV__ becomes true by default, but can be\n      // initialized to false instead by a script/module that runs earlier.\n      value: maybe(() => process.env.NODE_ENV) !== \"production\",\n      enumerable: false,\n      configurable: true,\n      writable: true,\n    });\n    // Using computed property access rather than global.__DEV__ here prevents\n    // string-based find/replace strategies from munging this to global.false:\n    return (global as any)[GLOBAL_KEY];\n  }\n}\n\nexport default getDEV();\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","function maybe(thunk) {\n  try { return thunk() } catch (_) {}\n}\n\nvar safeGlobal = (\n  maybe(function() { return globalThis }) ||\n  maybe(function() { return window }) ||\n  maybe(function() { return self }) ||\n  maybe(function() { return global }) ||\n  // We don't expect the Function constructor ever to be invoked at runtime, as\n  // long as at least one of globalThis, window, self, or global is defined, so\n  // we are under no obligation to make it easy for static analysis tools to\n  // detect syntactic usage of the Function constructor. If you think you can\n  // improve your static analysis to detect this obfuscation, think again. This\n  // is an arms race you cannot win, at least not in JavaScript.\n  maybe(function() { return maybe.constructor(\"return this\")() })\n);\n\nvar needToRemove = false;\n\nexport function install() {\n  if (safeGlobal &&\n      !maybe(function() { return process.env.NODE_ENV }) &&\n      !maybe(function() { return process })) {\n    Object.defineProperty(safeGlobal, \"process\", {\n      value: {\n        env: {\n          // This default needs to be \"production\" instead of \"development\", to\n          // avoid the problem https://github.com/graphql/graphql-js/pull/2894\n          // will eventually solve, once merged and released.\n          NODE_ENV: \"production\",\n        },\n      },\n      // Let anyone else change global.process as they see fit, but hide it from\n      // Object.keys(global) enumeration.\n      configurable: true,\n      enumerable: false,\n      writable: true,\n    });\n    needToRemove = true;\n  }\n}\n\n// Call install() at least once, when this module is imported.\ninstall();\n\nexport function remove() {\n  if (needToRemove) {\n    delete safeGlobal.process;\n    needToRemove = false;\n  }\n}\n","export function devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","const MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport class Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      devAssert(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      devAssert(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","export function invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n","import { invariant } from '../jsutils/invariant.mjs';\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || invariant(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n","import { getLocation } from './location.mjs';\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nexport function printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n","import { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { getLocation } from '../language/location.mjs';\nimport {\n  printLocation,\n  printSourceLocation,\n} from '../language/printLocation.mjs';\n\nfunction toNormalizedArgs(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport class GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorArgs` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedArgs(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => getLocation(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => getLocation(loc.source, loc.start));\n    const originalExtensions = isObjectLike(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + printLocation(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += '\\n\\n' + printSourceLocation(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nexport function printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\n\nexport function formatError(error) {\n  return error.toJSON();\n}\n","/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport function isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n","import { GraphQLError } from './GraphQLError.mjs';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(`Syntax Error: ${description}`, undefined, source, [\n    position,\n  ]);\n}\n","/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport class Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport class Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nexport const QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nexport let OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n","/**\n * The set of allowed directive location values.\n */\nexport let DirectiveLocation;\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (DirectiveLocation = {}));\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport let Kind;\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport let TokenKind;\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (TokenKind = {}));\n","/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nexport function isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nexport function isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nexport function isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","import { isWhiteSpace } from './characterClasses.mjs';\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nexport function dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nexport function isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Token } from './ast.mjs';\nimport { dedentBlockStringLines } from './blockString.mjs';\nimport { isDigit, isNameContinue, isNameStart } from './characterClasses.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport class Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return (\n    kind === TokenKind.BANG ||\n    kind === TokenKind.DOLLAR ||\n    kind === TokenKind.AMP ||\n    kind === TokenKind.PAREN_L ||\n    kind === TokenKind.PAREN_R ||\n    kind === TokenKind.SPREAD ||\n    kind === TokenKind.COLON ||\n    kind === TokenKind.EQUALS ||\n    kind === TokenKind.AT ||\n    kind === TokenKind.BRACKET_L ||\n    kind === TokenKind.BRACKET_R ||\n    kind === TokenKind.BRACE_L ||\n    kind === TokenKind.PIPE ||\n    kind === TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(lexer, TokenKind.BANG, position, position + 1);\n\n      case 0x0024:\n        // $\n        return createToken(lexer, TokenKind.DOLLAR, position, position + 1);\n\n      case 0x0026:\n        // &\n        return createToken(lexer, TokenKind.AMP, position, position + 1);\n\n      case 0x0028:\n        // (\n        return createToken(lexer, TokenKind.PAREN_L, position, position + 1);\n\n      case 0x0029:\n        // )\n        return createToken(lexer, TokenKind.PAREN_R, position, position + 1);\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(lexer, TokenKind.SPREAD, position, position + 3);\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(lexer, TokenKind.COLON, position, position + 1);\n\n      case 0x003d:\n        // =\n        return createToken(lexer, TokenKind.EQUALS, position, position + 1);\n\n      case 0x0040:\n        // @\n        return createToken(lexer, TokenKind.AT, position, position + 1);\n\n      case 0x005b:\n        // [\n        return createToken(lexer, TokenKind.BRACKET_L, position, position + 1);\n\n      case 0x005d:\n        // ]\n        return createToken(lexer, TokenKind.BRACKET_R, position, position + 1);\n\n      case 0x007b:\n        // {\n        return createToken(lexer, TokenKind.BRACE_L, position, position + 1);\n\n      case 0x007c:\n        // |\n        return createToken(lexer, TokenKind.PIPE, position, position + 1);\n\n      case 0x007d:\n        // }\n        return createToken(lexer, TokenKind.BRACE_R, position, position + 1);\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if (isDigit(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if (isNameStart(code)) {\n      return readName(lexer, position);\n    }\n\n    throw syntaxError(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if (isDigit(code)) {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || isNameStart(code)) {\n    throw syntaxError(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? TokenKind.FLOAT : TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!isDigit(firstCode)) {\n    throw syntaxError(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while (isDigit(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(lexer, TokenKind.STRING, start, position + 1, value);\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        dedentBlockStringLines(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if (isNameContinue(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Location, OperationTypeNode } from './ast.mjs';\nimport { DirectiveLocation } from './directiveLocation.mjs';\nimport { Kind } from './kinds.mjs';\nimport { isPunctuatorTokenKind, Lexer } from './lexer.mjs';\nimport { isSource, Source } from './source.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nexport function parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport class Parser {\n  constructor(source, options) {\n    const sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(TokenKind.NAME);\n    return this.node(token, {\n      kind: Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(\n        TokenKind.SOF,\n        this.parseDefinition,\n        TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw syntaxError(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(\n        TokenKind.BRACE_L,\n        this.parseSelection,\n        TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    var _this$_options;\n\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (\n      ((_this$_options = this._options) === null || _this$_options === void 0\n        ? void 0\n        : _this$_options.allowLegacyFragmentVariables) === true\n    ) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return this.node(token, {\n          kind: Kind.INT,\n          value: token.value,\n        });\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return this.node(token, {\n          kind: Kind.FLOAT,\n          value: token.value,\n        });\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw syntaxError(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return this.node(token, {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return this.node(start, {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return this.node(start, {\n        kind: Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS)\n      ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw syntaxError(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (Object.prototype.hasOwnProperty.call(DirectiveLocation, name.value)) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    var _this$_options2;\n\n    if (\n      ((_this$_options2 = this._options) === null || _this$_options2 === void 0\n        ? void 0\n        : _this$_options2.noLocation) !== true\n    ) {\n      node.loc = new Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? `\"${kind}\"` : kind;\n}\n","/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nexport function printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isNode, QueryDocumentKeys } from './ast.mjs';\nimport { Kind } from './kinds.mjs';\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport const BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexport function visit(root, visitor, visitorKeys = QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if (isNode(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nexport function getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n","import { printBlockString } from './blockString.mjs';\nimport { printString } from './printString.mjs';\nimport { visit } from './visitor.mjs';\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString ? printBlockString(value) : printString(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n","import { invariant } from '../globals';\n\n// Provides the methods that allow QueryManager to handle the `skip` and\n// `include` directives within GraphQL.\nimport {\n  SelectionNode,\n  VariableNode,\n  BooleanValueNode,\n  DirectiveNode,\n  DocumentNode,\n  ArgumentNode,\n  ValueNode,\n  ASTNode,\n  visit,\n} from 'graphql';\n\nexport type DirectiveInfo = {\n  [fieldName: string]: { [argName: string]: any };\n};\n\nexport function shouldInclude(\n  { directives }: SelectionNode,\n  variables?: Record<string, any>,\n): boolean {\n  if (!directives || !directives.length) {\n    return true;\n  }\n  return getInclusionDirectives(\n    directives\n  ).every(({ directive, ifArgument }) => {\n    let evaledValue: boolean = false;\n    if (ifArgument.value.kind === 'Variable') {\n      evaledValue = variables && variables[(ifArgument.value as VariableNode).name.value];\n      invariant(\n        evaledValue !== void 0,\n        `Invalid variable referenced in @${directive.name.value} directive.`,\n      );\n    } else {\n      evaledValue = (ifArgument.value as BooleanValueNode).value;\n    }\n    return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n  });\n}\n\nexport function getDirectiveNames(root: ASTNode) {\n  const names: string[] = [];\n\n  visit(root, {\n    Directive(node: DirectiveNode) {\n      names.push(node.name.value);\n    },\n  });\n\n  return names;\n}\n\nexport function hasDirectives(names: string[], root: ASTNode) {\n  return getDirectiveNames(root).some(\n    (name: string) => names.indexOf(name) > -1,\n  );\n}\n\nexport function hasClientExports(document: DocumentNode) {\n  return (\n    document &&\n    hasDirectives(['client'], document) &&\n    hasDirectives(['export'], document)\n  );\n}\n\nexport type InclusionDirectives = Array<{\n  directive: DirectiveNode;\n  ifArgument: ArgumentNode;\n}>;\n\nfunction isInclusionDirective({ name: { value } }: DirectiveNode): boolean {\n  return value === 'skip' || value === 'include';\n}\n\nexport function getInclusionDirectives(\n  directives: ReadonlyArray<DirectiveNode>,\n): InclusionDirectives {\n  const result: InclusionDirectives = [];\n\n  if (directives && directives.length) {\n    directives.forEach(directive => {\n      if (!isInclusionDirective(directive)) return;\n\n      const directiveArguments = directive.arguments;\n      const directiveName = directive.name.value;\n\n      invariant(\n        directiveArguments && directiveArguments.length === 1,\n        `Incorrect number of arguments for the @${directiveName} directive.`,\n      );\n\n      const ifArgument = directiveArguments![0];\n      invariant(\n        ifArgument.name && ifArgument.name.value === 'if',\n        `Invalid argument for the @${directiveName} directive.`,\n      );\n\n      const ifValue: ValueNode = ifArgument.value;\n\n      // means it has to be a variable value if this is a valid @skip or @include directive\n      invariant(\n        ifValue &&\n          (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'),\n        `Argument for the @${directiveName} directive must be a variable or a boolean value.`,\n      );\n\n      result.push({ directive, ifArgument });\n    });\n  }\n\n  return result;\n}\n\n","import { invariant, InvariantError } from '../globals';\n\nimport {\n  DocumentNode,\n  FragmentDefinitionNode,\n  InlineFragmentNode,\n  SelectionNode,\n} from 'graphql';\n\n// TODO(brian): A hack until this issue is resolved (https://github.com/graphql/graphql-js/issues/3356)\ntype Kind = any;\ntype OperationTypeNode = any;\n/**\n * Returns a query document which adds a single query operation that only\n * spreads the target fragment inside of it.\n *\n * So for example a document of:\n *\n * ```graphql\n * fragment foo on Foo { a b c }\n * ```\n *\n * Turns into:\n *\n * ```graphql\n * { ...foo }\n *\n * fragment foo on Foo { a b c }\n * ```\n *\n * The target fragment will either be the only fragment in the document, or a\n * fragment specified by the provided `fragmentName`. If there is more than one\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\n */\nexport function getFragmentQueryDocument(\n  document: DocumentNode,\n  fragmentName?: string,\n): DocumentNode {\n  let actualFragmentName = fragmentName;\n\n  // Build an array of all our fragment definitions that will be used for\n  // validations. We also do some validations on the other definitions in the\n  // document while building this list.\n  const fragments: Array<FragmentDefinitionNode> = [];\n  document.definitions.forEach(definition => {\n    // Throw an error if we encounter an operation definition because we will\n    // define our own operation definition later on.\n    if (definition.kind === 'OperationDefinition') {\n      throw new InvariantError(\n        `Found a ${definition.operation} operation${\n          definition.name ? ` named '${definition.name.value}'` : ''\n        }. ` +\n          'No operations are allowed when using a fragment as a query. Only fragments are allowed.',\n      );\n    }\n    // Add our definition to the fragments array if it is a fragment\n    // definition.\n    if (definition.kind === 'FragmentDefinition') {\n      fragments.push(definition);\n    }\n  });\n\n  // If the user did not give us a fragment name then let us try to get a\n  // name from a single fragment in the definition.\n  if (typeof actualFragmentName === 'undefined') {\n    invariant(\n      fragments.length === 1,\n      `Found ${\n        fragments.length\n      } fragments. \\`fragmentName\\` must be provided when there is not exactly 1 fragment.`,\n    );\n    actualFragmentName = fragments[0].name.value;\n  }\n\n  // Generate a query document with an operation that simply spreads the\n  // fragment inside of it.\n  const query: DocumentNode = {\n    ...document,\n    definitions: [\n      {\n        kind: 'OperationDefinition' as Kind,\n        // OperationTypeNode is an enum\n        operation: 'query' as OperationTypeNode,\n        selectionSet: {\n          kind: 'SelectionSet' as Kind,\n          selections: [\n            {\n              kind: 'FragmentSpread' as Kind,\n              name: {\n                kind: 'Name' as Kind,\n                value: actualFragmentName,\n              },\n            },\n          ],\n        },\n      },\n      ...document.definitions,\n    ],\n  };\n\n  return query;\n}\n\n/**\n * This is an interface that describes a map from fragment names to fragment definitions.\n */\nexport interface FragmentMap {\n  [fragmentName: string]: FragmentDefinitionNode;\n}\n\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(\n  fragments: FragmentDefinitionNode[] = [],\n): FragmentMap {\n  const symTable: FragmentMap = {};\n  fragments.forEach(fragment => {\n    symTable[fragment.name.value] = fragment;\n  });\n  return symTable;\n}\n\nexport function getFragmentFromSelection(\n  selection: SelectionNode,\n  fragmentMap?: FragmentMap,\n): InlineFragmentNode | FragmentDefinitionNode | null {\n  switch (selection.kind) {\n    case 'InlineFragment':\n      return selection;\n    case 'FragmentSpread': {\n      const fragment = fragmentMap && fragmentMap[selection.name.value];\n      invariant(fragment, `No fragment named ${selection.name.value}.`);\n      return fragment!;\n    }\n    default:\n      return null;\n  }\n}\n","export function isNonNullObject(obj: any): obj is Record<string | number, any> {\n  return obj !== null && typeof obj === 'object';\n}\n","import { InvariantError } from '../globals';\n\nimport {\n  DirectiveNode,\n  FieldNode,\n  IntValueNode,\n  FloatValueNode,\n  StringValueNode,\n  BooleanValueNode,\n  ObjectValueNode,\n  ListValueNode,\n  EnumValueNode,\n  NullValueNode,\n  VariableNode,\n  InlineFragmentNode,\n  ValueNode,\n  SelectionNode,\n  NameNode,\n  SelectionSetNode,\n  DocumentNode,\n} from 'graphql';\n\nimport { isNonNullObject } from '../common/objects';\nimport { FragmentMap, getFragmentFromSelection } from './fragments';\n\nexport interface Reference {\n  readonly __ref: string;\n}\n\nexport function makeReference(id: string): Reference {\n  return { __ref: String(id) };\n}\n\nexport function isReference(obj: any): obj is Reference {\n  return Boolean(obj && typeof obj === 'object' && typeof obj.__ref === 'string');\n}\n\nexport type StoreValue =\n  | number\n  | string\n  | string[]\n  | Reference\n  | Reference[]\n  | null\n  | undefined\n  | void\n  | Object;\n\nexport interface StoreObject {\n  __typename?: string;\n  [storeFieldName: string]: StoreValue;\n}\n\nexport function isDocumentNode(value: any): value is DocumentNode {\n  return (\n    isNonNullObject(value) &&\n    (value as DocumentNode).kind === \"Document\" &&\n    Array.isArray((value as DocumentNode).definitions)\n  );\n}\n\nfunction isStringValue(value: ValueNode): value is StringValueNode {\n  return value.kind === 'StringValue';\n}\n\nfunction isBooleanValue(value: ValueNode): value is BooleanValueNode {\n  return value.kind === 'BooleanValue';\n}\n\nfunction isIntValue(value: ValueNode): value is IntValueNode {\n  return value.kind === 'IntValue';\n}\n\nfunction isFloatValue(value: ValueNode): value is FloatValueNode {\n  return value.kind === 'FloatValue';\n}\n\nfunction isVariable(value: ValueNode): value is VariableNode {\n  return value.kind === 'Variable';\n}\n\nfunction isObjectValue(value: ValueNode): value is ObjectValueNode {\n  return value.kind === 'ObjectValue';\n}\n\nfunction isListValue(value: ValueNode): value is ListValueNode {\n  return value.kind === 'ListValue';\n}\n\nfunction isEnumValue(value: ValueNode): value is EnumValueNode {\n  return value.kind === 'EnumValue';\n}\n\nfunction isNullValue(value: ValueNode): value is NullValueNode {\n  return value.kind === 'NullValue';\n}\n\nexport function valueToObjectRepresentation(\n  argObj: any,\n  name: NameNode,\n  value: ValueNode,\n  variables?: Object,\n) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    const nestedArgObj = {};\n    value.fields.map(obj =>\n      valueToObjectRepresentation(nestedArgObj, obj.name, obj.value, variables),\n    );\n    argObj[name.value] = nestedArgObj;\n  } else if (isVariable(value)) {\n    const variableValue = (variables || ({} as any))[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(listValue => {\n      const nestedArgArrayObj = {};\n      valueToObjectRepresentation(\n        nestedArgArrayObj,\n        name,\n        listValue,\n        variables,\n      );\n      return (nestedArgArrayObj as any)[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = (value as EnumValueNode).value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw new InvariantError(\n      `The inline argument \"${name.value}\" of kind \"${(value as any).kind}\"` +\n        'is not supported. Use variables instead of inline arguments to ' +\n        'overcome this limitation.',\n    );\n  }\n}\n\nexport function storeKeyNameFromField(\n  field: FieldNode,\n  variables?: Object,\n): string {\n  let directivesObj: any = null;\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(directive => {\n      directivesObj[directive.name.value] = {};\n\n      if (directive.arguments) {\n        directive.arguments.forEach(({ name, value }) =>\n          valueToObjectRepresentation(\n            directivesObj[directive.name.value],\n            name,\n            value,\n            variables,\n          ),\n        );\n      }\n    });\n  }\n\n  let argObj: any = null;\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n  }\n\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\n\nexport type Directives = {\n  [directiveName: string]: {\n    [argName: string]: any;\n  };\n};\n\nconst KNOWN_DIRECTIVES: string[] = [\n  'connection',\n  'include',\n  'skip',\n  'client',\n  'rest',\n  'export',\n];\n\nexport const getStoreKeyName = Object.assign(function (\n  fieldName: string,\n  args?: Record<string, any> | null,\n  directives?: Directives,\n): string {\n  if (\n    args &&\n    directives &&\n    directives['connection'] &&\n    directives['connection']['key']\n  ) {\n    if (\n      directives['connection']['filter'] &&\n      (directives['connection']['filter'] as string[]).length > 0\n    ) {\n      const filterKeys = directives['connection']['filter']\n        ? (directives['connection']['filter'] as string[])\n        : [];\n      filterKeys.sort();\n\n      const filteredArgs = {} as { [key: string]: any };\n      filterKeys.forEach(key => {\n        filteredArgs[key] = args[key];\n      });\n\n      return `${directives['connection']['key']}(${stringify(\n        filteredArgs,\n      )})`;\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n\n  let completeFieldName: string = fieldName;\n\n  if (args) {\n    // We can't use `JSON.stringify` here since it's non-deterministic,\n    // and can lead to different store key names being created even though\n    // the `args` object used during creation has the same properties/values.\n    const stringifiedArgs: string = stringify(args);\n    completeFieldName += `(${stringifiedArgs})`;\n  }\n\n  if (directives) {\n    Object.keys(directives).forEach(key => {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += `@${key}(${stringify(directives[key])})`;\n      } else {\n        completeFieldName += `@${key}`;\n      }\n    });\n  }\n\n  return completeFieldName;\n}, {\n  setStringify(s: typeof stringify) {\n    const previous = stringify;\n    stringify = s;\n    return previous;\n  },\n});\n\n// Default stable JSON.stringify implementation. Can be updated/replaced with\n// something better by calling getStoreKeyName.setStringify.\nlet stringify = function defaultStringify(value: any): string {\n  return JSON.stringify(value, stringifyReplacer);\n};\n\nfunction stringifyReplacer(_key: string, value: any): any {\n  if (isNonNullObject(value) && !Array.isArray(value)) {\n    value = Object.keys(value).sort().reduce((copy, key) => {\n      copy[key] = value[key];\n      return copy;\n    }, {} as Record<string, any>);\n  }\n  return value;\n}\n\nexport function argumentsObjectFromField(\n  field: FieldNode | DirectiveNode,\n  variables?: Record<string, any>,\n): Object | null {\n  if (field.arguments && field.arguments.length) {\n    const argObj: Object = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n    return argObj;\n  }\n  return null;\n}\n\nexport function resultKeyNameFromField(field: FieldNode): string {\n  return field.alias ? field.alias.value : field.name.value;\n}\n\nexport function getTypenameFromResult(\n  result: Record<string, any>,\n  selectionSet: SelectionSetNode,\n  fragmentMap?: FragmentMap,\n): string | undefined {\n  if (typeof result.__typename === 'string') {\n    return result.__typename;\n  }\n\n  for (const selection of selectionSet.selections) {\n    if (isField(selection)) {\n      if (selection.name.value === '__typename') {\n        return result[resultKeyNameFromField(selection)];\n      }\n    } else {\n      const typename = getTypenameFromResult(\n        result,\n        getFragmentFromSelection(selection, fragmentMap)!.selectionSet,\n        fragmentMap,\n      );\n      if (typeof typename === 'string') {\n        return typename;\n      }\n    }\n  }\n}\n\nexport function isField(selection: SelectionNode): selection is FieldNode {\n  return selection.kind === 'Field';\n}\n\nexport function isInlineFragment(\n  selection: SelectionNode,\n): selection is InlineFragmentNode {\n  return selection.kind === 'InlineFragment';\n}\n\nexport type VariableValue = (node: VariableNode) => any;\n","// The ordering of these imports is important, because it ensures the temporary\n// process.env.NODE_ENV polyfill is defined globally (if necessary) before we\n// import { Source } from 'graphql'. The instanceOf function that we really care\n// about (the one that uses process.env.NODE_ENV) is not exported from the\n// top-level graphql package, but graphql/language/source uses instanceOf, and\n// has relatively few dependencies, so importing it here should not increase\n// bundle sizes as much as other options.\nimport { remove } from 'ts-invariant/process';\nimport { Source } from 'graphql';\n\nexport function removeTemporaryGlobals() {\n  // Using Source here here just to make sure it won't be tree-shaken away.\n  return typeof Source === \"function\" ? remove() : remove();\n}\n","import { invariant, InvariantError } from \"ts-invariant\";\n\n// Just in case the graphql package switches from process.env.NODE_ENV to\n// __DEV__, make sure __DEV__ is polyfilled before importing graphql.\nimport DEV from \"./DEV\";\nexport { DEV }\nexport function checkDEV() {\n  invariant(\"boolean\" === typeof DEV, DEV);\n}\n\n// Import graphql/jsutils/instanceOf safely, working around its unchecked usage\n// of process.env.NODE_ENV and https://github.com/graphql/graphql-js/pull/2894.\nimport { removeTemporaryGlobals } from \"./fix-graphql\";\n\n// Synchronously undo the global process.env.NODE_ENV polyfill that we created\n// temporarily while importing the offending graphql/jsutils/instanceOf module.\nremoveTemporaryGlobals();\n\nexport { maybe } from \"./maybe\";\nexport { default as global } from \"./global\";\nexport { invariant, InvariantError }\n\n// Ensure __DEV__ was properly initialized, and prevent tree-shaking bundlers\n// from mistakenly pruning the ./DEV module (see issue #8674).\ncheckDEV();\n","import { invariant, InvariantError } from '../globals';\n\nimport {\n  DocumentNode,\n  OperationDefinitionNode,\n  FragmentDefinitionNode,\n  ValueNode,\n} from 'graphql';\n\nimport { valueToObjectRepresentation } from './storeUtils';\n\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc: DocumentNode) {\n  invariant(\n    doc && doc.kind === 'Document',\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`,\n  );\n\n  const operations = doc.definitions\n    .filter(d => d.kind !== 'FragmentDefinition')\n    .map(definition => {\n      if (definition.kind !== 'OperationDefinition') {\n        throw new InvariantError(\n          `Schema type definitions not allowed in queries. Found: \"${\n            definition.kind\n          }\"`,\n        );\n      }\n      return definition;\n    });\n\n  invariant(\n    operations.length <= 1,\n    `Ambiguous GraphQL document: contains ${operations.length} operations`,\n  );\n\n  return doc;\n}\n\nexport function getOperationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode | undefined {\n  checkDocument(doc);\n  return doc.definitions.filter(\n    definition => definition.kind === 'OperationDefinition',\n  )[0] as OperationDefinitionNode;\n}\n\nexport function getOperationName(doc: DocumentNode): string | null {\n  return (\n    doc.definitions\n      .filter(\n        definition =>\n          definition.kind === 'OperationDefinition' && definition.name,\n      )\n      .map((x: OperationDefinitionNode) => x!.name!.value)[0] || null\n  );\n}\n\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(\n  doc: DocumentNode,\n): FragmentDefinitionNode[] {\n  return doc.definitions.filter(\n    definition => definition.kind === 'FragmentDefinition',\n  ) as FragmentDefinitionNode[];\n}\n\nexport function getQueryDefinition(doc: DocumentNode): OperationDefinitionNode {\n  const queryDef = getOperationDefinition(doc) as OperationDefinitionNode;\n\n  invariant(\n    queryDef && queryDef.operation === 'query',\n    'Must contain a query definition.',\n  );\n\n  return queryDef;\n}\n\nexport function getFragmentDefinition(\n  doc: DocumentNode,\n): FragmentDefinitionNode {\n  invariant(\n    doc.kind === 'Document',\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`,\n  );\n\n  invariant(\n    doc.definitions.length <= 1,\n    'Fragment must have exactly one definition.',\n  );\n\n  const fragmentDef = doc.definitions[0] as FragmentDefinitionNode;\n\n  invariant(\n    fragmentDef.kind === 'FragmentDefinition',\n    'Must be a fragment definition.',\n  );\n\n  return fragmentDef as FragmentDefinitionNode;\n}\n\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(\n  queryDoc: DocumentNode,\n): OperationDefinitionNode | FragmentDefinitionNode {\n  checkDocument(queryDoc);\n\n  let fragmentDefinition;\n\n  for (let definition of queryDoc.definitions) {\n    if (definition.kind === 'OperationDefinition') {\n      const operation = (definition as OperationDefinitionNode).operation;\n      if (\n        operation === 'query' ||\n        operation === 'mutation' ||\n        operation === 'subscription'\n      ) {\n        return definition as OperationDefinitionNode;\n      }\n    }\n    if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n      // we do this because we want to allow multiple fragment definitions\n      // to precede an operation definition.\n      fragmentDefinition = definition as FragmentDefinitionNode;\n    }\n  }\n\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n\n  throw new InvariantError(\n    'Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.',\n  );\n}\n\nexport function getDefaultValues(\n  definition: OperationDefinitionNode | undefined,\n): Record<string, any> {\n  const defaultValues = Object.create(null);\n  const defs = definition && definition.variableDefinitions;\n  if (defs && defs.length) {\n    defs.forEach(def => {\n      if (def.defaultValue) {\n        valueToObjectRepresentation(\n          defaultValues,\n          def.variable.name,\n          def.defaultValue as ValueNode,\n        );\n      }\n    });\n  }\n  return defaultValues;\n}\n","export function filterInPlace<T>(\n  array: T[],\n  test: (elem: T) => boolean,\n  context?: any,\n): T[] {\n  let target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}\n","import { invariant } from '../globals';\n\nimport {\n  DocumentNode,\n  SelectionNode,\n  SelectionSetNode,\n  OperationDefinitionNode,\n  FieldNode,\n  DirectiveNode,\n  FragmentDefinitionNode,\n  ArgumentNode,\n  FragmentSpreadNode,\n  VariableDefinitionNode,\n  VariableNode,\n  visit,\n} from 'graphql';\n\n// TODO(brian): A hack until this issue is resolved (https://github.com/graphql/graphql-js/issues/3356)\ntype Kind = any;\n\nimport {\n  checkDocument,\n  getOperationDefinition,\n  getFragmentDefinition,\n  getFragmentDefinitions,\n  getMainDefinition,\n} from './getFromAST';\nimport { filterInPlace } from '../common/filterInPlace';\nimport { isField, isInlineFragment } from './storeUtils';\nimport {\n  createFragmentMap,\n  FragmentMap,\n} from './fragments';\n\nexport type RemoveNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n  remove?: boolean;\n};\n\nexport type GetNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n};\n\nexport type RemoveDirectiveConfig = RemoveNodeConfig<DirectiveNode>;\nexport type GetDirectiveConfig = GetNodeConfig<DirectiveNode>;\nexport type RemoveArgumentsConfig = RemoveNodeConfig<ArgumentNode>;\nexport type GetFragmentSpreadConfig = GetNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentSpreadConfig = RemoveNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentDefinitionConfig = RemoveNodeConfig<\n  FragmentDefinitionNode\n>;\nexport type RemoveVariableDefinitionConfig = RemoveNodeConfig<\n  VariableDefinitionNode\n>;\n\nconst TYPENAME_FIELD: FieldNode = {\n  kind: 'Field' as Kind,\n  name: {\n    kind: 'Name' as Kind,\n    value: '__typename',\n  },\n};\n\nfunction isEmpty(\n  op: OperationDefinitionNode | FragmentDefinitionNode,\n  fragments: FragmentMap,\n): boolean {\n  return op.selectionSet.selections.every(\n    selection =>\n      selection.kind === 'FragmentSpread' &&\n      isEmpty(fragments[selection.name.value], fragments),\n  );\n}\n\nfunction nullIfDocIsEmpty(doc: DocumentNode) {\n  return isEmpty(\n    getOperationDefinition(doc) || getFragmentDefinition(doc),\n    createFragmentMap(getFragmentDefinitions(doc)),\n  )\n    ? null\n    : doc;\n}\n\nfunction getDirectiveMatcher(\n  directives: (RemoveDirectiveConfig | GetDirectiveConfig)[],\n) {\n  return function directiveMatcher(directive: DirectiveNode) {\n    return directives.some(\n      dir =>\n        (dir.name && dir.name === directive.name.value) ||\n        (dir.test && dir.test(directive)),\n    );\n  };\n}\n\nexport function removeDirectivesFromDocument(\n  directives: RemoveDirectiveConfig[],\n  doc: DocumentNode,\n): DocumentNode | null {\n  const variablesInUse: Record<string, boolean> = Object.create(null);\n  let variablesToRemove: RemoveArgumentsConfig[] = [];\n\n  const fragmentSpreadsInUse: Record<string, boolean> = Object.create(null);\n  let fragmentSpreadsToRemove: RemoveFragmentSpreadConfig[] = [];\n\n  let modifiedDoc = nullIfDocIsEmpty(\n    visit(doc, {\n      Variable: {\n        enter(node, _key, parent) {\n          // Store each variable that's referenced as part of an argument\n          // (excluding operation definition variables), so we know which\n          // variables are being used. If we later want to remove a variable\n          // we'll first check to see if it's being used, before continuing with\n          // the removal.\n          if (\n            (parent as VariableDefinitionNode).kind !== 'VariableDefinition'\n          ) {\n            variablesInUse[node.name.value] = true;\n          }\n        },\n      },\n\n      Field: {\n        enter(node) {\n          if (directives && node.directives) {\n            // If `remove` is set to true for a directive, and a directive match\n            // is found for a field, remove the field as well.\n            const shouldRemoveField = directives.some(\n              directive => directive.remove,\n            );\n\n            if (\n              shouldRemoveField &&\n              node.directives &&\n              node.directives.some(getDirectiveMatcher(directives))\n            ) {\n              if (node.arguments) {\n                // Store field argument variables so they can be removed\n                // from the operation definition.\n                node.arguments.forEach(arg => {\n                  if (arg.value.kind === 'Variable') {\n                    variablesToRemove.push({\n                      name: (arg.value as VariableNode).name.value,\n                    });\n                  }\n                });\n              }\n\n              if (node.selectionSet) {\n                // Store fragment spread names so they can be removed from the\n                // document.\n                getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(\n                  frag => {\n                    fragmentSpreadsToRemove.push({\n                      name: frag.name.value,\n                    });\n                  },\n                );\n              }\n\n              // Remove the field.\n              return null;\n            }\n          }\n        },\n      },\n\n      FragmentSpread: {\n        enter(node) {\n          // Keep track of referenced fragment spreads. This is used to\n          // determine if top level fragment definitions should be removed.\n          fragmentSpreadsInUse[node.name.value] = true;\n        },\n      },\n\n      Directive: {\n        enter(node) {\n          // If a matching directive is found, remove it.\n          if (getDirectiveMatcher(directives)(node)) {\n            return null;\n          }\n        },\n      },\n    }),\n  );\n\n  // If we've removed fields with arguments, make sure the associated\n  // variables are also removed from the rest of the document, as long as they\n  // aren't being used elsewhere.\n  if (\n    modifiedDoc &&\n    filterInPlace(variablesToRemove, v => !!v.name && !variablesInUse[v.name]).length\n  ) {\n    modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n  }\n\n  // If we've removed selection sets with fragment spreads, make sure the\n  // associated fragment definitions are also removed from the rest of the\n  // document, as long as they aren't being used elsewhere.\n  if (\n    modifiedDoc &&\n    filterInPlace(fragmentSpreadsToRemove, fs => !!fs.name && !fragmentSpreadsInUse[fs.name])\n      .length\n  ) {\n    modifiedDoc = removeFragmentSpreadFromDocument(\n      fragmentSpreadsToRemove,\n      modifiedDoc,\n    );\n  }\n\n  return modifiedDoc;\n}\n\nexport const addTypenameToDocument = Object.assign(function (\n  doc: DocumentNode\n): DocumentNode {\n  return visit(checkDocument(doc), {\n    SelectionSet: {\n      enter(node, _key, parent) {\n        // Don't add __typename to OperationDefinitions.\n        if (\n          parent &&\n          (parent as OperationDefinitionNode).kind === 'OperationDefinition'\n        ) {\n          return;\n        }\n\n        // No changes if no selections.\n        const { selections } = node;\n        if (!selections) {\n          return;\n        }\n\n        // If selections already have a __typename, or are part of an\n        // introspection query, do nothing.\n        const skip = selections.some(selection => {\n          return (\n            isField(selection) &&\n            (selection.name.value === '__typename' ||\n              selection.name.value.lastIndexOf('__', 0) === 0)\n          );\n        });\n        if (skip) {\n          return;\n        }\n\n        // If this SelectionSet is @export-ed as an input variable, it should\n        // not have a __typename field (see issue #4691).\n        const field = parent as FieldNode;\n        if (\n          isField(field) &&\n          field.directives &&\n          field.directives.some(d => d.name.value === 'export')\n        ) {\n          return;\n        }\n\n        // Create and return a new SelectionSet with a __typename Field.\n        return {\n          ...node,\n          selections: [...selections, TYPENAME_FIELD],\n        };\n      },\n    },\n  });\n}, {\n  added(field: FieldNode): boolean {\n    return field === TYPENAME_FIELD;\n  },\n});\n\nconst connectionRemoveConfig = {\n  test: (directive: DirectiveNode) => {\n    const willRemove = directive.name.value === 'connection';\n    if (willRemove) {\n      if (\n        !directive.arguments ||\n        !directive.arguments.some(arg => arg.name.value === 'key')\n      ) {\n        invariant.warn(\n          'Removing an @connection directive even though it does not have a key. ' +\n            'You may want to use the key parameter to specify a store key.',\n        );\n      }\n    }\n\n    return willRemove;\n  },\n};\n\nexport function removeConnectionDirectiveFromDocument(doc: DocumentNode) {\n  return removeDirectivesFromDocument(\n    [connectionRemoveConfig],\n    checkDocument(doc),\n  );\n}\n\nfunction hasDirectivesInSelectionSet(\n  directives: GetDirectiveConfig[],\n  selectionSet: SelectionSetNode | undefined,\n  nestedCheck = true,\n): boolean {\n  return (\n    !!selectionSet &&\n    selectionSet.selections &&\n    selectionSet.selections.some(selection =>\n      hasDirectivesInSelection(directives, selection, nestedCheck),\n    )\n  );\n}\n\nfunction hasDirectivesInSelection(\n  directives: GetDirectiveConfig[],\n  selection: SelectionNode,\n  nestedCheck = true,\n): boolean {\n  if (!isField(selection)) {\n    return true;\n  }\n\n  if (!selection.directives) {\n    return false;\n  }\n\n  return (\n    selection.directives.some(getDirectiveMatcher(directives)) ||\n    (nestedCheck &&\n      hasDirectivesInSelectionSet(\n        directives,\n        selection.selectionSet,\n        nestedCheck,\n      ))\n  );\n}\n\nfunction getArgumentMatcher(config: RemoveArgumentsConfig[]) {\n  return function argumentMatcher(argument: ArgumentNode) {\n    return config.some(\n      (aConfig: RemoveArgumentsConfig) =>\n        argument.value &&\n        argument.value.kind === 'Variable' &&\n        argument.value.name &&\n        (aConfig.name === argument.value.name.value ||\n          (aConfig.test && aConfig.test(argument))),\n    );\n  };\n}\n\nexport function removeArgumentsFromDocument(\n  config: RemoveArgumentsConfig[],\n  doc: DocumentNode,\n): DocumentNode | null {\n  const argMatcher = getArgumentMatcher(config);\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      OperationDefinition: {\n        enter(node) {\n          return {\n            ...node,\n            // Remove matching top level variables definitions.\n            variableDefinitions: node.variableDefinitions ? node.variableDefinitions.filter(\n              varDef =>\n                !config.some(arg => arg.name === varDef.variable.name.value),\n            ) : [],\n          };\n        },\n      },\n\n      Field: {\n        enter(node) {\n          // If `remove` is set to true for an argument, and an argument match\n          // is found for a field, remove the field as well.\n          const shouldRemoveField = config.some(argConfig => argConfig.remove);\n\n          if (shouldRemoveField) {\n            let argMatchCount = 0;\n            if (node.arguments) {\n              node.arguments.forEach(arg => {\n                if (argMatcher(arg)) {\n                  argMatchCount += 1;\n                }\n              });\n            }\n\n            if (argMatchCount === 1) {\n              return null;\n            }\n          }\n        },\n      },\n\n      Argument: {\n        enter(node) {\n          // Remove all matching arguments.\n          if (argMatcher(node)) {\n            return null;\n          }\n        },\n      },\n    }),\n  );\n}\n\nexport function removeFragmentSpreadFromDocument(\n  config: RemoveFragmentSpreadConfig[],\n  doc: DocumentNode,\n): DocumentNode | null {\n  function enter(\n    node: FragmentSpreadNode | FragmentDefinitionNode,\n  ): null | void {\n    if (config.some(def => def.name === node.name.value)) {\n      return null;\n    }\n  }\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      FragmentSpread: { enter },\n      FragmentDefinition: { enter },\n    }),\n  );\n}\n\nfunction getAllFragmentSpreadsFromSelectionSet(\n  selectionSet: SelectionSetNode,\n): FragmentSpreadNode[] {\n  const allFragments: FragmentSpreadNode[] = [];\n\n  selectionSet.selections.forEach(selection => {\n    if (\n      (isField(selection) || isInlineFragment(selection)) &&\n      selection.selectionSet\n    ) {\n      getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(\n        frag => allFragments.push(frag),\n      );\n    } else if (selection.kind === 'FragmentSpread') {\n      allFragments.push(selection);\n    }\n  });\n\n  return allFragments;\n}\n\n// If the incoming document is a query, return it as is. Otherwise, build a\n// new document containing a query operation based on the selection set\n// of the previous main operation.\nexport function buildQueryFromSelectionSet(\n  document: DocumentNode,\n): DocumentNode {\n  const definition = getMainDefinition(document);\n  const definitionOperation = (<OperationDefinitionNode>definition).operation;\n\n  if (definitionOperation === 'query') {\n    // Already a query, so return the existing document.\n    return document;\n  }\n\n  // Build a new query using the selection set of the main operation.\n  const modifiedDoc = visit(document, {\n    OperationDefinition: {\n      enter(node) {\n        return {\n          ...node,\n          operation: 'query',\n        };\n      },\n    },\n  });\n  return modifiedDoc;\n}\n\n// Remove fields / selection sets that include an @client directive.\nexport function removeClientSetsFromDocument(\n  document: DocumentNode,\n): DocumentNode | null {\n  checkDocument(document);\n\n  let modifiedDoc = removeDirectivesFromDocument(\n    [\n      {\n        test: (directive: DirectiveNode) => directive.name.value === 'client',\n        remove: true,\n      },\n    ],\n    document,\n  );\n\n  // After a fragment definition has had its @client related document\n  // sets removed, if the only field it has left is a __typename field,\n  // remove the entire fragment operation to prevent it from being fired\n  // on the server.\n  if (modifiedDoc) {\n    modifiedDoc = visit(modifiedDoc, {\n      FragmentDefinition: {\n        enter(node) {\n          if (node.selectionSet) {\n            const isTypenameOnly = node.selectionSet.selections.every(\n              selection =>\n                isField(selection) && selection.name.value === '__typename',\n            );\n            if (isTypenameOnly) {\n              return null;\n            }\n          }\n        },\n      },\n    });\n  }\n\n  return modifiedDoc;\n}\n","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = /*#__PURE__*/function () {\n  function Subscription(observer, subscriber) {\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  var _proto = Subscription.prototype;\n\n  _proto.unsubscribe = function unsubscribe() {\n    if (this._state !== 'closed') {\n      closeSubscription(this);\n      cleanupSubscription(this);\n    }\n  };\n\n  _createClass(Subscription, [{\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = /*#__PURE__*/function () {\n  function SubscriptionObserver(subscription) {\n    this._subscription = subscription;\n  }\n\n  var _proto2 = SubscriptionObserver.prototype;\n\n  _proto2.next = function next(value) {\n    onNotify(this._subscription, 'next', value);\n  };\n\n  _proto2.error = function error(value) {\n    onNotify(this._subscription, 'error', value);\n  };\n\n  _proto2.complete = function complete() {\n    onNotify(this._subscription, 'complete');\n  };\n\n  _createClass(SubscriptionObserver, [{\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = /*#__PURE__*/function () {\n  function Observable(subscriber) {\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  var _proto3 = Observable.prototype;\n\n  _proto3.subscribe = function subscribe(observer) {\n    if (typeof observer !== 'object' || observer === null) {\n      observer = {\n        next: observer,\n        error: arguments[1],\n        complete: arguments[2]\n      };\n    }\n\n    return new Subscription(observer, this._subscriber);\n  };\n\n  _proto3.forEach = function forEach(fn) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      if (typeof fn !== 'function') {\n        reject(new TypeError(fn + ' is not a function'));\n        return;\n      }\n\n      function done() {\n        subscription.unsubscribe();\n        resolve();\n      }\n\n      var subscription = _this.subscribe({\n        next: function (value) {\n          try {\n            fn(value, done);\n          } catch (e) {\n            reject(e);\n            subscription.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n    });\n  };\n\n  _proto3.map = function map(fn) {\n    var _this2 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      return _this2.subscribe({\n        next: function (value) {\n          try {\n            value = fn(value);\n          } catch (e) {\n            return observer.error(e);\n          }\n\n          observer.next(value);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          observer.complete();\n        }\n      });\n    });\n  };\n\n  _proto3.filter = function filter(fn) {\n    var _this3 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      return _this3.subscribe({\n        next: function (value) {\n          try {\n            if (!fn(value)) return;\n          } catch (e) {\n            return observer.error(e);\n          }\n\n          observer.next(value);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          observer.complete();\n        }\n      });\n    });\n  };\n\n  _proto3.reduce = function reduce(fn) {\n    var _this4 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    var hasSeed = arguments.length > 1;\n    var hasValue = false;\n    var seed = arguments[1];\n    var acc = seed;\n    return new C(function (observer) {\n      return _this4.subscribe({\n        next: function (value) {\n          var first = !hasValue;\n          hasValue = true;\n\n          if (!first || hasSeed) {\n            try {\n              acc = fn(acc, value);\n            } catch (e) {\n              return observer.error(e);\n            }\n          } else {\n            acc = value;\n          }\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n          observer.next(acc);\n          observer.complete();\n        }\n      });\n    });\n  };\n\n  _proto3.concat = function concat() {\n    var _this5 = this;\n\n    for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n      sources[_key] = arguments[_key];\n    }\n\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      var subscription;\n      var index = 0;\n\n      function startNext(next) {\n        subscription = next.subscribe({\n          next: function (v) {\n            observer.next(v);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (index === sources.length) {\n              subscription = undefined;\n              observer.complete();\n            } else {\n              startNext(C.from(sources[index++]));\n            }\n          }\n        });\n      }\n\n      startNext(_this5);\n      return function () {\n        if (subscription) {\n          subscription.unsubscribe();\n          subscription = undefined;\n        }\n      };\n    });\n  };\n\n  _proto3.flatMap = function flatMap(fn) {\n    var _this6 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      var subscriptions = [];\n\n      var outer = _this6.subscribe({\n        next: function (value) {\n          if (fn) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n          }\n\n          var inner = C.from(value).subscribe({\n            next: function (value) {\n              observer.next(value);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              var i = subscriptions.indexOf(inner);\n              if (i >= 0) subscriptions.splice(i, 1);\n              completeIfDone();\n            }\n          });\n          subscriptions.push(inner);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          completeIfDone();\n        }\n      });\n\n      function completeIfDone() {\n        if (outer.closed && subscriptions.length === 0) observer.complete();\n      }\n\n      return function () {\n        subscriptions.forEach(function (s) {\n          return s.unsubscribe();\n        });\n        outer.unsubscribe();\n      };\n    });\n  };\n\n  _proto3[SymbolObservable] = function () {\n    return this;\n  };\n\n  Observable.from = function from(x) {\n    var C = typeof this === 'function' ? this : Observable;\n    if (x == null) throw new TypeError(x + ' is not an object');\n    var method = getMethod(x, SymbolObservable);\n\n    if (method) {\n      var observable = method.call(x);\n      if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n      if (isObservable(observable) && observable.constructor === C) return observable;\n      return new C(function (observer) {\n        return observable.subscribe(observer);\n      });\n    }\n\n    if (hasSymbol('iterator')) {\n      method = getMethod(x, SymbolIterator);\n\n      if (method) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(method.call(x)), _step; !(_step = _iterator()).done;) {\n              var item = _step.value;\n              observer.next(item);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n    }\n\n    if (Array.isArray(x)) {\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < x.length; ++i) {\n            observer.next(x[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n\n    throw new TypeError(x + ' is not observable');\n  };\n\n  Observable.of = function of() {\n    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      items[_key2] = arguments[_key2];\n    }\n\n    var C = typeof this === 'function' ? this : Observable;\n    return new C(function (observer) {\n      enqueue(function () {\n        if (observer.closed) return;\n\n        for (var i = 0; i < items.length; ++i) {\n          observer.next(items[i]);\n          if (observer.closed) return;\n        }\n\n        observer.complete();\n      });\n    });\n  };\n\n  _createClass(Observable, null, [{\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}\n\nexport { Observable };\n","import {\n  Observable,\n  Observer,\n  Subscription as ObservableSubscription,\n  Subscriber,\n} from 'zen-observable-ts';\n\n// This simplified polyfill attempts to follow the ECMAScript Observable\n// proposal (https://github.com/zenparsing/es-observable)\nimport 'symbol-observable';\n\nexport type {\n  Observer,\n  ObservableSubscription,\n  Subscriber,\n};\n\n// The zen-observable package defines Observable.prototype[Symbol.observable]\n// when Symbol is supported, but RxJS interop depends on also setting this fake\n// '@@observable' string as a polyfill for Symbol.observable.\nconst { prototype } = Observable;\nconst fakeObsSymbol = '@@observable' as keyof typeof prototype;\nif (!prototype[fakeObsSymbol]) {\n  prototype[fakeObsSymbol] = function () { return this; };\n}\n\nexport { Observable };\n","import { isNonNullObject } from \"./objects\";\n\nconst { hasOwnProperty } = Object.prototype;\n\n// These mergeDeep and mergeDeepArray utilities merge any number of objects\n// together, sharing as much memory as possible with the source objects, while\n// remaining careful to avoid modifying any source objects.\n\n// Logically, the return type of mergeDeep should be the intersection of\n// all the argument types. The binary call signature is by far the most\n// common, but we support 0- through 5-ary as well. After that, the\n// resulting type is just the inferred array element type. Note to nerds:\n// there is a more clever way of doing this that converts the tuple type\n// first to a union type (easy enough: T[number]) and then converts the\n// union to an intersection type using distributive conditional type\n// inference, but that approach has several fatal flaws (boolean becomes\n// true & false, and the inferred type ends up as unknown in many cases),\n// in addition to being nearly impossible to explain/understand.\nexport type TupleToIntersection<T extends any[]> =\n  T extends [infer A] ? A :\n  T extends [infer A, infer B] ? A & B :\n  T extends [infer A, infer B, infer C] ? A & B & C :\n  T extends [infer A, infer B, infer C, infer D] ? A & B & C & D :\n  T extends [infer A, infer B, infer C, infer D, infer E] ? A & B & C & D & E :\n  T extends (infer U)[] ? U : any;\n\nexport function mergeDeep<T extends any[]>(\n  ...sources: T\n): TupleToIntersection<T> {\n  return mergeDeepArray(sources);\n}\n\n// In almost any situation where you could succeed in getting the\n// TypeScript compiler to infer a tuple type for the sources array, you\n// could just use mergeDeep instead of mergeDeepArray, so instead of\n// trying to convert T[] to an intersection type we just infer the array\n// element type, which works perfectly when the sources array has a\n// consistent element type.\nexport function mergeDeepArray<T>(sources: T[]): T {\n  let target = sources[0] || ({} as T);\n  const count = sources.length;\n  if (count > 1) {\n    const merger = new DeepMerger();\n    for (let i = 1; i < count; ++i) {\n      target = merger.merge(target, sources[i]);\n    }\n  }\n  return target;\n}\n\nexport type ReconcilerFunction<TContextArgs extends any[]> = (\n  this: DeepMerger<TContextArgs>,\n  target: Record<string | number, any>,\n  source: Record<string | number, any>,\n  property: string | number,\n  ...context: TContextArgs\n) => any;\n\nconst defaultReconciler: ReconcilerFunction<any[]> =\n  function (target, source, property) {\n    return this.merge(target[property], source[property]);\n  };\n\nexport class DeepMerger<TContextArgs extends any[]> {\n  constructor(\n    private reconciler: ReconcilerFunction<TContextArgs> = defaultReconciler,\n  ) {}\n\n  public merge(target: any, source: any, ...context: TContextArgs): any {\n    if (isNonNullObject(source) && isNonNullObject(target)) {\n      Object.keys(source).forEach(sourceKey => {\n        if (hasOwnProperty.call(target, sourceKey)) {\n          const targetValue = target[sourceKey];\n          if (source[sourceKey] !== targetValue) {\n            const result = this.reconciler(target, source, sourceKey, ...context);\n            // A well-implemented reconciler may return targetValue to indicate\n            // the merge changed nothing about the structure of the target.\n            if (result !== targetValue) {\n              target = this.shallowCopyForMerge(target);\n              target[sourceKey] = result;\n            }\n          }\n        } else {\n          // If there is no collision, the target can safely share memory with\n          // the source, and the recursion can terminate here.\n          target = this.shallowCopyForMerge(target);\n          target[sourceKey] = source[sourceKey];\n        }\n      });\n\n      return target;\n    }\n\n    // If source (or target) is not an object, let source replace target.\n    return source;\n  }\n\n  public isObject = isNonNullObject;\n\n  private pastCopies = new Set<any>();\n\n  public shallowCopyForMerge<T>(value: T): T {\n    if (isNonNullObject(value)) {\n      if (this.pastCopies.has(value)) {\n        // In order to reuse a past copy, it must be mutable, but copied objects\n        // can sometimes be frozen while this DeepMerger is still active.\n        if (!Object.isFrozen(value)) return value;\n        this.pastCopies.delete(value);\n      }\n      if (Array.isArray(value)) {\n        value = (value as any).slice(0);\n      } else {\n        value = {\n          __proto__: Object.getPrototypeOf(value),\n          ...value,\n        };\n      }\n      this.pastCopies.add(value);\n    }\n    return value;\n  }\n}\n","const { toString } = Object.prototype;\n\n/**\n * Deeply clones a value to create a new instance.\n */\nexport function cloneDeep<T>(value: T): T {\n  return cloneDeepHelper(value);\n}\n\nfunction cloneDeepHelper<T>(val: T, seen?: Map<any, any>): T {\n  switch (toString.call(val)) {\n  case \"[object Array]\": {\n    seen = seen || new Map;\n    if (seen.has(val)) return seen.get(val);\n    const copy: T & any[] = (val as any).slice(0);\n    seen.set(val, copy);\n    copy.forEach(function (child, i) {\n      copy[i] = cloneDeepHelper(child, seen);\n    });\n    return copy;\n  }\n\n  case \"[object Object]\": {\n    seen = seen || new Map;\n    if (seen.has(val)) return seen.get(val);\n    // High fidelity polyfills of Object.create and Object.getPrototypeOf are\n    // possible in all JS environments, so we will assume they exist/work.\n    const copy = Object.create(Object.getPrototypeOf(val));\n    seen.set(val, copy);\n    Object.keys(val).forEach(key => {\n      copy[key] = cloneDeepHelper((val as any)[key], seen);\n    });\n    return copy;\n  }\n\n  default:\n    return val;\n  }\n}\n","import '../globals'; // For __DEV__\nimport { isNonNullObject } from './objects';\n\nfunction deepFreeze(value: any) {\n  const workSet = new Set([value]);\n  workSet.forEach(obj => {\n    if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n      Object.getOwnPropertyNames(obj).forEach(name => {\n        if (isNonNullObject(obj[name])) workSet.add(obj[name]);\n      });\n    }\n  });\n  return value;\n}\n\nfunction shallowFreeze<T extends object>(obj: T): T | null {\n  if (__DEV__ && !Object.isFrozen(obj)) {\n    try {\n      Object.freeze(obj);\n    } catch (e) {\n      // Some types like Uint8Array and Node.js's Buffer cannot be frozen, but\n      // they all throw a TypeError when you try, so we re-throw any exceptions\n      // that are not TypeErrors, since that would be unexpected.\n      if (e instanceof TypeError) return null;\n      throw e;\n    }\n  }\n  return obj;\n}\n\nexport function maybeDeepFreeze<T>(obj: T): T {\n  if (__DEV__) {\n    deepFreeze(obj);\n  }\n  return obj;\n}\n","import { Observer } from \"./Observable\";\n\nexport function iterateObserversSafely<E, A>(\n  observers: Set<Observer<E>>,\n  method: keyof Observer<E>,\n  argument?: A,\n) {\n  // In case observers is modified during iteration, we need to commit to the\n  // original elements, which also provides an opportunity to filter them down\n  // to just the observers with the given method.\n  const observersWithMethod: Observer<E>[] = [];\n  observers.forEach(obs => obs[method] && observersWithMethod.push(obs));\n  observersWithMethod.forEach(obs => (obs as any)[method](argument));\n}\n","import { Observable, Observer } from \"./Observable\";\n\n// Like Observable.prototype.map, except that the mapping function can\n// optionally return a Promise (or be async).\nexport function asyncMap<V, R>(\n  observable: Observable<V>,\n  mapFn: (value: V) => R | PromiseLike<R>,\n  catchFn?: (error: any) => R | PromiseLike<R>,\n): Observable<R> {\n  return new Observable<R>(observer => {\n    const { next, error, complete } = observer;\n    let activeCallbackCount = 0;\n    let completed = false;\n    let promiseQueue = {\n      // Normally we would initialize promiseQueue to Promise.resolve(), but\n      // in this case, for backwards compatibility, we need to be careful to\n      // invoke the first callback synchronously.\n      then(callback: () => any) {\n        return new Promise(resolve => resolve(callback()));\n      },\n    } as Promise<void>;\n\n    function makeCallback(\n      examiner: typeof mapFn | typeof catchFn,\n      delegate: typeof next | typeof error,\n    ): (arg: any) => void {\n      if (examiner) {\n        return arg => {\n          ++activeCallbackCount;\n          const both = () => examiner(arg);\n          promiseQueue = promiseQueue.then(both, both).then(\n            result => {\n              --activeCallbackCount;\n              next && next.call(observer, result);\n              if (completed) {\n                handler.complete!();\n              }\n            },\n            error => {\n              --activeCallbackCount;\n              throw error;\n            },\n          ).catch(caught => {\n            error && error.call(observer, caught);\n          });\n        };\n      } else {\n        return arg => delegate && delegate.call(observer, arg);\n      }\n    }\n\n    const handler: Observer<V> = {\n      next: makeCallback(mapFn, next),\n      error: makeCallback(catchFn, error),\n      complete() {\n        completed = true;\n        if (!activeCallbackCount) {\n          complete && complete.call(observer);\n        }\n      },\n    };\n\n    const sub = observable.subscribe(handler);\n    return () => sub.unsubscribe();\n  });\n}\n","export const canUseWeakMap = typeof WeakMap === 'function' && !(\n  typeof navigator === 'object' &&\n  navigator.product === 'ReactNative'\n);\n\nexport const canUseWeakSet = typeof WeakSet === 'function';\n\nexport const canUseSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.for === 'function';\n","import { Observable } from \"./Observable\";\nimport { canUseSymbol } from \"../common/canUse\";\n\n// Generic implementations of Observable.prototype methods like map and\n// filter need to know how to create a new Observable from an Observable\n// subclass (like Concast or ObservableQuery). Those methods assume\n// (perhaps unwisely?) that they can call the subtype's constructor with a\n// Subscriber function, even though the subclass constructor might expect\n// different parameters. Defining this static Symbol.species property on\n// the subclass is a hint to generic Observable code to use the default\n// constructor instead of trying to do `new Subclass(observer => ...)`.\nexport function fixObservableSubclass<\n  S extends new (...args: any[]) => Observable<any>,\n>(subclass: S): S {\n  function set(key: symbol | string) {\n    // Object.defineProperty is necessary because the Symbol.species\n    // property is a getter by default in modern JS environments, so we\n    // can't assign to it with a normal assignment expression.\n    Object.defineProperty(subclass, key, { value: Observable });\n  }\n  if (canUseSymbol && Symbol.species) {\n    set(Symbol.species);\n  }\n  // The \"@@species\" string is used as a fake Symbol.species value in some\n  // polyfill systems (including the SymbolSpecies variable used by\n  // zen-observable), so we should set it as well, to be safe.\n  set(\"@@species\");\n  return subclass;\n}\n","import { Observable, Observer, ObservableSubscription, Subscriber } from \"./Observable\";\nimport { iterateObserversSafely } from \"./iteration\";\nimport { fixObservableSubclass } from \"./subclassing\";\n\ntype MaybeAsync<T> = T | PromiseLike<T>;\n\nfunction isPromiseLike<T>(value: MaybeAsync<T>): value is PromiseLike<T> {\n  return value && typeof (value as any).then === \"function\";\n}\n\n// Any individual Source<T> can be an Observable<T> or a promise for one.\ntype Source<T> = MaybeAsync<Observable<T>>;\n\nexport type ConcastSourcesIterable<T> = Iterable<Source<T>>;\n\n// A Concast<T> observable concatenates the given sources into a single\n// non-overlapping sequence of Ts, automatically unwrapping any promises,\n// and broadcasts the T elements of that sequence to any number of\n// subscribers, all without creating a bunch of intermediary Observable\n// wrapper objects.\n//\n// Even though any number of observers can subscribe to the Concast, each\n// source observable is guaranteed to receive at most one subscribe call,\n// and the results are multicast to all observers.\n//\n// In addition to broadcasting every next/error message to this.observers,\n// the Concast stores the most recent message using this.latest, so any\n// new observers can immediately receive the latest message, even if it\n// was originally delivered in the past. This behavior means we can assume\n// every active observer in this.observers has received the same most\n// recent message.\n//\n// With the exception of this.latest replay, a Concast is a \"hot\"\n// observable in the sense that it does not replay past results from the\n// beginning of time for each new observer.\n//\n// Could we have used some existing RxJS class instead? Concast<T> is\n// similar to a BehaviorSubject<T>, because it is multicast and redelivers\n// the latest next/error message to new subscribers. Unlike Subject<T>,\n// Concast<T> does not expose an Observer<T> interface (this.handlers is\n// intentionally private), since Concast<T> gets its inputs from the\n// concatenated sources. If we ever switch to RxJS, there may be some\n// value in reusing their code, but for now we use zen-observable, which\n// does not contain any Subject implementations.\nexport class Concast<T> extends Observable<T> {\n  // Active observers receiving broadcast messages. Thanks to this.latest,\n  // we can assume all observers in this Set have received the same most\n  // recent message, though possibly at different times in the past.\n  private observers = new Set<Observer<T>>();\n\n  // This property starts off undefined to indicate the initial\n  // subscription has not yet begun, then points to each source\n  // subscription in turn, and finally becomes null after the sources have\n  // been exhausted. After that, it stays null.\n  private sub?: ObservableSubscription | null;\n\n  // Not only can the individual elements of the iterable be promises, but\n  // also the iterable itself can be wrapped in a promise.\n  constructor(sources: MaybeAsync<ConcastSourcesIterable<T>> | Subscriber<T>) {\n    super(observer => {\n      this.addObserver(observer);\n      return () => this.removeObserver(observer);\n    });\n\n    // Suppress rejection warnings for this.promise, since it's perfectly\n    // acceptable to pay no attention to this.promise if you're consuming\n    // the results through the normal observable API.\n    this.promise.catch(_ => {});\n\n    // If someone accidentally tries to create a Concast using a subscriber\n    // function, recover by creating an Observable from that subscriber and\n    // using it as the source.\n    if (typeof sources === \"function\") {\n      sources = [new Observable(sources)];\n    }\n\n    if (isPromiseLike(sources)) {\n      sources.then(\n        iterable => this.start(iterable),\n        this.handlers.error,\n      );\n    } else {\n      this.start(sources);\n    }\n  }\n\n  // A consumable array of source observables, incrementally consumed\n  // each time this.handlers.complete is called.\n  private sources: Source<T>[];\n\n  private start(sources: ConcastSourcesIterable<T>) {\n    if (this.sub !== void 0) return;\n\n    // In practice, sources is most often simply an Array of observables.\n    // TODO Consider using sources[Symbol.iterator]() to take advantage\n    // of the laziness of non-Array iterables.\n    this.sources = Array.from(sources);\n\n    // Calling this.handlers.complete() kicks off consumption of the first\n    // source observable. It's tempting to do this step lazily in\n    // addObserver, but this.promise can be accessed without calling\n    // addObserver, so consumption needs to begin eagerly.\n    this.handlers.complete();\n  }\n\n  private deliverLastMessage(observer: Observer<T>) {\n    if (this.latest) {\n      const nextOrError = this.latest[0];\n      const method = observer[nextOrError];\n      if (method) {\n        method.call(observer, this.latest[1]);\n      }\n      // If the subscription is already closed, and the last message was\n      // a 'next' message, simulate delivery of the final 'complete'\n      // message again.\n      if (this.sub === null &&\n          nextOrError === \"next\" &&\n          observer.complete) {\n        observer.complete();\n      }\n    }\n  }\n\n  // Note: cleanup observers do not count towards this total.\n  private addCount = 0;\n\n  public addObserver(observer: Observer<T>) {\n    if (!this.observers.has(observer)) {\n      // Immediately deliver the most recent message, so we can always\n      // be sure all observers have the latest information.\n      this.deliverLastMessage(observer);\n      this.observers.add(observer);\n      ++this.addCount;\n    }\n  }\n\n  public removeObserver(\n    observer: Observer<T>,\n    quietly?: boolean,\n  ) {\n    if (this.observers.delete(observer) &&\n        --this.addCount < 1 &&\n        !quietly) {\n      // In case there are still any cleanup observers in this.observers,\n      // and no error or completion has been broadcast yet, make sure\n      // those observers receive an error that terminates them.\n      this.handlers.error(new Error(\"Observable cancelled prematurely\"));\n    }\n  }\n\n  // Any Concast object can be trivially converted to a Promise, without\n  // having to create a new wrapper Observable. This promise provides an\n  // easy way to observe the final state of the Concast.\n  private resolve: (result?: T | PromiseLike<T>) => void;\n  private reject: (reason: any) => void;\n  public readonly promise = new Promise<T>((resolve, reject) => {\n    this.resolve = resolve;\n    this.reject = reject;\n  });\n\n  // Name and argument of the most recently invoked observer method, used\n  // to deliver latest results immediately to new observers.\n  private latest?: [\"next\" | \"error\", any];\n\n  // Bound handler functions that can be reused for every internal\n  // subscription.\n  private handlers = {\n    next: (result: T) => {\n      if (this.sub !== null) {\n        this.latest = [\"next\", result];\n        iterateObserversSafely(this.observers, \"next\", result);\n      }\n    },\n\n    error: (error: any) => {\n      const { sub } = this;\n      if (sub !== null) {\n        // Delay unsubscribing from the underlying subscription slightly,\n        // so that immediately subscribing another observer can keep the\n        // subscription active.\n        if (sub) setTimeout(() => sub.unsubscribe());\n        this.sub = null;\n        this.latest = [\"error\", error];\n        this.reject(error);\n        iterateObserversSafely(this.observers, \"error\", error);\n      }\n    },\n\n    complete: () => {\n      if (this.sub !== null) {\n        const value = this.sources.shift();\n        if (!value) {\n          this.sub = null;\n          if (this.latest &&\n              this.latest[0] === \"next\") {\n            this.resolve(this.latest[1]);\n          } else {\n            this.resolve();\n          }\n          // We do not store this.latest = [\"complete\"], because doing so\n          // discards useful information about the previous next (or\n          // error) message. Instead, if new observers subscribe after\n          // this Concast has completed, they will receive the final\n          // 'next' message (unless there was an error) immediately\n          // followed by a 'complete' message (see addObserver).\n          iterateObserversSafely(this.observers, \"complete\");\n        } else if (isPromiseLike(value)) {\n          value.then(obs => this.sub = obs.subscribe(this.handlers));\n        } else {\n          this.sub = value.subscribe(this.handlers);\n        }\n      }\n    },\n  };\n\n  public cleanup(callback: () => any) {\n    let called = false;\n    const once = () => {\n      if (!called) {\n        called = true;\n        // Removing a cleanup observer should not unsubscribe from the\n        // underlying Observable, so the only removeObserver behavior we\n        // need here is to delete observer from this.observers.\n        this.observers.delete(observer);\n        callback();\n      }\n    }\n    const observer = {\n      next: once,\n      error: once,\n      complete: once,\n    };\n    const count = this.addCount;\n    this.addObserver(observer);\n    // Normally addObserver increments this.addCount, but we can \"hide\"\n    // cleanup observers by restoring this.addCount to its previous value\n    // after adding any cleanup observer.\n    this.addCount = count;\n  }\n\n  // A public way to abort observation and broadcast.\n  public cancel = (reason: any) => {\n    this.reject(reason);\n    this.sources = [];\n    this.handlers.complete();\n  }\n}\n\n// Necessary because the Concast constructor has a different signature\n// than the Observable constructor.\nfixObservableSubclass(Concast);\n","export function isNonEmptyArray<T>(value?: ArrayLike<T>): value is Array<T> {\n  return Array.isArray(value) && value.length > 0;\n}\n","import { ExecutionResult } from 'graphql';\n\nexport function graphQLResultHasError(result: ExecutionResult<unknown>): boolean {\n  return (result.errors && result.errors.length > 0) || false;\n}\n","import { TupleToIntersection } from './mergeDeep';\n\n/**\n * Merges the provided objects shallowly and removes\n * all properties with an `undefined` value\n */\nexport function compact<TArgs extends any[]>(\n  ...objects: TArgs\n): TupleToIntersection<TArgs> {\n  const result = Object.create(null);\n\n  objects.forEach(obj => {\n    if (!obj) return;\n    Object.keys(obj).forEach(key => {\n      const value = (obj as any)[key];\n      if (value !== void 0) {\n        result[key] = value;\n      }\n    });\n  });\n\n  return result;\n}\n","const prefixCounts = new Map<string, number>();\n\n// These IDs won't be globally unique, but they will be unique within this\n// process, thanks to the counter, and unguessable thanks to the random suffix.\nexport function makeUniqueId(prefix: string) {\n  const count = prefixCounts.get(prefix) || 1;\n  prefixCounts.set(prefix, count + 1);\n  return `${prefix}:${count}:${Math.random().toString(36).slice(2)}`;\n}\n","import { Observable } from '../../utilities';\n\nexport function fromError<T>(errorValue: any): Observable<T> {\n  return new Observable<T>(observer => {\n    observer.error(errorValue);\n  });\n}\n","export type ServerError = Error & {\n  response: Response;\n  result: Record<string, any>;\n  statusCode: number;\n};\n\nexport const throwServerError = (\n  response: Response,\n  result: any,\n  message: string\n) => {\n  const error = new Error(message) as ServerError;\n  error.name = 'ServerError';\n  error.response = response;\n  error.statusCode = response.status;\n  error.result = result;\n  throw error;\n};\n","import { InvariantError, invariant } from '../../utilities/globals';\n\nimport { Observable, Observer } from '../../utilities';\nimport {\n  NextLink,\n  Operation,\n  RequestHandler,\n  FetchResult,\n  GraphQLRequest\n} from './types';\nimport {\n  validateOperation,\n  createOperation,\n  transformOperation,\n} from '../utils';\n\nfunction passthrough(op: Operation, forward: NextLink) {\n  return (forward ? forward(op) : Observable.of()) as Observable<FetchResult>;\n}\n\nfunction toLink(handler: RequestHandler | ApolloLink) {\n  return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\n\nfunction isTerminating(link: ApolloLink): boolean {\n  return link.request.length <= 1;\n}\n\nclass LinkError extends Error {\n  public link?: ApolloLink;\n  constructor(message?: string, link?: ApolloLink) {\n    super(message);\n    this.link = link;\n  }\n}\n\nexport class ApolloLink {\n  public static empty(): ApolloLink {\n    return new ApolloLink(() => Observable.of());\n  }\n\n  public static from(links: (ApolloLink | RequestHandler)[]): ApolloLink {\n    if (links.length === 0) return ApolloLink.empty();\n    return links.map(toLink).reduce((x, y) => x.concat(y)) as ApolloLink;\n  }\n\n  public static split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler,\n  ): ApolloLink {\n    const leftLink = toLink(left);\n    const rightLink = toLink(right || new ApolloLink(passthrough));\n\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n      return new ApolloLink(operation => {\n        return test(operation)\n          ? leftLink.request(operation) || Observable.of()\n          : rightLink.request(operation) || Observable.of();\n      });\n    } else {\n      return new ApolloLink((operation, forward) => {\n        return test(operation)\n          ? leftLink.request(operation, forward) || Observable.of()\n          : rightLink.request(operation, forward) || Observable.of();\n      });\n    }\n  }\n\n  public static execute(\n    link: ApolloLink,\n    operation: GraphQLRequest,\n  ): Observable<FetchResult> {\n    return (\n      link.request(\n        createOperation(\n          operation.context,\n          transformOperation(validateOperation(operation)),\n        ),\n      ) || Observable.of()\n    );\n  }\n\n  public static concat(\n    first: ApolloLink | RequestHandler,\n    second: ApolloLink | RequestHandler,\n  ) {\n    const firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n      invariant.warn(\n        new LinkError(\n          `You are calling concat on a terminating link, which will have no effect`,\n          firstLink,\n        ),\n      );\n      return firstLink;\n    }\n    const nextLink = toLink(second);\n\n    if (isTerminating(nextLink)) {\n      return new ApolloLink(\n        operation =>\n          firstLink.request(\n            operation,\n            op => nextLink.request(op) || Observable.of(),\n          ) || Observable.of(),\n      );\n    } else {\n      return new ApolloLink((operation, forward) => {\n        return (\n          firstLink.request(operation, op => {\n            return nextLink.request(op, forward) || Observable.of();\n          }) || Observable.of()\n        );\n      });\n    }\n  }\n\n  constructor(request?: RequestHandler) {\n    if (request) this.request = request;\n  }\n\n  public split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler,\n  ): ApolloLink {\n    return this.concat(\n      ApolloLink.split(test, left, right || new ApolloLink(passthrough))\n    );\n  }\n\n  public concat(next: ApolloLink | RequestHandler): ApolloLink {\n    return ApolloLink.concat(this, next);\n  }\n\n  public request(\n    operation: Operation,\n    forward?: NextLink,\n  ): Observable<FetchResult> | null {\n    throw new InvariantError('request is not implemented');\n  }\n\n  protected onError(\n    error: any,\n    observer?: Observer<FetchResult>,\n  ): false | void {\n    if (observer && observer.error) {\n      observer.error(error);\n      // Returning false indicates that observer.error does not need to be\n      // called again, since it was already called (on the previous line).\n      // Calling observer.error again would not cause any real problems,\n      // since only the first call matters, but custom onError functions\n      // might have other reasons for wanting to prevent the default\n      // behavior by returning false.\n      return false;\n    }\n    // Throw errors will be passed to observer.error.\n    throw error;\n  }\n\n  public setOnError(fn: ApolloLink[\"onError\"]): this {\n    this.onError = fn;\n    return this;\n  }\n}\n","import { GraphQLRequest, Operation } from '../core';\n\nexport function createOperation(\n  starting: any,\n  operation: GraphQLRequest,\n): Operation {\n  let context = { ...starting };\n  const setContext = (next: any) => {\n    if (typeof next === 'function') {\n      context = { ...context, ...next(context) };\n    } else {\n      context = { ...context, ...next };\n    }\n  };\n  const getContext = () => ({ ...context });\n\n  Object.defineProperty(operation, 'setContext', {\n    enumerable: false,\n    value: setContext,\n  });\n\n  Object.defineProperty(operation, 'getContext', {\n    enumerable: false,\n    value: getContext,\n  });\n\n  return operation as Operation;\n}\n","import { GraphQLRequest, Operation } from '../core';\nimport { getOperationName } from '../../utilities';\n\nexport function transformOperation(operation: GraphQLRequest): GraphQLRequest {\n  const transformedOperation: GraphQLRequest = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query,\n  };\n\n  // Best guess at an operation name\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName =\n      typeof transformedOperation.query !== 'string'\n        ? getOperationName(transformedOperation.query) || undefined\n        : '';\n  }\n\n  return transformedOperation as Operation;\n}\n","import { InvariantError } from '../../utilities/globals'\nimport { GraphQLRequest } from '../core';\n\nexport function validateOperation(operation: GraphQLRequest): GraphQLRequest {\n  const OPERATION_FIELDS = [\n    'query',\n    'operationName',\n    'variables',\n    'extensions',\n    'context',\n  ];\n  for (let key of Object.keys(operation)) {\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw new InvariantError(`illegal argument: ${key}`);\n    }\n  }\n\n  return operation;\n}\n","import { ApolloLink } from './ApolloLink';\n\nexport const execute = ApolloLink.execute;\n","import { InvariantError } from '../../utilities/globals';\n\nexport type ClientParseError = InvariantError & {\n  parseError: Error;\n};\n\nexport const serializeFetchParameter = (p: any, label: string) => {\n  let serialized;\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e) {\n    const parseError = new InvariantError(\n      `Network request failed. ${label} is not serializable: ${e.message}`,\n    ) as ClientParseError;\n    parseError.parseError = e;\n    throw parseError;\n  }\n  return serialized;\n};\n","import { Operation } from '../core';\nimport { throwServerError } from '../utils';\n\nconst { hasOwnProperty } = Object.prototype;\n\nexport type ServerParseError = Error & {\n  response: Response;\n  statusCode: number;\n  bodyText: string;\n};\n\nexport function parseAndCheckHttpResponse(\n  operations: Operation | Operation[],\n) {\n  return (response: Response) => response\n    .text()\n    .then(bodyText => {\n      try {\n        return JSON.parse(bodyText);\n      } catch (err) {\n        const parseError = err as ServerParseError;\n        parseError.name = 'ServerParseError';\n        parseError.response = response;\n        parseError.statusCode = response.status;\n        parseError.bodyText = bodyText;\n        throw parseError;\n      }\n    })\n    .then((result: any) => {\n      if (response.status >= 300) {\n        // Network error\n        throwServerError(\n          response,\n          result,\n          `Response not successful: Received status code ${response.status}`,\n        );\n      }\n\n      if (\n        !Array.isArray(result) &&\n        !hasOwnProperty.call(result, 'data') &&\n        !hasOwnProperty.call(result, 'errors')\n      ) {\n        // Data error\n        throwServerError(\n          response,\n          result,\n          `Server response was missing for query '${\n            Array.isArray(operations)\n              ? operations.map(op => op.operationName)\n              : operations.operationName\n          }'.`,\n        );\n      }\n      return result;\n    });\n}\n","import { InvariantError } from '../../utilities/globals';\n\nexport const checkFetcher = (fetcher: WindowOrWorkerGlobalScope['fetch'] | undefined) => {\n  if (!fetcher && typeof fetch === 'undefined') {\n    throw new InvariantError(`\n\"fetch\" has not been found globally and no fetcher has been \\\nconfigured. To fix this, install a fetch package (like \\\nhttps://www.npmjs.com/package/cross-fetch), instantiate the \\\nfetcher, and pass it into your HttpLink constructor. For example:\n\nimport fetch from 'cross-fetch';\nimport { ApolloClient, HttpLink } from '@apollo/client';\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: '/graphql', fetch })\n});\n    `);\n  }\n};\n","import { ASTNode, print } from 'graphql';\n\nimport { Operation } from '../core';\n\nexport interface Printer {\n  (node: ASTNode, originalPrint: typeof print): string\n};\n\nexport interface UriFunction {\n  (operation: Operation): string;\n}\n\nexport interface Body {\n  query?: string;\n  operationName?: string;\n  variables?: Record<string, any>;\n  extensions?: Record<string, any>;\n}\n\nexport interface HttpOptions {\n  /**\n   * The URI to use when fetching operations.\n   *\n   * Defaults to '/graphql'.\n   */\n  uri?: string | UriFunction;\n\n  /**\n   * Passes the extensions field to your graphql server.\n   *\n   * Defaults to false.\n   */\n  includeExtensions?: boolean;\n\n  /**\n   * A `fetch`-compatible API to use when making requests.\n   */\n  fetch?: WindowOrWorkerGlobalScope['fetch'];\n\n  /**\n   * An object representing values to be sent as headers on the request.\n   */\n  headers?: any;\n\n  /**\n   * The credentials policy you want to use for the fetch call.\n   */\n  credentials?: string;\n\n  /**\n   * Any overrides of the fetch options argument to pass to the fetch call.\n   */\n  fetchOptions?: any;\n\n  /**\n   * If set to true, use the HTTP GET method for query operations. Mutations\n   * will still use the method specified in fetchOptions.method (which defaults\n   * to POST).\n   */\n  useGETForQueries?: boolean;\n\n  /**\n   * If set to true, the default behavior of stripping unused variables\n   * from the request will be disabled.\n   *\n   * Unused variables are likely to trigger server-side validation errors,\n   * per https://spec.graphql.org/draft/#sec-All-Variables-Used, but this\n   * includeUnusedVariables option can be useful if your server deviates\n   * from the GraphQL specification by not strictly enforcing that rule.\n   */\n  includeUnusedVariables?: boolean;\n  /**\n   * A function to substitute for the default query print function. Can be\n   * used to apply changes to the results of the print function.\n   */\n   print?: Printer;\n}\n\nexport interface HttpQueryOptions {\n  includeQuery?: boolean;\n  includeExtensions?: boolean;\n}\n\nexport interface HttpConfig {\n  http?: HttpQueryOptions;\n  options?: any;\n  headers?: any;\n  credentials?: any;\n}\n\nconst defaultHttpOptions: HttpQueryOptions = {\n  includeQuery: true,\n  includeExtensions: false,\n};\n\nconst defaultHeaders = {\n  // headers are case insensitive (https://stackoverflow.com/a/5259004)\n  accept: '*/*',\n  'content-type': 'application/json',\n};\n\nconst defaultOptions = {\n  method: 'POST',\n};\n\nexport const fallbackHttpConfig = {\n  http: defaultHttpOptions,\n  headers: defaultHeaders,\n  options: defaultOptions,\n};\n\nexport const defaultPrinter: Printer = (ast, printer) => printer(ast);\n\nexport function selectHttpOptionsAndBody(\n  operation: Operation,\n  fallbackConfig: HttpConfig,\n  ...configs: Array<HttpConfig>\n) {\n  configs.unshift(fallbackConfig);\n  return selectHttpOptionsAndBodyInternal(\n    operation,\n    defaultPrinter,\n    ...configs,\n  );\n}\n\nexport function selectHttpOptionsAndBodyInternal(\n  operation: Operation,\n  printer: Printer,\n  ...configs: HttpConfig[]\n) {\n  let options = {} as HttpConfig & Record<string, any>;\n  let http = {} as HttpQueryOptions;\n\n  configs.forEach(config => {\n    options = {\n      ...options,\n      ...config.options,\n      headers: {\n        ...options.headers,\n        ...headersToLowerCase(config.headers),\n      },\n    };\n\n    if (config.credentials) {\n      options.credentials = config.credentials;\n    }\n\n    http = {\n      ...http,\n      ...config.http,\n    };\n  });\n\n  //The body depends on the http options\n  const { operationName, extensions, variables, query } = operation;\n  const body: Body = { operationName, variables };\n\n  if (http.includeExtensions) (body as any).extensions = extensions;\n\n  // not sending the query (i.e persisted queries)\n  if (http.includeQuery) (body as any).query = printer(query, print);\n\n  return {\n    options,\n    body,\n  };\n};\n\nfunction headersToLowerCase(\n  headers: Record<string, string> | undefined\n): typeof headers {\n  if (headers) {\n    const normalized = Object.create(null);\n    Object.keys(Object(headers)).forEach(name => {\n      normalized[name.toLowerCase()] = headers[name];\n    });\n    return normalized;\n  }\n  return headers;\n}\n","import '../../utilities/globals';\n\nimport { visit, DefinitionNode, VariableDefinitionNode } from 'graphql';\n\nimport { ApolloLink } from '../core';\nimport { Observable } from '../../utilities';\nimport { serializeFetchParameter } from './serializeFetchParameter';\nimport { selectURI } from './selectURI';\nimport { parseAndCheckHttpResponse } from './parseAndCheckHttpResponse';\nimport { checkFetcher } from './checkFetcher';\nimport {\n  selectHttpOptionsAndBodyInternal,\n  defaultPrinter,\n  fallbackHttpConfig,\n  HttpOptions\n} from './selectHttpOptionsAndBody';\nimport { createSignalIfSupported } from './createSignalIfSupported';\nimport { rewriteURIForGET } from './rewriteURIForGET';\nimport { fromError } from '../utils';\nimport { maybe } from '../../utilities';\n\nconst backupFetch = maybe(() => fetch);\n\nexport const createHttpLink = (linkOptions: HttpOptions = {}) => {\n  let {\n    uri = '/graphql',\n    // use default global fetch if nothing passed in\n    fetch: preferredFetch,\n    print = defaultPrinter,\n    includeExtensions,\n    useGETForQueries,\n    includeUnusedVariables = false,\n    ...requestOptions\n  } = linkOptions;\n\n  if (__DEV__) {\n    // Make sure at least one of preferredFetch, window.fetch, or backupFetch is\n    // defined, so requests won't fail at runtime.\n    checkFetcher(preferredFetch || backupFetch);\n  }\n\n  const linkConfig = {\n    http: { includeExtensions },\n    options: requestOptions.fetchOptions,\n    credentials: requestOptions.credentials,\n    headers: requestOptions.headers,\n  };\n\n  return new ApolloLink(operation => {\n    let chosenURI = selectURI(operation, uri);\n\n    const context = operation.getContext();\n\n    // `apollographql-client-*` headers are automatically set if a\n    // `clientAwareness` object is found in the context. These headers are\n    // set first, followed by the rest of the headers pulled from\n    // `context.headers`. If desired, `apollographql-client-*` headers set by\n    // the `clientAwareness` object can be overridden by\n    // `apollographql-client-*` headers set in `context.headers`.\n    const clientAwarenessHeaders: {\n      'apollographql-client-name'?: string;\n      'apollographql-client-version'?: string;\n    } = {};\n\n    if (context.clientAwareness) {\n      const { name, version } = context.clientAwareness;\n      if (name) {\n        clientAwarenessHeaders['apollographql-client-name'] = name;\n      }\n      if (version) {\n        clientAwarenessHeaders['apollographql-client-version'] = version;\n      }\n    }\n\n    const contextHeaders = { ...clientAwarenessHeaders, ...context.headers };\n\n    const contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: contextHeaders,\n    };\n\n    //uses fallback, link, and then context to build options\n    const { options, body } = selectHttpOptionsAndBodyInternal(\n      operation,\n      print,\n      fallbackHttpConfig,\n      linkConfig,\n      contextConfig,\n    );\n\n    if (body.variables && !includeUnusedVariables) {\n      const unusedNames = new Set(Object.keys(body.variables));\n      visit(operation.query, {\n        Variable(node, _key, parent) {\n          // A variable type definition at the top level of a query is not\n          // enough to silence server-side errors about the variable being\n          // unused, so variable definitions do not count as usage.\n          // https://spec.graphql.org/draft/#sec-All-Variables-Used\n          if (parent && (parent as VariableDefinitionNode).kind !== 'VariableDefinition') {\n            unusedNames.delete(node.name.value);\n          }\n        },\n      });\n      if (unusedNames.size) {\n        // Make a shallow copy of body.variables (with keys in the same\n        // order) and then delete unused variables from the copy.\n        body.variables = { ...body.variables };\n        unusedNames.forEach(name => {\n          delete body.variables![name];\n        });\n      }\n    }\n\n    let controller: any;\n    if (!(options as any).signal) {\n      const { controller: _controller, signal } = createSignalIfSupported();\n      controller = _controller;\n      if (controller) (options as any).signal = signal;\n    }\n\n    // If requested, set method to GET if there are no mutations.\n    const definitionIsMutation = (d: DefinitionNode) => {\n      return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n    };\n    if (\n      useGETForQueries &&\n      !operation.query.definitions.some(definitionIsMutation)\n    ) {\n      options.method = 'GET';\n    }\n\n    if (options.method === 'GET') {\n      const { newURI, parseError } = rewriteURIForGET(chosenURI, body);\n      if (parseError) {\n        return fromError(parseError);\n      }\n      chosenURI = newURI;\n    } else {\n      try {\n        (options as any).body = serializeFetchParameter(body, 'Payload');\n      } catch (parseError) {\n        return fromError(parseError);\n      }\n    }\n\n    return new Observable(observer => {\n      // Prefer linkOptions.fetch (preferredFetch) if provided, and otherwise\n      // fall back to the *current* global window.fetch function (see issue\n      // #7832), or (if all else fails) the backupFetch function we saved when\n      // this module was first evaluated. This last option protects against the\n      // removal of window.fetch, which is unlikely but not impossible.\n      const currentFetch = preferredFetch || maybe(() => fetch) || backupFetch;\n\n      currentFetch!(chosenURI, options)\n        .then(response => {\n          operation.setContext({ response });\n          return response;\n        })\n        .then(parseAndCheckHttpResponse(operation))\n        .then(result => {\n          // we have data and can send it to back up the link chain\n          observer.next(result);\n          observer.complete();\n          return result;\n        })\n        .catch(err => {\n          // fetch was cancelled so it's already been cleaned up in the unsubscribe\n          if (err.name === 'AbortError') return;\n          // if it is a network error, BUT there is graphql result info\n          // fire the next observer before calling error\n          // this gives apollo-client (and react-apollo) the `graphqlErrors` and `networErrors`\n          // to pass to UI\n          // this should only happen if we *also* have data as part of the response key per\n          // the spec\n          if (err.result && err.result.errors && err.result.data) {\n            // if we don't call next, the UI can only show networkError because AC didn't\n            // get any graphqlErrors\n            // this is graphql execution result info (i.e errors and possibly data)\n            // this is because there is no formal spec how errors should translate to\n            // http status codes. So an auth error (401) could have both data\n            // from a public field, errors from a private field, and a status of 401\n            // {\n            //  user { // this will have errors\n            //    firstName\n            //  }\n            //  products { // this is public so will have data\n            //    cost\n            //  }\n            // }\n            //\n            // the result of above *could* look like this:\n            // {\n            //   data: { products: [{ cost: \"$10\" }] },\n            //   errors: [{\n            //      message: 'your session has timed out',\n            //      path: []\n            //   }]\n            // }\n            // status code of above would be a 401\n            // in the UI you want to show data where you can, errors as data where you can\n            // and use correct http status codes\n            observer.next(err.result);\n          }\n          observer.error(err);\n        });\n\n      return () => {\n        // XXX support canceling this request\n        // https://developers.google.com/web/updates/2017/09/abortable-fetch\n        if (controller) controller.abort();\n      };\n    });\n  });\n};\n","import { Operation } from '../core';\n\nexport const selectURI = (\n  operation: Operation,\n  fallbackURI?: string | ((operation: Operation) => string),\n) => {\n  const context = operation.getContext();\n  const contextURI = context.uri;\n\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === 'function') {\n    return fallbackURI(operation);\n  } else {\n    return (fallbackURI as string) || '/graphql';\n  }\n};\n","export const createSignalIfSupported = () => {\n  if (typeof AbortController === 'undefined')\n    return { controller: false, signal: false };\n\n  const controller = new AbortController();\n  const signal = controller.signal;\n  return { controller, signal };\n};\n","import { serializeFetchParameter } from './serializeFetchParameter';\nimport { Body } from './selectHttpOptionsAndBody';\n\n// For GET operations, returns the given URI rewritten with parameters, or a\n// parse error.\nexport function rewriteURIForGET(chosenURI: string, body: Body) {\n  // Implement the standard HTTP GET serialization, plus 'extensions'. Note\n  // the extra level of JSON serialization!\n  const queryParams: string[] = [];\n  const addQueryParam = (key: string, value: string) => {\n    queryParams.push(`${key}=${encodeURIComponent(value)}`);\n  };\n\n  if ('query' in body) {\n    addQueryParam('query', body.query!);\n  }\n  if (body.operationName) {\n    addQueryParam('operationName', body.operationName);\n  }\n  if (body.variables) {\n    let serializedVariables;\n    try {\n      serializedVariables = serializeFetchParameter(\n        body.variables,\n        'Variables map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('variables', serializedVariables);\n  }\n  if (body.extensions) {\n    let serializedExtensions;\n    try {\n      serializedExtensions = serializeFetchParameter(\n        body.extensions,\n        'Extensions map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('extensions', serializedExtensions);\n  }\n\n  // Reconstruct the URI with added query params.\n  // XXX This assumes that the URI is well-formed and that it doesn't\n  //     already contain any of these query params. We could instead use the\n  //     URL API and take a polyfill (whatwg-url@6) for older browsers that\n  //     don't support URLSearchParams. Note that some browsers (and\n  //     versions of whatwg-url) support URL but not URLSearchParams!\n  let fragment = '',\n    preFragment = chosenURI;\n  const fragmentStart = chosenURI.indexOf('#');\n  if (fragmentStart !== -1) {\n    fragment = chosenURI.substr(fragmentStart);\n    preFragment = chosenURI.substr(0, fragmentStart);\n  }\n  const queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\n  const newURI =\n    preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\n  return { newURI };\n}\n","import { ApolloLink, RequestHandler } from '../core';\nimport { HttpOptions } from './selectHttpOptionsAndBody';\nimport { createHttpLink } from './createHttpLink';\n\nexport class HttpLink extends ApolloLink {\n  public requester: RequestHandler;\n  constructor(public options: HttpOptions = {}) {\n    super(createHttpLink(options).request);\n  }\n}\n","const { toString, hasOwnProperty } = Object.prototype;\nconst fnToStr = Function.prototype.toString;\nconst previousComparisons = new Map<object, Set<object>>();\n\n/**\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\n */\nexport function equal(a: any, b: any): boolean {\n  try {\n    return check(a, b);\n  } finally {\n    previousComparisons.clear();\n  }\n}\n\n// Allow default imports as well.\nexport default equal;\n\nfunction check(a: any, b: any): boolean {\n  // If the two values are strictly equal, our job is easy.\n  if (a === b) {\n    return true;\n  }\n\n  // Object.prototype.toString returns a representation of the runtime type of\n  // the given value that is considerably more precise than typeof.\n  const aTag = toString.call(a);\n  const bTag = toString.call(b);\n\n  // If the runtime types of a and b are different, they could maybe be equal\n  // under some interpretation of equality, but for simplicity and performance\n  // we just return false instead.\n  if (aTag !== bTag) {\n    return false;\n  }\n\n  switch (aTag) {\n    case '[object Array]':\n      // Arrays are a lot like other objects, but we can cheaply compare their\n      // lengths as a short-cut before comparing their elements.\n      if (a.length !== b.length) return false;\n      // Fall through to object case...\n    case '[object Object]': {\n      if (previouslyCompared(a, b)) return true;\n\n      const aKeys = definedKeys(a);\n      const bKeys = definedKeys(b);\n\n      // If `a` and `b` have a different number of enumerable keys, they\n      // must be different.\n      const keyCount = aKeys.length;\n      if (keyCount !== bKeys.length) return false;\n\n      // Now make sure they have the same keys.\n      for (let k = 0; k < keyCount; ++k) {\n        if (!hasOwnProperty.call(b, aKeys[k])) {\n          return false;\n        }\n      }\n\n      // Finally, check deep equality of all child properties.\n      for (let k = 0; k < keyCount; ++k) {\n        const key = aKeys[k];\n        if (!check(a[key], b[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Error]':\n      return a.name === b.name && a.message === b.message;\n\n    case '[object Number]':\n      // Handle NaN, which is !== itself.\n      if (a !== a) return b !== b;\n      // Fall through to shared +a === +b case...\n    case '[object Boolean]':\n    case '[object Date]':\n      return +a === +b;\n\n    case '[object RegExp]':\n    case '[object String]':\n      return a == `${b}`;\n\n    case '[object Map]':\n    case '[object Set]': {\n      if (a.size !== b.size) return false;\n      if (previouslyCompared(a, b)) return true;\n\n      const aIterator = a.entries();\n      const isMap = aTag === '[object Map]';\n\n      while (true) {\n        const info = aIterator.next();\n        if (info.done) break;\n\n        // If a instanceof Set, aValue === aKey.\n        const [aKey, aValue] = info.value;\n\n        // So this works the same way for both Set and Map.\n        if (!b.has(aKey)) {\n          return false;\n        }\n\n        // However, we care about deep equality of values only when dealing\n        // with Map structures.\n        if (isMap && !check(aValue, b.get(aKey))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Uint16Array]':\n    case '[object Uint8Array]': // Buffer, in Node.js.\n    case '[object Uint32Array]':\n    case '[object Int32Array]':\n    case '[object Int8Array]':\n    case '[object Int16Array]':\n    case '[object ArrayBuffer]':\n      // DataView doesn't need these conversions, but the equality check is\n      // otherwise the same.\n      a = new Uint8Array(a);\n      b = new Uint8Array(b);\n      // Fall through...\n    case '[object DataView]': {\n      let len = a.byteLength;\n      if (len === b.byteLength) {\n        while (len-- && a[len] === b[len]) {\n          // Keep looping as long as the bytes are equal.\n        }\n      }\n      return len === -1;\n    }\n\n    case '[object AsyncFunction]':\n    case '[object GeneratorFunction]':\n    case '[object AsyncGeneratorFunction]':\n    case '[object Function]': {\n      const aCode = fnToStr.call(a);\n      if (aCode !== fnToStr.call(b)) {\n        return false;\n      }\n\n      // We consider non-native functions equal if they have the same code\n      // (native functions require === because their code is censored).\n      // Note that this behavior is not entirely sound, since !== function\n      // objects with the same code can behave differently depending on\n      // their closure scope. However, any function can behave differently\n      // depending on the values of its input arguments (including this)\n      // and its calling context (including its closure scope), even\n      // though the function object is === to itself; and it is entirely\n      // possible for functions that are not === to behave exactly the\n      // same under all conceivable circumstances. Because none of these\n      // factors are statically decidable in JavaScript, JS function\n      // equality is not well-defined. This ambiguity allows us to\n      // consider the best possible heuristic among various imperfect\n      // options, and equating non-native functions that have the same\n      // code has enormous practical benefits, such as when comparing\n      // functions that are repeatedly passed as fresh function\n      // expressions within objects that are otherwise deeply equal. Since\n      // any function created from the same syntactic expression (in the\n      // same code location) will always stringify to the same code\n      // according to fnToStr.call, we can reasonably expect these\n      // repeatedly passed function expressions to have the same code, and\n      // thus behave \"the same\" (with all the caveats mentioned above),\n      // even though the runtime function objects are !== to one another.\n      return !endsWith(aCode, nativeCodeSuffix);\n    }\n  }\n\n  // Otherwise the values are not equal.\n  return false;\n}\n\nfunction definedKeys<TObject extends object>(obj: TObject) {\n  // Remember that the second argument to Array.prototype.filter will be\n  // used as `this` within the callback function.\n  return Object.keys(obj).filter(isDefinedKey, obj);\n}\nfunction isDefinedKey<TObject extends object>(\n  this: TObject,\n  key: keyof TObject,\n) {\n  return this[key] !== void 0;\n}\n\nconst nativeCodeSuffix = \"{ [native code] }\";\n\nfunction endsWith(full: string, suffix: string) {\n  const fromIndex = full.length - suffix.length;\n  return fromIndex >= 0 &&\n    full.indexOf(suffix, fromIndex) === fromIndex;\n}\n\nfunction previouslyCompared(a: object, b: object): boolean {\n  // Though cyclic references can make an object graph appear infinite from the\n  // perspective of a depth-first traversal, the graph still contains a finite\n  // number of distinct object references. We use the previousComparisons cache\n  // to avoid comparing the same pair of object references more than once, which\n  // guarantees termination (even if we end up comparing every object in one\n  // graph to every object in the other graph, which is extremely unlikely),\n  // while still allowing weird isomorphic structures (like rings with different\n  // lengths) a chance to pass the equality test.\n  let bSet = previousComparisons.get(a);\n  if (bSet) {\n    // Return true here because we can be sure false will be returned somewhere\n    // else if the objects are not equivalent.\n    if (bSet.has(b)) return true;\n  } else {\n    previousComparisons.set(a, bSet = new Set);\n  }\n  bSet.add(b);\n  return false;\n}\n","// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\n// object keys weakly, yet can also hold non-object keys, unlike the\n// native `WeakMap`.\n\n// If no makeData function is supplied, the looked-up data will be an empty,\n// null-prototype Object.\nconst defaultMakeData = () => Object.create(null);\n\n// Useful for processing arguments objects as well as arrays.\nconst { forEach, slice } = Array.prototype;\n\nexport class Trie<Data> {\n  // Since a `WeakMap` cannot hold primitive values as keys, we need a\n  // backup `Map` instance to hold primitive keys. Both `this._weakMap`\n  // and `this._strongMap` are lazily initialized.\n  private weak?: WeakMap<any, Trie<Data>>;\n  private strong?: Map<any, Trie<Data>>;\n  private data?: Data;\n\n  constructor(\n    private weakness = true,\n    private makeData: (array: any[]) => Data = defaultMakeData,\n  ) {}\n\n  public lookup<T extends any[]>(...array: T): Data {\n    return this.lookupArray(array);\n  }\n\n  public lookupArray<T extends IArguments | any[]>(array: T): Data {\n    let node: Trie<Data> = this;\n    forEach.call(array, key => node = node.getChildTrie(key));\n    return node.data || (node.data = this.makeData(slice.call(array)));\n  }\n\n  private getChildTrie(key: any) {\n    const map = this.weakness && isObjRef(key)\n      ? this.weak || (this.weak = new WeakMap<any, Trie<Data>>())\n      : this.strong || (this.strong = new Map<any, Trie<Data>>());\n    let child = map.get(key);\n    if (!child) map.set(key, child = new Trie<Data>(this.weakness, this.makeData));\n    return child;\n  }\n}\n\nfunction isObjRef(value: any) {\n  switch (typeof value) {\n  case \"object\":\n    if (value === null) break;\n    // Fall through to return true...\n  case \"function\":\n    return true;\n  }\n  return false;\n}\n","type Context = {\n  parent: Context | null;\n  slots: { [slotId: string]: any };\n}\n\n// This currentContext variable will only be used if the makeSlotClass\n// function is called, which happens only if this is the first copy of the\n// @wry/context package to be imported.\nlet currentContext: Context | null = null;\n\n// This unique internal object is used to denote the absence of a value\n// for a given Slot, and is never exposed to outside code.\nconst MISSING_VALUE: any = {};\n\nlet idCounter = 1;\n\n// Although we can't do anything about the cost of duplicated code from\n// accidentally bundling multiple copies of the @wry/context package, we can\n// avoid creating the Slot class more than once using makeSlotClass.\nconst makeSlotClass = () => class Slot<TValue> {\n  // If you have a Slot object, you can find out its slot.id, but you cannot\n  // guess the slot.id of a Slot you don't have access to, thanks to the\n  // randomized suffix.\n  public readonly id = [\n    \"slot\",\n    idCounter++,\n    Date.now(),\n    Math.random().toString(36).slice(2),\n  ].join(\":\");\n\n  public hasValue() {\n    for (let context = currentContext; context; context = context.parent) {\n      // We use the Slot object iself as a key to its value, which means the\n      // value cannot be obtained without a reference to the Slot object.\n      if (this.id in context.slots) {\n        const value = context.slots[this.id];\n        if (value === MISSING_VALUE) break;\n        if (context !== currentContext) {\n          // Cache the value in currentContext.slots so the next lookup will\n          // be faster. This caching is safe because the tree of contexts and\n          // the values of the slots are logically immutable.\n          currentContext!.slots[this.id] = value;\n        }\n        return true;\n      }\n    }\n    if (currentContext) {\n      // If a value was not found for this Slot, it's never going to be found\n      // no matter how many times we look it up, so we might as well cache\n      // the absence of the value, too.\n      currentContext.slots[this.id] = MISSING_VALUE;\n    }\n    return false;\n  }\n\n  public getValue(): TValue | undefined {\n    if (this.hasValue()) {\n      return currentContext!.slots[this.id] as TValue;\n    }\n  }\n\n  public withValue<TResult, TArgs extends any[], TThis = any>(\n    value: TValue,\n    callback: (this: TThis, ...args: TArgs) => TResult,\n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args?: TArgs,\n    thisArg?: TThis,\n  ): TResult {\n    const slots = {\n      __proto__: null,\n      [this.id]: value,\n    };\n    const parent = currentContext;\n    currentContext = { parent, slots };\n    try {\n      // Function.prototype.apply allows the arguments array argument to be\n      // omitted or undefined, so args! is fine here.\n      return callback.apply(thisArg!, args!);\n    } finally {\n      currentContext = parent;\n    }\n  }\n\n  // Capture the current context and wrap a callback function so that it\n  // reestablishes the captured context when called.\n  static bind<TArgs extends any[], TResult, TThis = any>(\n    callback: (this: TThis, ...args: TArgs) => TResult,\n  ) {\n    const context = currentContext;\n    return function (this: TThis) {\n      const saved = currentContext;\n      try {\n        currentContext = context;\n        return callback.apply(this, arguments as any);\n      } finally {\n        currentContext = saved;\n      }\n    } as typeof callback;\n  }\n\n  // Immediately run a callback function without any captured context.\n  static noContext<TResult, TArgs extends any[], TThis = any>(\n    callback: (this: TThis, ...args: TArgs) => TResult,\n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args?: TArgs,\n    thisArg?: TThis,\n  ) {\n    if (currentContext) {\n      const saved = currentContext;\n      try {\n        currentContext = null;\n        // Function.prototype.apply allows the arguments array argument to be\n        // omitted or undefined, so args! is fine here.\n        return callback.apply(thisArg!, args!);\n      } finally {\n        currentContext = saved;\n      }\n    } else {\n      return callback.apply(thisArg!, args!);\n    }\n  }\n};\n\n// We store a single global implementation of the Slot class as a permanent\n// non-enumerable symbol property of the Array constructor. This obfuscation\n// does nothing to prevent access to the Slot class, but at least it ensures\n// the implementation (i.e. currentContext) cannot be tampered with, and all\n// copies of the @wry/context package (hopefully just one) will share the\n// same Slot implementation. Since the first copy of the @wry/context package\n// to be imported wins, this technique imposes a very high cost for any\n// future breaking changes to the Slot class.\nconst globalKey = \"@wry/context:Slot\";\nconst host = Array as any;\n\nexport const Slot: ReturnType<typeof makeSlotClass> = host[globalKey] || function () {\n  const Slot = makeSlotClass();\n  try {\n    Object.defineProperty(host, globalKey, {\n      value: host[globalKey] = Slot,\n      enumerable: false,\n      writable: false,\n      configurable: false,\n    });\n  } finally {\n    return Slot;\n  }\n}();\n","import { Slot } from \"./slot\";\nexport { Slot }\nexport const { bind, noContext } = Slot;\n\n// Relying on the @types/node declaration of global.setTimeout can make\n// things tricky for dowstream projects (see PR #7).\ndeclare function setTimeout(\n  callback: (...args: any[]) => any,\n  ms?: number,\n  ...args: any[]\n): any;\n\n// Like global.setTimeout, except the callback runs with captured context.\nexport { setTimeoutWithContext as setTimeout };\nfunction setTimeoutWithContext(callback: () => any, delay: number) {\n  return setTimeout(bind(callback), delay);\n}\n\n// Turn any generator function into an async function (using yield instead\n// of await), with context automatically preserved across yields.\nexport function asyncFromGen<\n  TArgs extends any[],\n  TYield = any,\n  TReturn = any,\n  TNext = any,\n>(\n  genFn: (...args: TArgs) => Generator<TYield, TReturn, TNext>\n) {\n  return function (this: any) {\n    const gen = genFn.apply(this, arguments as any);\n\n    type Method = (\n      this: Generator<TYield, TReturn, TNext>,\n      arg: any,\n    ) => IteratorResult<TYield, TReturn>;\n\n    const boundNext: Method = bind(gen.next);\n    const boundThrow: Method = bind(gen.throw!);\n\n    return new Promise((resolve, reject) => {\n      function invoke(method: Method, argument: any) {\n        try {\n          var result: any = method.call(gen, argument);\n        } catch (error) {\n          return reject(error);\n        }\n        const next = result.done ? resolve : invokeNext;\n        if (isPromiseLike(result.value)) {\n          result.value.then(next, result.done ? reject : invokeThrow);\n        } else {\n          next(result.value);\n        }\n      }\n      const invokeNext = (value?: any) => invoke(boundNext, value);\n      const invokeThrow = (error: any) => invoke(boundThrow, error);\n      invokeNext();\n    });\n  } as (...args: TArgs) => Promise<any>;\n}\n\nfunction isPromiseLike(value: any): value is PromiseLike<any> {\n  return value && typeof value.then === \"function\";\n}\n\n// If you use the fibers npm package to implement coroutines in Node.js,\n// you should call this function at least once to ensure context management\n// remains coherent across any yields.\nconst wrappedFibers: Function[] = [];\nexport function wrapYieldingFiberMethods<F extends Function>(Fiber: F): F {\n  // There can be only one implementation of Fiber per process, so this array\n  // should never grow longer than one element.\n  if (wrappedFibers.indexOf(Fiber) < 0) {\n    const wrap = (obj: any, method: string) => {\n      const fn = obj[method];\n      obj[method] = function () {\n        return noContext(fn, arguments as any, this);\n      };\n    }\n    // These methods can yield, according to\n    // https://github.com/laverdet/node-fibers/blob/ddebed9b8ae3883e57f822e2108e6943e5c8d2a8/fibers.js#L97-L100\n    wrap(Fiber, \"yield\");\n    wrap(Fiber.prototype, \"run\");\n    wrap(Fiber.prototype, \"throwInto\");\n    wrappedFibers.push(Fiber);\n  }\n  return Fiber;\n}\n","interface Node<K, V> {\n  key: K;\n  value: V;\n  newer: Node<K, V> | null;\n  older: Node<K, V> | null;\n}\n\nfunction defaultDispose() {}\n\nexport class Cache<K = any, V = any> {\n  private map = new Map<K, Node<K, V>>();\n  private newest: Node<K, V> | null = null;\n  private oldest: Node<K, V> | null = null;\n\n  constructor(\n    private max = Infinity,\n    public dispose: (value: V, key: K) => void = defaultDispose,\n  ) {}\n\n  public has(key: K): boolean {\n    return this.map.has(key);\n  }\n\n  public get(key: K): V | undefined {\n    const node = this.getNode(key);\n    return node && node.value;\n  }\n\n  private getNode(key: K): Node<K, V> | undefined {\n    const node = this.map.get(key);\n\n    if (node && node !== this.newest) {\n      const { older, newer } = node;\n\n      if (newer) {\n        newer.older = older;\n      }\n\n      if (older) {\n        older.newer = newer;\n      }\n\n      node.older = this.newest;\n      node.older!.newer = node;\n\n      node.newer = null;\n      this.newest = node;\n\n      if (node === this.oldest) {\n        this.oldest = newer;\n      }\n    }\n\n    return node;\n  }\n\n  public set(key: K, value: V): V {\n    let node = this.getNode(key);\n    if (node) {\n      return node.value = value;\n    }\n\n    node = {\n      key,\n      value,\n      newer: null,\n      older: this.newest\n    };\n\n    if (this.newest) {\n      this.newest.newer = node;\n    }\n\n    this.newest = node;\n    this.oldest = this.oldest || node;\n\n    this.map.set(key, node);\n\n    return node.value;\n  }\n\n  public clean() {\n    while (this.oldest && this.map.size > this.max) {\n      this.delete(this.oldest.key);\n    }\n  }\n\n  public delete(key: K): boolean {\n    const node = this.map.get(key);\n    if (node) {\n      if (node === this.newest) {\n        this.newest = node.older;\n      }\n\n      if (node === this.oldest) {\n        this.oldest = node.newer;\n      }\n\n      if (node.newer) {\n        node.newer.older = node.older;\n      }\n\n      if (node.older) {\n        node.older.newer = node.newer;\n      }\n\n      this.map.delete(key);\n      this.dispose(node.value, key);\n\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { AnyEntry } from \"./entry\";\nimport { Slot } from \"@wry/context\";\n\nexport const parentEntrySlot = new Slot<AnyEntry>();\n\nexport {\n  bind as bindContext,\n  noContext,\n  setTimeout,\n  asyncFromGen,\n} from \"@wry/context\";\n","export const {\n  hasOwnProperty,\n} = Object.prototype;\n\nexport const {\n  // This Array.from polyfill is restricted to working with Set<any> for now,\n  // but we can improve the polyfill and add other input types, as needed. Note\n  // that this fallback implementation will only be used if the host environment\n  // does not support a native Array.from function. In most modern JS runtimes,\n  // the toArray function exported here will be === Array.from.\n  from: toArray = (collection: Set<any>) => {\n    const array: any[] = [];\n    collection.forEach(item => array.push(item));\n    return array;\n  },\n} = Array;\n\nexport type Unsubscribable = {\n  unsubscribe?: void | (() => any);\n}\n\nexport function maybeUnsubscribe(entryOrDep: Unsubscribable) {\n  const { unsubscribe } = entryOrDep;\n  if (typeof unsubscribe === \"function\") {\n    entryOrDep.unsubscribe = void 0;\n    unsubscribe();\n  }\n}\n","import { parentEntrySlot } from \"./context\";\nimport { OptimisticWrapOptions } from \"./index\";\nimport { Dep } from \"./dep\";\nimport { maybeUnsubscribe, toArray, Unsubscribable } from \"./helpers\";\n\nconst emptySetPool: Set<any>[] = [];\nconst POOL_TARGET_SIZE = 100;\n\n// Since this package might be used browsers, we should avoid using the\n// Node built-in assert module.\nfunction assert(condition: any, optionalMessage?: string) {\n  if (! condition) {\n    throw new Error(optionalMessage || \"assertion failure\");\n  }\n}\n\n// Since exceptions are cached just like normal values, we need an efficient\n// way of representing unknown, ordinary, and exceptional values.\ntype Value<T> =\n  | []           // unknown\n  | [T]          // known value\n  | [void, any]; // known exception\n\nfunction valueIs(a: Value<any>, b: Value<any>) {\n  const len = a.length;\n  return (\n    // Unknown values are not equal to each other.\n    len > 0 &&\n    // Both values must be ordinary (or both exceptional) to be equal.\n    len === b.length &&\n    // The underlying value or exception must be the same.\n    a[len - 1] === b[len - 1]\n  );\n}\n\nfunction valueGet<T>(value: Value<T>): T {\n  switch (value.length) {\n    case 0: throw new Error(\"unknown value\");\n    case 1: return value[0];\n    case 2: throw value[1];\n  }\n}\n\nfunction valueCopy<T>(value: Value<T>): Value<T> {\n  return value.slice(0) as Value<T>;\n}\n\nexport type AnyEntry = Entry<any, any>;\n\nexport class Entry<TArgs extends any[], TValue> {\n  public static count = 0;\n\n  public subscribe: OptimisticWrapOptions<TArgs>[\"subscribe\"];\n  public unsubscribe: Unsubscribable[\"unsubscribe\"];\n\n  public readonly parents = new Set<AnyEntry>();\n  public readonly childValues = new Map<AnyEntry, Value<any>>();\n\n  // When this Entry has children that are dirty, this property becomes\n  // a Set containing other Entry objects, borrowed from emptySetPool.\n  // When the set becomes empty, it gets recycled back to emptySetPool.\n  public dirtyChildren: Set<AnyEntry> | null = null;\n\n  public dirty = true;\n  public recomputing = false;\n  public readonly value: Value<TValue> = [];\n\n  constructor(\n    public readonly fn: (...args: TArgs) => TValue,\n  ) {\n    ++Entry.count;\n  }\n\n  public peek(): TValue | undefined {\n    if (this.value.length === 1 && !mightBeDirty(this)) {\n      rememberParent(this);\n      return this.value[0];\n    }\n  }\n\n  // This is the most important method of the Entry API, because it\n  // determines whether the cached this.value can be returned immediately,\n  // or must be recomputed. The overall performance of the caching system\n  // depends on the truth of the following observations: (1) this.dirty is\n  // usually false, (2) this.dirtyChildren is usually null/empty, and thus\n  // (3) valueGet(this.value) is usually returned without recomputation.\n  public recompute(args: TArgs): TValue {\n    assert(! this.recomputing, \"already recomputing\");\n    rememberParent(this);\n    return mightBeDirty(this)\n      ? reallyRecompute(this, args)\n      : valueGet(this.value);\n  }\n\n  public setDirty() {\n    if (this.dirty) return;\n    this.dirty = true;\n    this.value.length = 0;\n    reportDirty(this);\n    // We can go ahead and unsubscribe here, since any further dirty\n    // notifications we receive will be redundant, and unsubscribing may\n    // free up some resources, e.g. file watchers.\n    maybeUnsubscribe(this);\n  }\n\n  public dispose() {\n    this.setDirty();\n\n    // Sever any dependency relationships with our own children, so those\n    // children don't retain this parent Entry in their child.parents sets,\n    // thereby preventing it from being fully garbage collected.\n    forgetChildren(this);\n\n    // Because this entry has been kicked out of the cache (in index.js),\n    // we've lost the ability to find out if/when this entry becomes dirty,\n    // whether that happens through a subscription, because of a direct call\n    // to entry.setDirty(), or because one of its children becomes dirty.\n    // Because of this loss of future information, we have to assume the\n    // worst (that this entry might have become dirty very soon), so we must\n    // immediately mark this entry's parents as dirty. Normally we could\n    // just call entry.setDirty() rather than calling parent.setDirty() for\n    // each parent, but that would leave this entry in parent.childValues\n    // and parent.dirtyChildren, which would prevent the child from being\n    // truly forgotten.\n    eachParent(this, (parent, child) => {\n      parent.setDirty();\n      forgetChild(parent, this);\n    });\n  }\n\n  public forget() {\n    // The code that creates Entry objects in index.ts will replace this method\n    // with one that actually removes the Entry from the cache, which will also\n    // trigger the entry.dispose method.\n    this.dispose();\n  }\n\n  private deps: Set<Dep<any>> | null = null;\n\n  public dependOn(dep: Dep<any>) {\n    dep.add(this);\n    if (! this.deps) {\n      this.deps = emptySetPool.pop() || new Set<Set<AnyEntry>>();\n    }\n    this.deps.add(dep);\n  }\n\n  public forgetDeps() {\n    if (this.deps) {\n      toArray(this.deps).forEach(dep => dep.delete(this));\n      this.deps.clear();\n      emptySetPool.push(this.deps);\n      this.deps = null;\n    }\n  }\n}\n\nfunction rememberParent(child: AnyEntry) {\n  const parent = parentEntrySlot.getValue();\n  if (parent) {\n    child.parents.add(parent);\n\n    if (! parent.childValues.has(child)) {\n      parent.childValues.set(child, []);\n    }\n\n    if (mightBeDirty(child)) {\n      reportDirtyChild(parent, child);\n    } else {\n      reportCleanChild(parent, child);\n    }\n\n    return parent;\n  }\n}\n\nfunction reallyRecompute(entry: AnyEntry, args: any[]) {\n  forgetChildren(entry);\n\n  // Set entry as the parent entry while calling recomputeNewValue(entry).\n  parentEntrySlot.withValue(entry, recomputeNewValue, [entry, args]);\n\n  if (maybeSubscribe(entry, args)) {\n    // If we successfully recomputed entry.value and did not fail to\n    // (re)subscribe, then this Entry is no longer explicitly dirty.\n    setClean(entry);\n  }\n\n  return valueGet(entry.value);\n}\n\nfunction recomputeNewValue(entry: AnyEntry, args: any[]) {\n  entry.recomputing = true;\n  // Set entry.value as unknown.\n  entry.value.length = 0;\n  try {\n    // If entry.fn succeeds, entry.value will become a normal Value.\n    entry.value[0] = entry.fn.apply(null, args);\n  } catch (e) {\n    // If entry.fn throws, entry.value will become exceptional.\n    entry.value[1] = e;\n  }\n  // Either way, this line is always reached.\n  entry.recomputing = false;\n}\n\nfunction mightBeDirty(entry: AnyEntry) {\n  return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);\n}\n\nfunction setClean(entry: AnyEntry) {\n  entry.dirty = false;\n\n  if (mightBeDirty(entry)) {\n    // This Entry may still have dirty children, in which case we can't\n    // let our parents know we're clean just yet.\n    return;\n  }\n\n  reportClean(entry);\n}\n\nfunction reportDirty(child: AnyEntry) {\n  eachParent(child, reportDirtyChild);\n}\n\nfunction reportClean(child: AnyEntry) {\n  eachParent(child, reportCleanChild);\n}\n\nfunction eachParent(\n  child: AnyEntry,\n  callback: (parent: AnyEntry, child: AnyEntry) => any,\n) {\n  const parentCount = child.parents.size;\n  if (parentCount) {\n    const parents = toArray(child.parents);\n    for (let i = 0; i < parentCount; ++i) {\n      callback(parents[i], child);\n    }\n  }\n}\n\n// Let a parent Entry know that one of its children may be dirty.\nfunction reportDirtyChild(parent: AnyEntry, child: AnyEntry) {\n  // Must have called rememberParent(child) before calling\n  // reportDirtyChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(mightBeDirty(child));\n  const parentWasClean = !mightBeDirty(parent);\n\n  if (! parent.dirtyChildren) {\n    parent.dirtyChildren = emptySetPool.pop() || new Set;\n\n  } else if (parent.dirtyChildren.has(child)) {\n    // If we already know this child is dirty, then we must have already\n    // informed our own parents that we are dirty, so we can terminate\n    // the recursion early.\n    return;\n  }\n\n  parent.dirtyChildren.add(child);\n\n  // If parent was clean before, it just became (possibly) dirty (according to\n  // mightBeDirty), since we just added child to parent.dirtyChildren.\n  if (parentWasClean) {\n    reportDirty(parent);\n  }\n}\n\n// Let a parent Entry know that one of its children is no longer dirty.\nfunction reportCleanChild(parent: AnyEntry, child: AnyEntry) {\n  // Must have called rememberChild(child) before calling\n  // reportCleanChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(! mightBeDirty(child));\n\n  const childValue = parent.childValues.get(child)!;\n  if (childValue.length === 0) {\n    parent.childValues.set(child, valueCopy(child.value));\n  } else if (! valueIs(childValue, child.value)) {\n    parent.setDirty();\n  }\n\n  removeDirtyChild(parent, child);\n\n  if (mightBeDirty(parent)) {\n    return;\n  }\n\n  reportClean(parent);\n}\n\nfunction removeDirtyChild(parent: AnyEntry, child: AnyEntry) {\n  const dc = parent.dirtyChildren;\n  if (dc) {\n    dc.delete(child);\n    if (dc.size === 0) {\n      if (emptySetPool.length < POOL_TARGET_SIZE) {\n        emptySetPool.push(dc);\n      }\n      parent.dirtyChildren = null;\n    }\n  }\n}\n\n// Removes all children from this entry and returns an array of the\n// removed children.\nfunction forgetChildren(parent: AnyEntry) {\n  if (parent.childValues.size > 0) {\n    parent.childValues.forEach((_value, child) => {\n      forgetChild(parent, child);\n    });\n  }\n\n  // Remove this parent Entry from any sets to which it was added by the\n  // addToSet method.\n  parent.forgetDeps();\n\n  // After we forget all our children, this.dirtyChildren must be empty\n  // and therefore must have been reset to null.\n  assert(parent.dirtyChildren === null);\n}\n\nfunction forgetChild(parent: AnyEntry, child: AnyEntry) {\n  child.parents.delete(parent);\n  parent.childValues.delete(child);\n  removeDirtyChild(parent, child);\n}\n\nfunction maybeSubscribe(entry: AnyEntry, args: any[]) {\n  if (typeof entry.subscribe === \"function\") {\n    try {\n      maybeUnsubscribe(entry); // Prevent double subscriptions.\n      entry.unsubscribe = entry.subscribe.apply(null, args);\n    } catch (e) {\n      // If this Entry has a subscribe function and it threw an exception\n      // (or an unsubscribe function it previously returned now throws),\n      // return false to indicate that we were not able to subscribe (or\n      // unsubscribe), and this Entry should remain dirty.\n      entry.setDirty();\n      return false;\n    }\n  }\n\n  // Returning true indicates either that there was no entry.subscribe\n  // function or that it succeeded.\n  return true;\n}\n","import { AnyEntry } from \"./entry\";\nimport { OptimisticWrapOptions } from \"./index\";\nimport { parentEntrySlot } from \"./context\";\nimport { hasOwnProperty, Unsubscribable, maybeUnsubscribe, toArray } from \"./helpers\";\n\ntype EntryMethodName = keyof typeof EntryMethods;\nconst EntryMethods = {\n  setDirty: true, // Mark parent Entry as needing to be recomputed (default)\n  dispose: true,  // Detach parent Entry from parents and children, but leave in LRU cache\n  forget: true,   // Fully remove parent Entry from LRU cache and computation graph\n};\n\nexport type OptimisticDependencyFunction<TKey> =\n  ((key: TKey) => void) & {\n    dirty: (key: TKey, entryMethodName?: EntryMethodName) => void;\n  };\n\nexport type Dep<TKey> = Set<AnyEntry> & {\n  subscribe: OptimisticWrapOptions<[TKey]>[\"subscribe\"];\n} & Unsubscribable;\n\nexport function dep<TKey>(options?: {\n  subscribe: Dep<TKey>[\"subscribe\"];\n}) {\n  const depsByKey = new Map<TKey, Dep<TKey>>();\n  const subscribe = options && options.subscribe;\n\n  function depend(key: TKey) {\n    const parent = parentEntrySlot.getValue();\n    if (parent) {\n      let dep = depsByKey.get(key);\n      if (!dep) {\n        depsByKey.set(key, dep = new Set as Dep<TKey>);\n      }\n      parent.dependOn(dep);\n      if (typeof subscribe === \"function\") {\n        maybeUnsubscribe(dep);\n        dep.unsubscribe = subscribe(key);\n      }\n    }\n  }\n\n  depend.dirty = function dirty(\n    key: TKey,\n    entryMethodName?: EntryMethodName,\n  ) {\n    const dep = depsByKey.get(key);\n    if (dep) {\n      const m: EntryMethodName = (\n        entryMethodName &&\n        hasOwnProperty.call(EntryMethods, entryMethodName)\n      ) ? entryMethodName : \"setDirty\";\n      // We have to use toArray(dep).forEach instead of dep.forEach, because\n      // modifying a Set while iterating over it can cause elements in the Set\n      // to be removed from the Set before they've been iterated over.\n      toArray(dep).forEach(entry => entry[m]());\n      depsByKey.delete(key);\n      maybeUnsubscribe(dep);\n    }\n  };\n\n  return depend as OptimisticDependencyFunction<TKey>;\n}\n","import { Trie } from \"@wry/trie\";\n\nimport { Cache } from \"./cache\";\nimport { Entry, AnyEntry } from \"./entry\";\nimport { parentEntrySlot } from \"./context\";\n\n// These helper functions are important for making optimism work with\n// asynchronous code. In order to register parent-child dependencies,\n// optimism needs to know about any currently active parent computations.\n// In ordinary synchronous code, the parent context is implicit in the\n// execution stack, but asynchronous code requires some extra guidance in\n// order to propagate context from one async task segment to the next.\nexport {\n  bindContext,\n  noContext,\n  setTimeout,\n  asyncFromGen,\n} from \"./context\";\n\n// A lighter-weight dependency, similar to OptimisticWrapperFunction, except\n// with only one argument, no makeCacheKey, no wrapped function to recompute,\n// and no result value. Useful for representing dependency leaves in the graph\n// of computation. Subscriptions are supported.\nexport { dep, OptimisticDependencyFunction } from \"./dep\";\n\nfunction makeDefaultMakeCacheKeyFunction<\n  TKeyArgs extends any[],\n  TCacheKey = any,\n>(): (...args: TKeyArgs) => TCacheKey {\n  const keyTrie = new Trie<TCacheKey>(typeof WeakMap === \"function\");\n  return function () {\n    return keyTrie.lookupArray(arguments);\n  };\n}\n\n// The defaultMakeCacheKey function is remarkably powerful, because it gives\n// a unique object for any shallow-identical list of arguments. If you need\n// to implement a custom makeCacheKey function, you may find it helpful to\n// delegate the final work to defaultMakeCacheKey, which is why we export it\n// here. However, you may want to avoid defaultMakeCacheKey if your runtime\n// does not support WeakMap, or you have the ability to return a string key.\n// In those cases, just write your own custom makeCacheKey functions.\nexport const defaultMakeCacheKey = makeDefaultMakeCacheKeyFunction();\n\n// If you're paranoid about memory leaks, or you want to avoid using WeakMap\n// under the hood, but you still need the behavior of defaultMakeCacheKey,\n// import this constructor to create your own tries.\nexport { Trie as KeyTrie }\n\nexport type OptimisticWrapperFunction<\n  TArgs extends any[],\n  TResult,\n  TKeyArgs extends any[] = TArgs,\n  TCacheKey = any,\n> = ((...args: TArgs) => TResult) & {\n  // Get the current number of Entry objects in the LRU cache.\n  readonly size: number;\n\n  // \"Dirty\" any cached Entry stored for the given arguments, marking that Entry\n  // and its ancestors as potentially needing to be recomputed. The .dirty(...)\n  // method of an optimistic function takes the same parameter types as the\n  // original function by default, unless a keyArgs function is configured, and\n  // then it matters that .dirty takes TKeyArgs instead of TArgs.\n  dirty: (...args: TKeyArgs) => void;\n  // A version of .dirty that accepts a key returned by .getKey.\n  dirtyKey: (key: TCacheKey) => void;\n\n  // Examine the current value without recomputing it.\n  peek: (...args: TKeyArgs) => TResult | undefined;\n  // A version of .peek that accepts a key returned by .getKey.\n  peekKey: (key: TCacheKey) => TResult | undefined;\n\n  // Completely remove the entry from the cache, dirtying any parent entries.\n  forget: (...args: TKeyArgs) => boolean;\n  // A version of .forget that accepts a key returned by .getKey.\n  forgetKey: (key: TCacheKey) => boolean;\n\n  // In order to use the -Key version of the above functions, you need a key\n  // rather than the arguments used to compute the key. These two functions take\n  // TArgs or TKeyArgs and return the corresponding TCacheKey. If no keyArgs\n  // function has been configured, TArgs will be the same as TKeyArgs, and thus\n  // getKey and makeCacheKey will be synonymous.\n  getKey: (...args: TArgs) => TCacheKey;\n\n  // This property is equivalent to the makeCacheKey function provided in the\n  // OptimisticWrapOptions, or (if no options.makeCacheKey function is provided)\n  // a default implementation of makeCacheKey.\n  makeCacheKey: (...args: TKeyArgs) => TCacheKey;\n};\n\nexport type OptimisticWrapOptions<\n  TArgs extends any[],\n  TKeyArgs extends any[] = TArgs,\n  TCacheKey = any,\n> = {\n  // The maximum number of cache entries that should be retained before the\n  // cache begins evicting the oldest ones.\n  max?: number;\n  // Transform the raw arguments to some other type of array, which will then\n  // be passed to makeCacheKey.\n  keyArgs?: (...args: TArgs) => TKeyArgs;\n  // The makeCacheKey function takes the same arguments that were passed to\n  // the wrapper function and returns a single value that can be used as a key\n  // in a Map to identify the cached result.\n  makeCacheKey?: (...args: TKeyArgs) => TCacheKey;\n  // If provided, the subscribe function should either return an unsubscribe\n  // function or return nothing.\n  subscribe?: (...args: TArgs) => void | (() => any);\n};\n\nconst caches = new Set<Cache<any, AnyEntry>>();\n\nexport function wrap<\n  TArgs extends any[],\n  TResult,\n  TKeyArgs extends any[] = TArgs,\n  TCacheKey = any,\n>(\n  originalFunction: (...args: TArgs) => TResult,\n  options: OptimisticWrapOptions<TArgs, TKeyArgs> = Object.create(null),\n) {\n  const cache = new Cache<TCacheKey, Entry<TArgs, TResult>>(\n    options.max || Math.pow(2, 16),\n    entry => entry.dispose(),\n  );\n\n  const keyArgs = options.keyArgs;\n  const makeCacheKey = options.makeCacheKey ||\n    makeDefaultMakeCacheKeyFunction<TKeyArgs, TCacheKey>();\n\n  const optimistic = function (): TResult {\n    const key = makeCacheKey.apply(\n      null,\n      keyArgs ? keyArgs.apply(null, arguments as any) : arguments as any\n    );\n\n    if (key === void 0) {\n      return originalFunction.apply(null, arguments as any);\n    }\n\n    let entry = cache.get(key)!;\n    if (!entry) {\n      cache.set(key, entry = new Entry(originalFunction));\n      entry.subscribe = options.subscribe;\n      // Give the Entry the ability to trigger cache.delete(key), even though\n      // the Entry itself does not know about key or cache.\n      entry.forget = () => cache.delete(key);\n    }\n\n    const value = entry.recompute(\n      Array.prototype.slice.call(arguments) as TArgs,\n    );\n\n    // Move this entry to the front of the least-recently used queue,\n    // since we just finished computing its value.\n    cache.set(key, entry);\n\n    caches.add(cache);\n\n    // Clean up any excess entries in the cache, but only if there is no\n    // active parent entry, meaning we're not in the middle of a larger\n    // computation that might be flummoxed by the cleaning.\n    if (! parentEntrySlot.hasValue()) {\n      caches.forEach(cache => cache.clean());\n      caches.clear();\n    }\n\n    return value;\n  } as OptimisticWrapperFunction<TArgs, TResult, TKeyArgs, TCacheKey>;\n\n  Object.defineProperty(optimistic, \"size\", {\n    get() {\n      return cache[\"map\"].size;\n    },\n    configurable: false,\n    enumerable: false,\n  });\n\n  function dirtyKey(key: TCacheKey) {\n    const entry = cache.get(key);\n    if (entry) {\n      entry.setDirty();\n    }\n  }\n  optimistic.dirtyKey = dirtyKey;\n  optimistic.dirty = function dirty() {\n    dirtyKey(makeCacheKey.apply(null, arguments as any));\n  };\n\n  function peekKey(key: TCacheKey) {\n    const entry = cache.get(key);\n    if (entry) {\n      return entry.peek();\n    }\n  }\n  optimistic.peekKey = peekKey;\n  optimistic.peek = function peek() {\n    return peekKey(makeCacheKey.apply(null, arguments as any));\n  };\n\n  function forgetKey(key: TCacheKey) {\n    return cache.delete(key);\n  }\n  optimistic.forgetKey = forgetKey;\n  optimistic.forget = function forget() {\n    return forgetKey(makeCacheKey.apply(null, arguments as any));\n  };\n\n  optimistic.makeCacheKey = makeCacheKey;\n  optimistic.getKey = keyArgs ? function getKey() {\n    return makeCacheKey.apply(null, keyArgs.apply(null, arguments as any));\n  } : makeCacheKey as (...args: any[]) => TCacheKey;\n\n  return Object.freeze(optimistic);\n}\n","import { DocumentNode } from 'graphql';\nimport { wrap } from 'optimism';\n\nimport {\n  StoreObject,\n  Reference,\n  getFragmentQueryDocument,\n} from '../../utilities';\nimport { DataProxy } from './types/DataProxy';\nimport { Cache } from './types/Cache';\n\nexport type Transaction<T> = (c: ApolloCache<T>) => void;\n\nexport abstract class ApolloCache<TSerialized> implements DataProxy {\n  // required to implement\n  // core API\n  public abstract read<TData = any, TVariables = any>(\n    query: Cache.ReadOptions<TVariables, TData>,\n  ): TData | null;\n  public abstract write<TData = any, TVariables = any>(\n    write: Cache.WriteOptions<TData, TVariables>,\n  ): Reference | undefined;\n  public abstract diff<T>(query: Cache.DiffOptions): Cache.DiffResult<T>;\n  public abstract watch<TData = any, TVariables = any>(\n    watch: Cache.WatchOptions<TData, TVariables>,\n  ): () => void;\n\n  // Empty the cache and restart all current watches (unless\n  // options.discardWatches is true).\n  public abstract reset(options?: Cache.ResetOptions): Promise<void>;\n\n  // Remove whole objects from the cache by passing just options.id, or\n  // specific fields by passing options.field and/or options.args. If no\n  // options.args are provided, all fields matching options.field (even\n  // those with arguments) will be removed. Returns true iff any data was\n  // removed from the cache.\n  public abstract evict(options: Cache.EvictOptions): boolean;\n\n  // initializer / offline / ssr API\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public abstract restore(\n    serializedState: TSerialized,\n  ): ApolloCache<TSerialized>;\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public abstract extract(optimistic?: boolean): TSerialized;\n\n  // Optimistic API\n\n  public abstract removeOptimistic(id: string): void;\n\n  // Transactional API\n\n  // The batch method is intended to replace/subsume both performTransaction\n  // and recordOptimisticTransaction, but performTransaction came first, so we\n  // provide a default batch implementation that's just another way of calling\n  // performTransaction. Subclasses of ApolloCache (such as InMemoryCache) can\n  // override the batch method to do more interesting things with its options.\n  public batch<U>(options: Cache.BatchOptions<this, U>): U {\n    const optimisticId =\n      typeof options.optimistic === \"string\" ? options.optimistic :\n      options.optimistic === false ? null : void 0;\n    let updateResult: U;\n    this.performTransaction(\n      () => updateResult = options.update(this),\n      optimisticId,\n    );\n    return updateResult!;\n  }\n\n  public abstract performTransaction(\n    transaction: Transaction<TSerialized>,\n    // Although subclasses may implement recordOptimisticTransaction\n    // however they choose, the default implementation simply calls\n    // performTransaction with a string as the second argument, allowing\n    // performTransaction to handle both optimistic and non-optimistic\n    // (broadcast-batching) transactions. Passing null for optimisticId is\n    // also allowed, and indicates that performTransaction should apply\n    // the transaction non-optimistically (ignoring optimistic data).\n    optimisticId?: string | null,\n  ): void;\n\n  public recordOptimisticTransaction(\n    transaction: Transaction<TSerialized>,\n    optimisticId: string,\n  ) {\n    this.performTransaction(transaction, optimisticId);\n  }\n\n  // Optional API\n\n  public transformDocument(document: DocumentNode): DocumentNode {\n    return document;\n  }\n\n  public identify(object: StoreObject | Reference): string | undefined {\n    return;\n  }\n\n  public gc(): string[] {\n    return [];\n  }\n\n  public modify(options: Cache.ModifyOptions): boolean {\n    return false;\n  }\n\n  // Experimental API\n\n  public transformForLink(document: DocumentNode): DocumentNode {\n    return document;\n  }\n\n  // DataProxy API\n  /**\n   *\n   * @param options\n   * @param optimistic\n   */\n  public readQuery<QueryType, TVariables = any>(\n    options: Cache.ReadQueryOptions<QueryType, TVariables>,\n    optimistic = !!options.optimistic,\n  ): QueryType | null {\n    return this.read({\n      ...options,\n      rootId: options.id || 'ROOT_QUERY',\n      optimistic,\n    });\n  }\n\n  // Make sure we compute the same (===) fragment query document every\n  // time we receive the same fragment in readFragment.\n  private getFragmentDoc = wrap(getFragmentQueryDocument);\n\n  public readFragment<FragmentType, TVariables = any>(\n    options: Cache.ReadFragmentOptions<FragmentType, TVariables>,\n    optimistic = !!options.optimistic,\n  ): FragmentType | null {\n    return this.read({\n      ...options,\n      query: this.getFragmentDoc(options.fragment, options.fragmentName),\n      rootId: options.id,\n      optimistic,\n    });\n  }\n\n  public writeQuery<TData = any, TVariables = any>({\n    id,\n    data,\n    ...options\n  }: Cache.WriteQueryOptions<TData, TVariables>): Reference | undefined {\n    return this.write(Object.assign(options, {\n      dataId: id || 'ROOT_QUERY',\n      result: data,\n    }));\n  }\n\n  public writeFragment<TData = any, TVariables = any>({\n    id,\n    data,\n    fragment,\n    fragmentName,\n    ...options\n  }: Cache.WriteFragmentOptions<TData, TVariables>): Reference | undefined {\n    return this.write(Object.assign(options, {\n      query: this.getFragmentDoc(fragment, fragmentName),\n      dataId: id,\n      result: data,\n    }));\n  }\n\n  public updateQuery<TData = any, TVariables = any>(\n    options: Cache.UpdateQueryOptions<TData, TVariables>,\n    update: (data: TData | null) => TData | null | void,\n  ): TData | null {\n    return this.batch({\n      update(cache) {\n        const value = cache.readQuery<TData, TVariables>(options);\n        const data = update(value);\n        if (data === void 0 || data === null) return value;\n        cache.writeQuery<TData, TVariables>({ ...options, data });\n        return data;\n      },\n    });\n  }\n\n  public updateFragment<TData = any, TVariables = any>(\n    options: Cache.UpdateFragmentOptions<TData, TVariables>,\n    update: (data: TData | null) => TData | null | void,\n  ): TData | null {\n    return this.batch({\n      update(cache) {\n        const value = cache.readFragment<TData, TVariables>(options);\n        const data = update(value);\n        if (data === void 0 || data === null) return value;\n        cache.writeFragment<TData, TVariables>({ ...options, data });\n        return data;\n      },\n    });\n  }\n}\n","import { DocumentNode, FieldNode } from 'graphql';\n\nimport {\n  Reference,\n  StoreObject,\n  StoreValue,\n  isReference,\n} from '../../../utilities';\n\nimport { StorageType } from '../../inmemory/policies';\n\n// The Readonly<T> type only really works for object types, since it marks\n// all of the object's properties as readonly, but there are many cases when\n// a generic type parameter like TExisting might be a string or some other\n// primitive type, in which case we need to avoid wrapping it with Readonly.\n// SafeReadonly<string> collapses to just string, which makes string\n// assignable to SafeReadonly<any>, whereas string is not assignable to\n// Readonly<any>, somewhat surprisingly.\nexport type SafeReadonly<T> = T extends object ? Readonly<T> : T;\n\nexport type MissingTree = string | {\n  readonly [key: string]: MissingTree;\n};\n\nexport class MissingFieldError {\n  constructor(\n    public readonly message: string,\n    public readonly path: MissingTree | Array<string | number>,\n    public readonly query: DocumentNode,\n    public readonly variables?: Record<string, any>,\n  ) {}\n}\n\nexport interface FieldSpecifier {\n  typename?: string;\n  fieldName: string;\n  field?: FieldNode;\n  args?: Record<string, any>;\n  variables?: Record<string, any>;\n}\n\nexport interface ReadFieldOptions extends FieldSpecifier {\n  from?: StoreObject | Reference;\n}\n\nexport interface ReadFieldFunction {\n  <V = StoreValue>(options: ReadFieldOptions): SafeReadonly<V> | undefined;\n  <V = StoreValue>(\n    fieldName: string,\n    from?: StoreObject | Reference,\n  ): SafeReadonly<V> | undefined;\n}\n\nexport type ToReferenceFunction = (\n  objOrIdOrRef: StoreObject | string | Reference,\n  mergeIntoStore?: boolean,\n) => Reference | undefined;\n\nexport type CanReadFunction = (value: StoreValue) => boolean;\n\nexport type Modifier<T> = (value: T, details: {\n  DELETE: any;\n  INVALIDATE: any;\n  fieldName: string;\n  storeFieldName: string;\n  readField: ReadFieldFunction;\n  canRead: CanReadFunction;\n  isReference: typeof isReference;\n  toReference: ToReferenceFunction;\n  storage: StorageType;\n}) => T;\n\nexport type Modifiers = {\n  [fieldName: string]: Modifier<any>;\n};\n","import { SelectionSetNode } from 'graphql';\n\nimport {\n  NormalizedCache,\n  InMemoryCacheConfig,\n} from './types';\n\nimport { KeyFieldsContext } from './policies';\n\nimport {\n  Reference,\n  isReference,\n  StoreValue,\n  StoreObject,\n  isField,\n  DeepMerger,\n  resultKeyNameFromField,\n  shouldInclude,\n  isNonNullObject,\n  compact,\n} from '../../utilities';\n\nexport const {\n  hasOwnProperty: hasOwn,\n} = Object.prototype;\n\nexport function defaultDataIdFromObject(\n  { __typename, id, _id }: Readonly<StoreObject>,\n  context?: KeyFieldsContext,\n): string | undefined {\n  if (typeof __typename === \"string\") {\n    if (context) {\n      context.keyObject =\n         id !== void 0 ? {  id } :\n        _id !== void 0 ? { _id } :\n        void 0;\n    }\n    // If there is no object.id, fall back to object._id.\n    if (id === void 0) id = _id;\n    if (id !== void 0) {\n      return `${__typename}:${(\n        typeof id === \"number\" ||\n        typeof id === \"string\"\n      ) ? id : JSON.stringify(id)}`;\n    }\n  }\n}\n\nconst defaultConfig = {\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  resultCaching: true,\n  // Thanks to the shouldCanonizeResults helper, this should be the only line\n  // you have to change to reenable canonization by default in the future.\n  canonizeResults: false,\n};\n\nexport function normalizeConfig(config: InMemoryCacheConfig) {\n  return compact(defaultConfig, config);\n}\n\nexport function shouldCanonizeResults(\n  config: Pick<InMemoryCacheConfig, \"canonizeResults\">,\n): boolean {\n  const value = config.canonizeResults;\n  return value === void 0 ? defaultConfig.canonizeResults : value;\n}\n\nexport function getTypenameFromStoreObject(\n  store: NormalizedCache,\n  objectOrReference: StoreObject | Reference,\n): string | undefined {\n  return isReference(objectOrReference)\n    ? store.get(objectOrReference.__ref, \"__typename\") as string\n    : objectOrReference && objectOrReference.__typename;\n}\n\nexport const TypeOrFieldNameRegExp = /^[_a-z][_0-9a-z]*/i;\n\nexport function fieldNameFromStoreName(storeFieldName: string): string {\n  const match = storeFieldName.match(TypeOrFieldNameRegExp);\n  return match ? match[0] : storeFieldName;\n}\n\nexport function selectionSetMatchesResult(\n  selectionSet: SelectionSetNode,\n  result: Record<string, any>,\n  variables?: Record<string, any>,\n): boolean {\n  if (isNonNullObject(result)) {\n    return isArray(result)\n      ? result.every(item => selectionSetMatchesResult(selectionSet, item, variables))\n      : selectionSet.selections.every(field => {\n        if (isField(field) && shouldInclude(field, variables)) {\n          const key = resultKeyNameFromField(field);\n          return hasOwn.call(result, key) &&\n            (!field.selectionSet ||\n             selectionSetMatchesResult(field.selectionSet, result[key], variables));\n        }\n        // If the selection has been skipped with @skip(true) or\n        // @include(false), it should not count against the matching. If\n        // the selection is not a field, it must be a fragment (inline or\n        // named). We will determine if selectionSetMatchesResult for that\n        // fragment when we get to it, so for now we return true.\n        return true;\n      });\n  }\n  return false;\n}\n\nexport function storeValueIsStoreObject(\n  value: StoreValue,\n): value is StoreObject {\n  return isNonNullObject(value) &&\n    !isReference(value) &&\n    !isArray(value);\n}\n\nexport function makeProcessedFieldsMerger() {\n  return new DeepMerger;\n}\n\nexport const isArray = (a: any): a is any[] | readonly any[] => Array.isArray(a)\n","import { invariant } from '../../utilities/globals';\nimport { dep, OptimisticDependencyFunction } from 'optimism';\nimport { equal } from '@wry/equality';\nimport { Trie } from '@wry/trie';\n\nimport {\n  isReference,\n  StoreValue,\n  StoreObject,\n  Reference,\n  makeReference,\n  DeepMerger,\n  maybeDeepFreeze,\n  canUseWeakMap,\n  isNonNullObject,\n} from '../../utilities';\nimport { NormalizedCache, NormalizedCacheObject } from './types';\nimport { hasOwn, fieldNameFromStoreName } from './helpers';\nimport { Policies, StorageType } from './policies';\nimport { Cache } from '../core/types/Cache';\nimport {\n  SafeReadonly,\n  Modifier,\n  Modifiers,\n  ReadFieldOptions,\n  ToReferenceFunction,\n  CanReadFunction,\n} from '../core/types/common';\n\nconst DELETE: any = Object.create(null);\nconst delModifier: Modifier<any> = () => DELETE;\nconst INVALIDATE: any = Object.create(null);\n\nexport abstract class EntityStore implements NormalizedCache {\n  protected data: NormalizedCacheObject = Object.create(null);\n\n  constructor(\n    public readonly policies: Policies,\n    public readonly group: CacheGroup,\n  ) {}\n\n  public abstract addLayer(\n    layerId: string,\n    replay: (layer: EntityStore) => any,\n  ): Layer;\n\n  public abstract removeLayer(layerId: string): EntityStore;\n\n  // Although the EntityStore class is abstract, it contains concrete\n  // implementations of the various NormalizedCache interface methods that\n  // are inherited by the Root and Layer subclasses.\n\n  public toObject(): NormalizedCacheObject {\n    return { ...this.data };\n  }\n\n  public has(dataId: string): boolean {\n    return this.lookup(dataId, true) !== void 0;\n  }\n\n  public get(dataId: string, fieldName: string): StoreValue {\n    this.group.depend(dataId, fieldName);\n    if (hasOwn.call(this.data, dataId)) {\n      const storeObject = this.data[dataId];\n      if (storeObject && hasOwn.call(storeObject, fieldName)) {\n        return storeObject[fieldName];\n      }\n    }\n    if (fieldName === \"__typename\" &&\n        hasOwn.call(this.policies.rootTypenamesById, dataId)) {\n      return this.policies.rootTypenamesById[dataId];\n    }\n    if (this instanceof Layer) {\n      return this.parent.get(dataId, fieldName);\n    }\n  }\n\n  protected lookup(dataId: string, dependOnExistence?: boolean): StoreObject | undefined {\n    // The has method (above) calls lookup with dependOnExistence = true, so\n    // that it can later be invalidated when we add or remove a StoreObject for\n    // this dataId. Any consumer who cares about the contents of the StoreObject\n    // should not rely on this dependency, since the contents could change\n    // without the object being added or removed.\n    if (dependOnExistence) this.group.depend(dataId, \"__exists\");\n\n    if (hasOwn.call(this.data, dataId)) {\n      return this.data[dataId];\n    }\n\n    if (this instanceof Layer) {\n      return this.parent.lookup(dataId, dependOnExistence);\n    }\n\n    if (this.policies.rootTypenamesById[dataId]) {\n      return Object.create(null);\n    }\n  }\n\n  public merge(\n    older: string | StoreObject,\n    newer: StoreObject | string,\n  ): void {\n    let dataId: string | undefined;\n\n    // Convert unexpected references to ID strings.\n    if (isReference(older)) older = older.__ref;\n    if (isReference(newer)) newer = newer.__ref;\n\n    const existing: StoreObject | undefined =\n      typeof older === \"string\"\n        ? this.lookup(dataId = older)\n        : older;\n\n    const incoming: StoreObject | undefined =\n      typeof newer === \"string\"\n        ? this.lookup(dataId = newer)\n        : newer;\n\n    // If newer was a string ID, but that ID was not defined in this store,\n    // then there are no fields to be merged, so we're done.\n    if (!incoming) return;\n\n    invariant(\n      typeof dataId === \"string\",\n      \"store.merge expects a string ID\",\n    );\n\n    const merged: StoreObject =\n      new DeepMerger(storeObjectReconciler).merge(existing, incoming);\n\n    // Even if merged === existing, existing may have come from a lower\n    // layer, so we always need to set this.data[dataId] on this level.\n    this.data[dataId] = merged;\n\n    if (merged !== existing) {\n      delete this.refs[dataId];\n      if (this.group.caching) {\n        const fieldsToDirty: Record<string, 1> = Object.create(null);\n\n        // If we added a new StoreObject where there was previously none, dirty\n        // anything that depended on the existence of this dataId, such as the\n        // EntityStore#has method.\n        if (!existing) fieldsToDirty.__exists = 1;\n\n        // Now invalidate dependents who called getFieldValue for any fields\n        // that are changing as a result of this merge.\n        Object.keys(incoming).forEach(storeFieldName => {\n          if (!existing || existing[storeFieldName] !== merged[storeFieldName]) {\n            // Always dirty the full storeFieldName, which may include\n            // serialized arguments following the fieldName prefix.\n            fieldsToDirty[storeFieldName] = 1;\n\n            // Also dirty fieldNameFromStoreName(storeFieldName) if it's\n            // different from storeFieldName and this field does not have\n            // keyArgs configured, because that means the cache can't make\n            // any assumptions about how field values with the same field\n            // name but different arguments might be interrelated, so it\n            // must err on the side of invalidating all field values that\n            // share the same short fieldName, regardless of arguments.\n            const fieldName = fieldNameFromStoreName(storeFieldName);\n            if (fieldName !== storeFieldName &&\n                !this.policies.hasKeyArgs(merged.__typename, fieldName)) {\n              fieldsToDirty[fieldName] = 1;\n            }\n\n            // If merged[storeFieldName] has become undefined, and this is the\n            // Root layer, actually delete the property from the merged object,\n            // which is guaranteed to have been created fresh in this method.\n            if (merged[storeFieldName] === void 0 && !(this instanceof Layer)) {\n              delete merged[storeFieldName];\n            }\n          }\n        });\n\n        if (fieldsToDirty.__typename &&\n            !(existing && existing.__typename) &&\n            // Since we return default root __typename strings\n            // automatically from store.get, we don't need to dirty the\n            // ROOT_QUERY.__typename field if merged.__typename is equal\n            // to the default string (usually \"Query\").\n            this.policies.rootTypenamesById[dataId] === merged.__typename) {\n          delete fieldsToDirty.__typename;\n        }\n\n        Object.keys(fieldsToDirty).forEach(\n          fieldName => this.group.dirty(dataId as string, fieldName));\n      }\n    }\n  }\n\n  public modify(\n    dataId: string,\n    fields: Modifier<any> | Modifiers,\n  ): boolean {\n    const storeObject = this.lookup(dataId);\n\n    if (storeObject) {\n      const changedFields: Record<string, any> = Object.create(null);\n      let needToMerge = false;\n      let allDeleted = true;\n\n      const sharedDetails = {\n        DELETE,\n        INVALIDATE,\n        isReference,\n        toReference: this.toReference,\n        canRead: this.canRead,\n        readField: <V = StoreValue>(\n          fieldNameOrOptions: string | ReadFieldOptions,\n          from?: StoreObject | Reference,\n        ) => this.policies.readField<V>(\n          typeof fieldNameOrOptions === \"string\" ? {\n            fieldName: fieldNameOrOptions,\n            from: from || makeReference(dataId),\n          } : fieldNameOrOptions,\n          { store: this },\n        ),\n      };\n\n      Object.keys(storeObject).forEach(storeFieldName => {\n        const fieldName = fieldNameFromStoreName(storeFieldName);\n        let fieldValue = storeObject[storeFieldName];\n        if (fieldValue === void 0) return;\n        const modify: Modifier<StoreValue> = typeof fields === \"function\"\n          ? fields\n          : fields[storeFieldName] || fields[fieldName];\n        if (modify) {\n          let newValue = modify === delModifier ? DELETE :\n            modify(maybeDeepFreeze(fieldValue), {\n              ...sharedDetails,\n              fieldName,\n              storeFieldName,\n              storage: this.getStorage(dataId, storeFieldName),\n            });\n          if (newValue === INVALIDATE) {\n            this.group.dirty(dataId, storeFieldName);\n          } else {\n            if (newValue === DELETE) newValue = void 0;\n            if (newValue !== fieldValue) {\n              changedFields[storeFieldName] = newValue;\n              needToMerge = true;\n              fieldValue = newValue;\n            }\n          }\n        }\n        if (fieldValue !== void 0) {\n          allDeleted = false;\n        }\n      });\n\n      if (needToMerge) {\n        this.merge(dataId, changedFields);\n\n        if (allDeleted) {\n          if (this instanceof Layer) {\n            this.data[dataId] = void 0;\n          } else {\n            delete this.data[dataId];\n          }\n          this.group.dirty(dataId, \"__exists\");\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  // If called with only one argument, removes the entire entity\n  // identified by dataId. If called with a fieldName as well, removes all\n  // fields of that entity whose names match fieldName according to the\n  // fieldNameFromStoreName helper function. If called with a fieldName\n  // and variables, removes all fields of that entity whose names match fieldName\n  // and whose arguments when cached exactly match the variables passed.\n  public delete(\n    dataId: string,\n    fieldName?: string,\n    args?: Record<string, any>,\n  ) {\n    const storeObject = this.lookup(dataId);\n    if (storeObject) {\n      const typename = this.getFieldValue<string>(storeObject, \"__typename\");\n      const storeFieldName = fieldName && args\n        ? this.policies.getStoreFieldName({ typename, fieldName, args })\n        : fieldName;\n      return this.modify(dataId, storeFieldName ? {\n        [storeFieldName]: delModifier,\n      } : delModifier);\n    }\n    return false;\n  }\n\n  public evict(\n    options: Cache.EvictOptions,\n    limit: EntityStore,\n  ): boolean {\n    let evicted = false;\n    if (options.id) {\n      if (hasOwn.call(this.data, options.id)) {\n        evicted = this.delete(options.id, options.fieldName, options.args);\n      }\n      if (this instanceof Layer && this !== limit) {\n        evicted = this.parent.evict(options, limit) || evicted;\n      }\n      // Always invalidate the field to trigger rereading of watched\n      // queries, even if no cache data was modified by the eviction,\n      // because queries may depend on computed fields with custom read\n      // functions, whose values are not stored in the EntityStore.\n      if (options.fieldName || evicted) {\n        this.group.dirty(options.id, options.fieldName || \"__exists\");\n      }\n    }\n    return evicted;\n  }\n\n  public clear(): void {\n    this.replace(null);\n  }\n\n  public extract(): NormalizedCacheObject {\n    const obj = this.toObject();\n    const extraRootIds: string[] = [];\n    this.getRootIdSet().forEach(id => {\n      if (!hasOwn.call(this.policies.rootTypenamesById, id)) {\n        extraRootIds.push(id);\n      }\n    });\n    if (extraRootIds.length) {\n      obj.__META = { extraRootIds: extraRootIds.sort() };\n    }\n    return obj;\n  }\n\n  public replace(newData: NormalizedCacheObject | null): void {\n    Object.keys(this.data).forEach(dataId => {\n      if (!(newData && hasOwn.call(newData, dataId))) {\n        this.delete(dataId);\n      }\n    });\n    if (newData) {\n      const { __META, ...rest } = newData;\n      Object.keys(rest).forEach(dataId => {\n        this.merge(dataId, rest[dataId] as StoreObject);\n      });\n      if (__META) {\n        __META.extraRootIds.forEach(this.retain, this);\n      }\n    }\n  }\n\n  public abstract getStorage(\n    idOrObj: string | StoreObject,\n    ...storeFieldNames: (string | number)[]\n  ): StorageType;\n\n  // Maps root entity IDs to the number of times they have been retained, minus\n  // the number of times they have been released. Retained entities keep other\n  // entities they reference (even indirectly) from being garbage collected.\n  private rootIds: {\n    [rootId: string]: number;\n  } = Object.create(null);\n\n  public retain(rootId: string): number {\n    return this.rootIds[rootId] = (this.rootIds[rootId] || 0) + 1;\n  }\n\n  public release(rootId: string): number {\n    if (this.rootIds[rootId] > 0) {\n      const count = --this.rootIds[rootId];\n      if (!count) delete this.rootIds[rootId];\n      return count;\n    }\n    return 0;\n  }\n\n  // Return a Set<string> of all the ID strings that have been retained by\n  // this layer/root *and* any layers/roots beneath it.\n  public getRootIdSet(ids = new Set<string>()) {\n    Object.keys(this.rootIds).forEach(ids.add, ids);\n    if (this instanceof Layer) {\n      this.parent.getRootIdSet(ids);\n    } else {\n      // Official singleton IDs like ROOT_QUERY and ROOT_MUTATION are\n      // always considered roots for garbage collection, regardless of\n      // their retainment counts in this.rootIds.\n      Object.keys(this.policies.rootTypenamesById).forEach(ids.add, ids);\n    }\n    return ids;\n  }\n\n  // The goal of garbage collection is to remove IDs from the Root layer of the\n  // store that are no longer reachable starting from any IDs that have been\n  // explicitly retained (see retain and release, above). Returns an array of\n  // dataId strings that were removed from the store.\n  public gc() {\n    const ids = this.getRootIdSet();\n    const snapshot = this.toObject();\n    ids.forEach(id => {\n      if (hasOwn.call(snapshot, id)) {\n        // Because we are iterating over an ECMAScript Set, the IDs we add here\n        // will be visited in later iterations of the forEach loop only if they\n        // were not previously contained by the Set.\n        Object.keys(this.findChildRefIds(id)).forEach(ids.add, ids);\n        // By removing IDs from the snapshot object here, we protect them from\n        // getting removed from the root store layer below.\n        delete snapshot[id];\n      }\n    });\n    const idsToRemove = Object.keys(snapshot);\n    if (idsToRemove.length) {\n      let root: EntityStore = this;\n      while (root instanceof Layer) root = root.parent;\n      idsToRemove.forEach(id => root.delete(id));\n    }\n    return idsToRemove;\n  }\n\n  // Lazily tracks { __ref: <dataId> } strings contained by this.data[dataId].\n  private refs: {\n    [dataId: string]: Record<string, true>;\n  } = Object.create(null);\n\n  public findChildRefIds(dataId: string): Record<string, true> {\n    if (!hasOwn.call(this.refs, dataId)) {\n      const found = this.refs[dataId] = Object.create(null);\n      const root = this.data[dataId];\n      if (!root) return found;\n\n      const workSet = new Set<Record<string | number, any>>([root]);\n      // Within the store, only arrays and objects can contain child entity\n      // references, so we can prune the traversal using this predicate:\n      workSet.forEach(obj => {\n        if (isReference(obj)) {\n          found[obj.__ref] = true;\n          // In rare cases, a { __ref } Reference object may have other fields.\n          // This often indicates a mismerging of References with StoreObjects,\n          // but garbage collection should not be fooled by a stray __ref\n          // property in a StoreObject (ignoring all the other fields just\n          // because the StoreObject looks like a Reference). To avoid this\n          // premature termination of findChildRefIds recursion, we fall through\n          // to the code below, which will handle any other properties of obj.\n        }\n        if (isNonNullObject(obj)) {\n          Object.keys(obj).forEach(key => {\n            const child = obj[key];\n            // No need to add primitive values to the workSet, since they cannot\n            // contain reference objects.\n            if (isNonNullObject(child)) {\n              workSet.add(child);\n            }\n          });\n        }\n      });\n    }\n    return this.refs[dataId];\n  }\n\n  // Used to compute cache keys specific to this.group.\n  public makeCacheKey(...args: any[]): object;\n  public makeCacheKey() {\n    return this.group.keyMaker.lookupArray(arguments);\n  }\n\n  // Bound function that can be passed around to provide easy access to fields\n  // of Reference objects as well as ordinary objects.\n  public getFieldValue = <T = StoreValue>(\n    objectOrReference: StoreObject | Reference | undefined,\n    storeFieldName: string,\n  ) => maybeDeepFreeze(\n    isReference(objectOrReference)\n      ? this.get(objectOrReference.__ref, storeFieldName)\n      : objectOrReference && objectOrReference[storeFieldName]\n  ) as SafeReadonly<T>;\n\n  // Returns true for non-normalized StoreObjects and non-dangling\n  // References, indicating that readField(name, objOrRef) has a chance of\n  // working. Useful for filtering out dangling references from lists.\n  public canRead: CanReadFunction = objOrRef => {\n    return isReference(objOrRef)\n      ? this.has(objOrRef.__ref)\n      : typeof objOrRef === \"object\";\n  };\n\n  // Bound function that converts an id or an object with a __typename and\n  // primary key fields to a Reference object. If called with a Reference object,\n  // that same Reference object is returned. Pass true for mergeIntoStore to persist\n  // an object into the store.\n  public toReference: ToReferenceFunction = (\n    objOrIdOrRef,\n    mergeIntoStore,\n  ) => {\n    if (typeof objOrIdOrRef === \"string\") {\n      return makeReference(objOrIdOrRef);\n    }\n\n    if (isReference(objOrIdOrRef)) {\n      return objOrIdOrRef;\n    }\n\n    const [id] = this.policies.identify(objOrIdOrRef);\n\n    if (id) {\n      const ref = makeReference(id);\n      if (mergeIntoStore) {\n        this.merge(id, objOrIdOrRef);\n      }\n      return ref;\n    }\n  };\n}\n\nexport type FieldValueGetter = EntityStore[\"getFieldValue\"];\n\n// A single CacheGroup represents a set of one or more EntityStore objects,\n// typically the Root store in a CacheGroup by itself, and all active Layer\n// stores in a group together. A single EntityStore object belongs to only\n// one CacheGroup, store.group. The CacheGroup is responsible for tracking\n// dependencies, so store.group is helpful for generating unique keys for\n// cached results that need to be invalidated when/if those dependencies\n// change. If we used the EntityStore objects themselves as cache keys (that\n// is, store rather than store.group), the cache would become unnecessarily\n// fragmented by all the different Layer objects. Instead, the CacheGroup\n// approach allows all optimistic Layer objects in the same linked list to\n// belong to one CacheGroup, with the non-optimistic Root object belonging\n// to another CacheGroup, allowing resultCaching dependencies to be tracked\n// separately for optimistic and non-optimistic entity data.\nclass CacheGroup {\n  private d: OptimisticDependencyFunction<string> | null = null;\n\n  // Used by the EntityStore#makeCacheKey method to compute cache keys\n  // specific to this CacheGroup.\n  public keyMaker: Trie<object>;\n\n  constructor(\n    public readonly caching: boolean,\n    private parent: CacheGroup | null = null,\n  ) {\n    this.resetCaching();\n  }\n\n  public resetCaching() {\n    this.d = this.caching ? dep<string>() : null;\n    this.keyMaker = new Trie(canUseWeakMap);\n  }\n\n  public depend(dataId: string, storeFieldName: string) {\n    if (this.d) {\n      this.d(makeDepKey(dataId, storeFieldName));\n      const fieldName = fieldNameFromStoreName(storeFieldName);\n      if (fieldName !== storeFieldName) {\n        // Fields with arguments that contribute extra identifying\n        // information to the fieldName (thus forming the storeFieldName)\n        // depend not only on the full storeFieldName but also on the\n        // short fieldName, so the field can be invalidated using either\n        // level of specificity.\n        this.d(makeDepKey(dataId, fieldName));\n      }\n      if (this.parent) {\n        this.parent.depend(dataId, storeFieldName);\n      }\n    }\n  }\n\n  public dirty(dataId: string, storeFieldName: string) {\n    if (this.d) {\n      this.d.dirty(\n        makeDepKey(dataId, storeFieldName),\n        // When storeFieldName === \"__exists\", that means the entity identified\n        // by dataId has either disappeared from the cache or was newly added,\n        // so the result caching system would do well to \"forget everything it\n        // knows\" about that object. To achieve that kind of invalidation, we\n        // not only dirty the associated result cache entry, but also remove it\n        // completely from the dependency graph. For the optimism implementation\n        // details, see https://github.com/benjamn/optimism/pull/195.\n        storeFieldName === \"__exists\" ? \"forget\" : \"setDirty\",\n      );\n    }\n  }\n}\n\nfunction makeDepKey(dataId: string, storeFieldName: string) {\n  // Since field names cannot have '#' characters in them, this method\n  // of joining the field name and the ID should be unambiguous, and much\n  // cheaper than JSON.stringify([dataId, fieldName]).\n  return storeFieldName + '#' + dataId;\n}\n\nexport function maybeDependOnExistenceOfEntity(\n  store: NormalizedCache,\n  entityId: string,\n) {\n  if (supportsResultCaching(store)) {\n    // We use this pseudo-field __exists elsewhere in the EntityStore code to\n    // represent changes in the existence of the entity object identified by\n    // entityId. This dependency gets reliably dirtied whenever an object with\n    // this ID is deleted (or newly created) within this group, so any result\n    // cache entries (for example, StoreReader#executeSelectionSet results) that\n    // depend on __exists for this entityId will get dirtied as well, leading to\n    // the eventual recomputation (instead of reuse) of those result objects the\n    // next time someone reads them from the cache.\n    store.group.depend(entityId, \"__exists\");\n  }\n}\n\nexport namespace EntityStore {\n  // Refer to this class as EntityStore.Root outside this namespace.\n  export class Root extends EntityStore {\n    constructor({\n      policies,\n      resultCaching = true,\n      seed,\n    }: {\n      policies: Policies;\n      resultCaching?: boolean;\n      seed?: NormalizedCacheObject;\n    }) {\n      super(policies, new CacheGroup(resultCaching));\n      if (seed) this.replace(seed);\n    }\n\n    public readonly stump = new Stump(this);\n\n    public addLayer(\n      layerId: string,\n      replay: (layer: EntityStore) => any,\n    ): Layer {\n      // Adding an optimistic Layer on top of the Root actually adds the Layer\n      // on top of the Stump, so the Stump always comes between the Root and\n      // any Layer objects that we've added.\n      return this.stump.addLayer(layerId, replay);\n    }\n\n    public removeLayer(): Root {\n      // Never remove the root layer.\n      return this;\n    }\n\n    public readonly storageTrie = new Trie<StorageType>(canUseWeakMap);\n    public getStorage(): StorageType {\n      return this.storageTrie.lookupArray(arguments);\n    }\n  }\n}\n\n// Not exported, since all Layer instances are created by the addLayer method\n// of the EntityStore.Root class.\nclass Layer extends EntityStore {\n  constructor(\n    public readonly id: string,\n    public readonly parent: EntityStore,\n    public readonly replay: (layer: EntityStore) => any,\n    public readonly group: CacheGroup,\n  ) {\n    super(parent.policies, group);\n    replay(this);\n  }\n\n  public addLayer(\n    layerId: string,\n    replay: (layer: EntityStore) => any,\n  ): Layer {\n    return new Layer(layerId, this, replay, this.group);\n  }\n\n  public removeLayer(layerId: string): EntityStore {\n    // Remove all instances of the given id, not just the first one.\n    const parent = this.parent.removeLayer(layerId);\n\n    if (layerId === this.id) {\n      if (this.group.caching) {\n        // Dirty every ID we're removing. Technically we might be able to avoid\n        // dirtying fields that have values in higher layers, but we don't have\n        // easy access to higher layers here, and we're about to recreate those\n        // layers anyway (see parent.addLayer below).\n        Object.keys(this.data).forEach(dataId => {\n          const ownStoreObject = this.data[dataId];\n          const parentStoreObject = parent[\"lookup\"](dataId);\n          if (!parentStoreObject) {\n            // The StoreObject identified by dataId was defined in this layer\n            // but will be undefined in the parent layer, so we can delete the\n            // whole entity using this.delete(dataId). Since we're about to\n            // throw this layer away, the only goal of this deletion is to dirty\n            // the removed fields.\n            this.delete(dataId);\n          } else if (!ownStoreObject) {\n            // This layer had an entry for dataId but it was undefined, which\n            // means the entity was deleted in this layer, and it's about to\n            // become undeleted when we remove this layer, so we need to dirty\n            // all fields that are about to be reexposed.\n            this.group.dirty(dataId, \"__exists\");\n            Object.keys(parentStoreObject).forEach(storeFieldName => {\n              this.group.dirty(dataId, storeFieldName);\n            });\n          } else if (ownStoreObject !== parentStoreObject) {\n            // If ownStoreObject is not exactly the same as parentStoreObject,\n            // dirty any fields whose values will change as a result of this\n            // removal.\n            Object.keys(ownStoreObject).forEach(storeFieldName => {\n              if (!equal(ownStoreObject[storeFieldName],\n                         parentStoreObject[storeFieldName])) {\n                this.group.dirty(dataId, storeFieldName);\n              }\n            });\n          }\n        });\n      }\n\n      return parent;\n    }\n\n    // No changes are necessary if the parent chain remains identical.\n    if (parent === this.parent) return this;\n\n    // Recreate this layer on top of the new parent.\n    return parent.addLayer(this.id, this.replay);\n  }\n\n  public toObject(): NormalizedCacheObject {\n    return {\n      ...this.parent.toObject(),\n      ...this.data,\n    };\n  }\n\n  public findChildRefIds(dataId: string): Record<string, true> {\n    const fromParent = this.parent.findChildRefIds(dataId);\n    return hasOwn.call(this.data, dataId) ? {\n      ...fromParent,\n      ...super.findChildRefIds(dataId),\n    } : fromParent;\n  }\n\n  public getStorage(): StorageType {\n    let p: EntityStore = this.parent;\n    while ((p as Layer).parent) p = (p as Layer).parent;\n    return p.getStorage.apply(p, arguments);\n  }\n}\n\n// Represents a Layer permanently installed just above the Root, which allows\n// reading optimistically (and registering optimistic dependencies) even when\n// no optimistic layers are currently active. The stump.group CacheGroup object\n// is shared by any/all Layer objects added on top of the Stump.\nclass Stump extends Layer {\n  constructor(root: EntityStore.Root) {\n    super(\n      \"EntityStore.Stump\",\n      root,\n      () => {},\n      new CacheGroup(root.group.caching, root.group),\n    );\n  }\n\n  public removeLayer() {\n    // Never remove the Stump layer.\n    return this;\n  }\n\n  public merge() {\n    // We never want to write any data into the Stump, so we forward any merge\n    // calls to the Root instead. Another option here would be to throw an\n    // exception, but the toReference(object, true) function can sometimes\n    // trigger Stump writes (which used to be Root writes, before the Stump\n    // concept was introduced).\n    return this.parent.merge.apply(this.parent, arguments);\n  }\n}\n\nfunction storeObjectReconciler(\n  existingObject: StoreObject,\n  incomingObject: StoreObject,\n  property: string,\n): StoreValue {\n  const existingValue = existingObject[property];\n  const incomingValue = incomingObject[property];\n  // Wherever there is a key collision, prefer the incoming value, unless\n  // it is deeply equal to the existing value. It's worth checking deep\n  // equality here (even though blindly returning incoming would be\n  // logically correct) because preserving the referential identity of\n  // existing data can prevent needless rereading and rerendering.\n  return equal(existingValue, incomingValue) ? existingValue : incomingValue;\n}\n\nexport function supportsResultCaching(store: any): store is EntityStore {\n  // When result caching is disabled, store.depend will be null.\n  return !!(store instanceof EntityStore && store.group.caching);\n}\n","import \"../../utilities/globals\";\n\nimport { Trie } from \"@wry/trie\";\nimport {\n  canUseWeakMap,\n  canUseWeakSet,\n  isNonNullObject as isObjectOrArray,\n} from \"../../utilities\";\nimport { isArray } from \"./helpers\";\n\nfunction shallowCopy<T>(value: T): T {\n  if (isObjectOrArray(value)) {\n    return isArray(value)\n      ? value.slice(0) as any as T\n      : { __proto__: Object.getPrototypeOf(value), ...value };\n  }\n  return value;\n}\n\n// When programmers talk about the \"canonical form\" of an object, they\n// usually have the following meaning in mind, which I've copied from\n// https://en.wiktionary.org/wiki/canonical_form:\n//\n// 1. A standard or normal presentation of a mathematical entity [or\n//    object]. A canonical form is an element of a set of representatives\n//    of equivalence classes of forms such that there is a function or\n//    procedure which projects every element of each equivalence class\n//    onto that one element, the canonical form of that equivalence\n//    class. The canonical form is expected to be simpler than the rest of\n//    the forms in some way.\n//\n// That's a long-winded way of saying any two objects that have the same\n// canonical form may be considered equivalent, even if they are !==,\n// which usually means the objects are structurally equivalent (deeply\n// equal), but don't necessarily use the same memory.\n//\n// Like a literary or musical canon, this ObjectCanon class represents a\n// collection of unique canonical items (JavaScript objects), with the\n// important property that canon.admit(a) === canon.admit(b) if a and b\n// are deeply equal to each other. In terms of the definition above, the\n// canon.admit method is the \"function or procedure which projects every\"\n// object \"onto that one element, the canonical form.\"\n//\n// In the worst case, the canonicalization process may involve looking at\n// every property in the provided object tree, so it takes the same order\n// of time as deep equality checking. Fortunately, already-canonicalized\n// objects are returned immediately from canon.admit, so the presence of\n// canonical subtrees tends to speed up canonicalization.\n//\n// Since consumers of canonical objects can check for deep equality in\n// constant time, canonicalizing cache results can massively improve the\n// performance of application code that skips re-rendering unchanged\n// results, such as \"pure\" UI components in a framework like React.\n//\n// Of course, since canonical objects may be shared widely between\n// unrelated consumers, it's important to think of them as immutable, even\n// though they are not actually frozen with Object.freeze in production,\n// due to the extra performance overhead that comes with frozen objects.\n//\n// Custom scalar objects whose internal class name is neither Array nor\n// Object can be included safely in the admitted tree, but they will not\n// be replaced with a canonical version (to put it another way, they are\n// assumed to be canonical already).\n//\n// If we ignore custom objects, no detection of cycles or repeated object\n// references is currently required by the StoreReader class, since\n// GraphQL result objects are JSON-serializable trees (and thus contain\n// neither cycles nor repeated subtrees), so we can avoid the complexity\n// of keeping track of objects we've already seen during the recursion of\n// the admit method.\n//\n// In the future, we may consider adding additional cases to the switch\n// statement to handle other common object types, such as \"[object Date]\"\n// objects, as needed.\nexport class ObjectCanon {\n  // Set of all canonical objects this ObjectCanon has admitted, allowing\n  // canon.admit to return previously-canonicalized objects immediately.\n  private known = new (canUseWeakSet ? WeakSet : Set)<object>();\n\n  // Efficient storage/lookup structure for canonical objects.\n  private pool = new Trie<{\n    array?: any[];\n    object?: Record<string, any>;\n    keys?: SortedKeysInfo;\n  }>(canUseWeakMap);\n\n  public isKnown(value: any): boolean {\n    return isObjectOrArray(value) && this.known.has(value);\n  }\n\n  // Make the ObjectCanon assume this value has already been\n  // canonicalized.\n  private passes = new WeakMap<object, object>();\n  public pass<T>(value: T): T;\n  public pass(value: any) {\n    if (isObjectOrArray(value)) {\n      const copy = shallowCopy(value);\n      this.passes.set(copy, value);\n      return copy;\n    }\n    return value;\n  }\n\n  // Returns the canonical version of value.\n  public admit<T>(value: T): T;\n  public admit(value: any) {\n    if (isObjectOrArray(value)) {\n      const original = this.passes.get(value);\n      if (original) return original;\n\n      const proto = Object.getPrototypeOf(value);\n      switch (proto) {\n        case Array.prototype: {\n          if (this.known.has(value)) return value;\n          const array: any[] = (value as any[]).map(this.admit, this);\n          // Arrays are looked up in the Trie using their recursively\n          // canonicalized elements, and the known version of the array is\n          // preserved as node.array.\n          const node = this.pool.lookupArray(array);\n          if (!node.array) {\n            this.known.add(node.array = array);\n            // Since canonical arrays may be shared widely between\n            // unrelated consumers, it's important to regard them as\n            // immutable, even if they are not frozen in production.\n            if (__DEV__) {\n              Object.freeze(array);\n            }\n          }\n          return node.array;\n        }\n\n        case null:\n        case Object.prototype: {\n          if (this.known.has(value)) return value;\n          const proto = Object.getPrototypeOf(value);\n          const array = [proto];\n          const keys = this.sortedKeys(value);\n          array.push(keys.json);\n          const firstValueIndex = array.length;\n          keys.sorted.forEach(key => {\n            array.push(this.admit((value as any)[key]));\n          });\n          // Objects are looked up in the Trie by their prototype (which\n          // is *not* recursively canonicalized), followed by a JSON\n          // representation of their (sorted) keys, followed by the\n          // sequence of recursively canonicalized values corresponding to\n          // those keys. To keep the final results unambiguous with other\n          // sequences (such as arrays that just happen to contain [proto,\n          // keys.json, value1, value2, ...]), the known version of the\n          // object is stored as node.object.\n          const node = this.pool.lookupArray(array);\n          if (!node.object) {\n            const obj = node.object = Object.create(proto);\n            this.known.add(obj);\n            keys.sorted.forEach((key, i) => {\n              obj[key] = array[firstValueIndex + i];\n            });\n            // Since canonical objects may be shared widely between\n            // unrelated consumers, it's important to regard them as\n            // immutable, even if they are not frozen in production.\n            if (__DEV__) {\n              Object.freeze(obj);\n            }\n          }\n          return node.object;\n        }\n      }\n    }\n    return value;\n  }\n\n  // It's worthwhile to cache the sorting of arrays of strings, since the\n  // same initial unsorted arrays tend to be encountered many times.\n  // Fortunately, we can reuse the Trie machinery to look up the sorted\n  // arrays in linear time (which is faster than sorting large arrays).\n  private sortedKeys(obj: object) {\n    const keys = Object.keys(obj);\n    const node = this.pool.lookupArray(keys);\n    if (!node.keys) {\n      keys.sort();\n      const json = JSON.stringify(keys);\n      if (!(node.keys = this.keysByJSON.get(json))) {\n        this.keysByJSON.set(json, node.keys = { sorted: keys, json });\n      }\n    }\n    return node.keys;\n  }\n  // Arrays that contain the same elements in a different order can share\n  // the same SortedKeysInfo object, to save memory.\n  private keysByJSON = new Map<string, SortedKeysInfo>();\n\n  // This has to come last because it depends on keysByJSON.\n  public readonly empty = this.admit({});\n}\n\ntype SortedKeysInfo = {\n  sorted: string[];\n  json: string;\n};\n\n// Since the keys of canonical objects are always created in lexicographically\n// sorted order, we can use the ObjectCanon to implement a fast and stable\n// version of JSON.stringify, which automatically sorts object keys.\nexport const canonicalStringify = Object.assign(function (value: any): string {\n  if (isObjectOrArray(value)) {\n    if (stringifyCanon === void 0) {\n      resetCanonicalStringify();\n    }\n    const canonical = stringifyCanon.admit(value);\n    let json = stringifyCache.get(canonical);\n    if (json === void 0) {\n      stringifyCache.set(\n        canonical,\n        json = JSON.stringify(canonical),\n      );\n    }\n    return json;\n  }\n  return JSON.stringify(value);\n}, {\n  reset: resetCanonicalStringify,\n});\n\n// Can be reset by calling canonicalStringify.reset().\nlet stringifyCanon: ObjectCanon;\nlet stringifyCache: WeakMap<object, string>;\n\nfunction resetCanonicalStringify() {\n  stringifyCanon = new ObjectCanon;\n  stringifyCache = new (canUseWeakMap ? WeakMap : Map)();\n}\n","import { invariant } from '../../utilities/globals';\n\nimport {\n  DocumentNode,\n  FieldNode,\n  SelectionSetNode,\n} from 'graphql';\nimport { wrap, OptimisticWrapperFunction } from 'optimism';\n\nimport {\n  isField,\n  resultKeyNameFromField,\n  Reference,\n  isReference,\n  makeReference,\n  StoreObject,\n  createFragmentMap,\n  FragmentMap,\n  shouldInclude,\n  addTypenameToDocument,\n  getDefaultValues,\n  getFragmentDefinitions,\n  getMainDefinition,\n  getQueryDefinition,\n  DeepMerger,\n  getFragmentFromSelection,\n  maybeDeepFreeze,\n  isNonNullObject,\n  canUseWeakMap,\n  compact,\n} from '../../utilities';\nimport { Cache } from '../core/types/Cache';\nimport {\n  DiffQueryAgainstStoreOptions,\n  NormalizedCache,\n  ReadMergeModifyContext,\n} from './types';\nimport { maybeDependOnExistenceOfEntity, supportsResultCaching } from './entityStore';\nimport { getTypenameFromStoreObject, isArray, shouldCanonizeResults } from './helpers';\nimport { Policies } from './policies';\nimport { InMemoryCache } from './inMemoryCache';\nimport { MissingFieldError, MissingTree } from '../core/types/common';\nimport { canonicalStringify, ObjectCanon } from './object-canon';\n\nexport type VariableMap = { [name: string]: any };\n\ninterface ReadContext extends ReadMergeModifyContext {\n  query: DocumentNode;\n  policies: Policies;\n  canonizeResults: boolean;\n  fragmentMap: FragmentMap;\n  // General-purpose deep-merge function for use during reads.\n  merge<T>(existing: T, incoming: T): T;\n};\n\nexport type ExecResult<R = any> = {\n  result: R;\n  missing?: MissingTree;\n};\n\ntype ExecSelectionSetOptions = {\n  selectionSet: SelectionSetNode;\n  objectOrReference: StoreObject | Reference;\n  enclosingRef: Reference;\n  context: ReadContext;\n};\n\ntype ExecSubSelectedArrayOptions = {\n  field: FieldNode;\n  array: readonly any[];\n  enclosingRef: Reference;\n  context: ReadContext;\n};\n\nexport interface StoreReaderConfig {\n  cache: InMemoryCache,\n  addTypename?: boolean;\n  resultCacheMaxSize?: number;\n  canonizeResults?: boolean;\n  canon?: ObjectCanon;\n}\n\n// Arguments type after keyArgs translation.\ntype ExecSelectionSetKeyArgs = [\n  SelectionSetNode,\n  StoreObject | Reference,\n  ReadMergeModifyContext,\n  boolean,\n];\n\nfunction execSelectionSetKeyArgs(\n  options: ExecSelectionSetOptions,\n): ExecSelectionSetKeyArgs {\n  return [\n    options.selectionSet,\n    options.objectOrReference,\n    options.context,\n    // We split out this property so we can pass different values\n    // independently without modifying options.context itself.\n    options.context.canonizeResults,\n  ];\n}\n\nexport class StoreReader {\n  // cached version of executeSelectionSet\n  private executeSelectionSet: OptimisticWrapperFunction<\n    [ExecSelectionSetOptions], // Actual arguments tuple type.\n    ExecResult, // Actual return type.\n    ExecSelectionSetKeyArgs\n  >;\n\n  // cached version of executeSubSelectedArray\n  private executeSubSelectedArray: OptimisticWrapperFunction<\n    [ExecSubSelectedArrayOptions],\n    ExecResult<any>,\n    [ExecSubSelectedArrayOptions]>;\n\n  private config: {\n    cache: InMemoryCache,\n    addTypename: boolean;\n    resultCacheMaxSize?: number;\n    canonizeResults: boolean;\n  };\n\n  private knownResults = new (\n    canUseWeakMap ? WeakMap : Map\n  )<Record<string, any>, SelectionSetNode>();\n\n  public canon: ObjectCanon;\n  public resetCanon() {\n    this.canon = new ObjectCanon;\n  }\n\n  constructor(config: StoreReaderConfig) {\n    this.config = compact(config, {\n      addTypename: config.addTypename !== false,\n      canonizeResults: shouldCanonizeResults(config),\n    });\n\n    this.canon = config.canon || new ObjectCanon;\n\n    this.executeSelectionSet = wrap(options => {\n      const { canonizeResults } = options.context;\n\n      const peekArgs = execSelectionSetKeyArgs(options);\n\n      // Negate this boolean option so we can find out if we've already read\n      // this result using the other boolean value.\n      peekArgs[3] = !canonizeResults;\n\n      const other = this.executeSelectionSet.peek(...peekArgs);\n\n      if (other) {\n        if (canonizeResults) {\n          return {\n            ...other,\n            // If we previously read this result without canonizing it, we can\n            // reuse that result simply by canonizing it now.\n            result: this.canon.admit(other.result),\n          };\n        }\n        // If we previously read this result with canonization enabled, we can\n        // return that canonized result as-is.\n        return other;\n      }\n\n      maybeDependOnExistenceOfEntity(\n        options.context.store,\n        options.enclosingRef.__ref,\n      );\n\n      // Finally, if we didn't find any useful previous results, run the real\n      // execSelectionSetImpl method with the given options.\n      return this.execSelectionSetImpl(options);\n\n    }, {\n      max: this.config.resultCacheMaxSize,\n      keyArgs: execSelectionSetKeyArgs,\n      // Note that the parameters of makeCacheKey are determined by the\n      // array returned by keyArgs.\n      makeCacheKey(selectionSet, parent, context, canonizeResults) {\n        if (supportsResultCaching(context.store)) {\n          return context.store.makeCacheKey(\n            selectionSet,\n            isReference(parent) ? parent.__ref : parent,\n            context.varString,\n            canonizeResults,\n          );\n        }\n      }\n    });\n\n    this.executeSubSelectedArray = wrap((options: ExecSubSelectedArrayOptions) => {\n      maybeDependOnExistenceOfEntity(\n        options.context.store,\n        options.enclosingRef.__ref,\n      );\n      return this.execSubSelectedArrayImpl(options);\n    }, {\n      max: this.config.resultCacheMaxSize,\n      makeCacheKey({ field, array, context }) {\n        if (supportsResultCaching(context.store)) {\n          return context.store.makeCacheKey(\n            field,\n            array,\n            context.varString,\n          );\n        }\n      }\n    });\n  }\n\n  /**\n   * Given a store and a query, return as much of the result as possible and\n   * identify if any data was missing from the store.\n   * @param  {DocumentNode} query A parsed GraphQL query document\n   * @param  {Store} store The Apollo Client store object\n   * @return {result: Object, complete: [boolean]}\n   */\n  public diffQueryAgainstStore<T>({\n    store,\n    query,\n    rootId = 'ROOT_QUERY',\n    variables,\n    returnPartialData = true,\n    canonizeResults = this.config.canonizeResults,\n  }: DiffQueryAgainstStoreOptions): Cache.DiffResult<T> {\n    const policies = this.config.cache.policies;\n\n    variables = {\n      ...getDefaultValues(getQueryDefinition(query)),\n      ...variables!,\n    };\n\n    const rootRef = makeReference(rootId);\n    const merger = new DeepMerger;\n    const execResult = this.executeSelectionSet({\n      selectionSet: getMainDefinition(query).selectionSet,\n      objectOrReference: rootRef,\n      enclosingRef: rootRef,\n      context: {\n        store,\n        query,\n        policies,\n        variables,\n        varString: canonicalStringify(variables),\n        canonizeResults,\n        fragmentMap: createFragmentMap(getFragmentDefinitions(query)),\n        merge(a, b) {\n          // We use the same DeepMerger instance throughout the read, so any\n          // merged objects created during this read can be updated later in the\n          // read using in-place/destructive property assignments. Once the read\n          // is finished, these objects will be frozen, but in the meantime it's\n          // good for performance and memory usage if we avoid allocating a new\n          // object for every merged property.\n          return merger.merge(a, b);\n        },\n      },\n    });\n\n    let missing: MissingFieldError[] | undefined;\n    if (execResult.missing) {\n      // For backwards compatibility we still report an array of\n      // MissingFieldError objects, even though there will only ever be at most\n      // one of them, now that all missing field error messages are grouped\n      // together in the execResult.missing tree.\n      missing = [new MissingFieldError(\n        firstMissing(execResult.missing)!,\n        execResult.missing,\n        query,\n        variables,\n      )];\n      if (!returnPartialData) {\n        throw missing[0];\n      }\n    }\n\n    return {\n      result: execResult.result,\n      complete: !missing,\n      missing,\n    };\n  }\n\n  public isFresh(\n    result: Record<string, any>,\n    parent: StoreObject | Reference,\n    selectionSet: SelectionSetNode,\n    context: ReadMergeModifyContext,\n  ): boolean {\n    if (supportsResultCaching(context.store) &&\n        this.knownResults.get(result) === selectionSet) {\n      const latest = this.executeSelectionSet.peek(\n        selectionSet,\n        parent,\n        context,\n        // If result is canonical, then it could only have been previously\n        // cached by the canonizing version of executeSelectionSet, so we can\n        // avoid checking both possibilities here.\n        this.canon.isKnown(result),\n      );\n      if (latest && result === latest.result) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Uncached version of executeSelectionSet.\n  private execSelectionSetImpl({\n    selectionSet,\n    objectOrReference,\n    enclosingRef,\n    context,\n  }: ExecSelectionSetOptions): ExecResult {\n    if (isReference(objectOrReference) &&\n        !context.policies.rootTypenamesById[objectOrReference.__ref] &&\n        !context.store.has(objectOrReference.__ref)) {\n      return {\n        result: this.canon.empty,\n        missing: `Dangling reference to missing ${objectOrReference.__ref} object`,\n      };\n    }\n\n    const { variables, policies, store } = context;\n    const typename = store.getFieldValue<string>(objectOrReference, \"__typename\");\n\n    let result: any = {};\n    let missing: MissingTree | undefined;\n\n    if (this.config.addTypename &&\n        typeof typename === \"string\" &&\n        !policies.rootIdsByTypename[typename]) {\n      // Ensure we always include a default value for the __typename\n      // field, if we have one, and this.config.addTypename is true. Note\n      // that this field can be overridden by other merged objects.\n      result = { __typename: typename };\n    }\n\n    function handleMissing<T>(result: ExecResult<T>, resultName: string): T {\n      if (result.missing) {\n        missing = context.merge(missing, { [resultName]: result.missing });\n      }\n      return result.result;\n    }\n\n    const workSet = new Set(selectionSet.selections);\n\n    workSet.forEach(selection => {\n      // Omit fields with directives @skip(if: <truthy value>) or\n      // @include(if: <falsy value>).\n      if (!shouldInclude(selection, variables)) return;\n\n      if (isField(selection)) {\n        let fieldValue = policies.readField({\n          fieldName: selection.name.value,\n          field: selection,\n          variables: context.variables,\n          from: objectOrReference,\n        }, context);\n\n        const resultName = resultKeyNameFromField(selection);\n\n        if (fieldValue === void 0) {\n          if (!addTypenameToDocument.added(selection)) {\n            missing = context.merge(missing, {\n              [resultName]: `Can't find field '${\n                selection.name.value\n              }' on ${\n                isReference(objectOrReference)\n                  ? objectOrReference.__ref + \" object\"\n                  : \"object \" + JSON.stringify(objectOrReference, null, 2)\n              }`\n            });\n          }\n\n        } else if (isArray(fieldValue)) {\n          fieldValue = handleMissing(this.executeSubSelectedArray({\n            field: selection,\n            array: fieldValue,\n            enclosingRef,\n            context,\n          }), resultName);\n\n        } else if (!selection.selectionSet) {\n          // If the field does not have a selection set, then we handle it\n          // as a scalar value. To keep this.canon from canonicalizing\n          // this value, we use this.canon.pass to wrap fieldValue in a\n          // Pass object that this.canon.admit will later unwrap as-is.\n          if (context.canonizeResults) {\n            fieldValue = this.canon.pass(fieldValue);\n          }\n\n        } else if (fieldValue != null) {\n          // In this case, because we know the field has a selection set,\n          // it must be trying to query a GraphQLObjectType, which is why\n          // fieldValue must be != null.\n          fieldValue = handleMissing(this.executeSelectionSet({\n            selectionSet: selection.selectionSet,\n            objectOrReference: fieldValue as StoreObject | Reference,\n            enclosingRef: isReference(fieldValue) ? fieldValue : enclosingRef,\n            context,\n          }), resultName);\n        }\n\n        if (fieldValue !== void 0) {\n          result = context.merge(result, { [resultName]: fieldValue });\n        }\n\n      } else {\n        const fragment = getFragmentFromSelection(\n          selection,\n          context.fragmentMap,\n        );\n\n        if (fragment && policies.fragmentMatches(fragment, typename)) {\n          fragment.selectionSet.selections.forEach(workSet.add, workSet);\n        }\n      }\n    });\n\n    const finalResult: ExecResult = { result, missing };\n    const frozen = context.canonizeResults\n      ? this.canon.admit(finalResult)\n      // Since this.canon is normally responsible for freezing results (only in\n      // development), freeze them manually if canonization is disabled.\n      : maybeDeepFreeze(finalResult);\n\n    // Store this result with its selection set so that we can quickly\n    // recognize it again in the StoreReader#isFresh method.\n    if (frozen.result) {\n      this.knownResults.set(frozen.result, selectionSet);\n    }\n\n    return frozen;\n  }\n\n  // Uncached version of executeSubSelectedArray.\n  private execSubSelectedArrayImpl({\n    field,\n    array,\n    enclosingRef,\n    context,\n  }: ExecSubSelectedArrayOptions): ExecResult {\n    let missing: MissingTree | undefined;\n\n    function handleMissing<T>(childResult: ExecResult<T>, i: number): T {\n      if (childResult.missing) {\n        missing = context.merge(missing, { [i]: childResult.missing });\n      }\n      return childResult.result;\n    }\n\n    if (field.selectionSet) {\n      array = array.filter(context.store.canRead);\n    }\n\n    array = array.map((item, i) => {\n      // null value in array\n      if (item === null) {\n        return null;\n      }\n\n      // This is a nested array, recurse\n      if (isArray(item)) {\n        return handleMissing(this.executeSubSelectedArray({\n          field,\n          array: item,\n          enclosingRef,\n          context,\n        }), i);\n      }\n\n      // This is an object, run the selection set on it\n      if (field.selectionSet) {\n        return handleMissing(this.executeSelectionSet({\n          selectionSet: field.selectionSet,\n          objectOrReference: item,\n          enclosingRef: isReference(item) ? item : enclosingRef,\n          context,\n        }), i);\n      }\n\n      if (__DEV__) {\n        assertSelectionSetForIdValue(context.store, field, item);\n      }\n\n      return item;\n    });\n\n    return {\n      result: context.canonizeResults ? this.canon.admit(array) : array,\n      missing,\n    };\n  }\n}\n\nfunction firstMissing(tree: MissingTree): string | undefined {\n  try {\n    JSON.stringify(tree, (_, value) => {\n      if (typeof value === \"string\") throw value;\n      return value;\n    });\n  } catch (result) {\n    return result;\n  }\n}\n\nfunction assertSelectionSetForIdValue(\n  store: NormalizedCache,\n  field: FieldNode,\n  fieldValue: any,\n) {\n  if (!field.selectionSet) {\n    const workSet = new Set([fieldValue]);\n    workSet.forEach(value => {\n      if (isNonNullObject(value)) {\n        invariant(\n          !isReference(value),\n          `Missing selection set for object of type ${\n            getTypenameFromStoreObject(store, value)\n          } returned for query field ${field.name.value}`,\n        );\n        Object.values(value).forEach(workSet.add, workSet);\n      }\n    });\n  }\n}\n","import { dep, OptimisticDependencyFunction } from \"optimism\";\nimport { Slot } from \"@wry/context\";\nimport { InMemoryCache } from \"./inMemoryCache\";\nimport { ApolloCache } from '../../core';\n\nexport interface ReactiveVar<T> {\n  (newValue?: T): T;\n  onNextChange(listener: ReactiveListener<T>): () => void;\n  attachCache(cache: ApolloCache<any>): this;\n  forgetCache(cache: ApolloCache<any>): boolean;\n}\n\nexport type ReactiveListener<T> = (value: T) => any;\n\n// Contextual Slot that acquires its value when custom read functions are\n// called in Policies#readField.\nexport const cacheSlot = new Slot<ApolloCache<any>>();\n\nconst cacheInfoMap = new WeakMap<ApolloCache<any>, {\n  vars: Set<ReactiveVar<any>>;\n  dep: OptimisticDependencyFunction<ReactiveVar<any>>;\n}>();\n\nfunction getCacheInfo(cache: ApolloCache<any>) {\n  let info = cacheInfoMap.get(cache)!;\n  if (!info) {\n    cacheInfoMap.set(cache, info = {\n      vars: new Set,\n      dep: dep(),\n    });\n  }\n  return info;\n}\n\nexport function forgetCache(cache: ApolloCache<any>) {\n  getCacheInfo(cache).vars.forEach(rv => rv.forgetCache(cache));\n}\n\n// Calling forgetCache(cache) serves to silence broadcasts and allows the\n// cache to be garbage collected. However, the varsByCache WeakMap\n// preserves the set of reactive variables that were previously associated\n// with this cache, which makes it possible to \"recall\" the cache at a\n// later time, by reattaching it to those variables. If the cache has been\n// garbage collected in the meantime, because it is no longer reachable,\n// you won't be able to call recallCache(cache), and the cache will\n// automatically disappear from the varsByCache WeakMap.\nexport function recallCache(cache: ApolloCache<any>) {\n  getCacheInfo(cache).vars.forEach(rv => rv.attachCache(cache));\n}\n\nexport function makeVar<T>(value: T): ReactiveVar<T> {\n  const caches = new Set<ApolloCache<any>>();\n  const listeners = new Set<ReactiveListener<T>>();\n\n  const rv: ReactiveVar<T> = function (newValue) {\n    if (arguments.length > 0) {\n      if (value !== newValue) {\n        value = newValue!;\n        caches.forEach(cache => {\n          // Invalidate any fields with custom read functions that\n          // consumed this variable, so query results involving those\n          // fields will be recomputed the next time we read them.\n          getCacheInfo(cache).dep.dirty(rv);\n          // Broadcast changes to any caches that have previously read\n          // from this variable.\n          broadcast(cache);\n        });\n        // Finally, notify any listeners added via rv.onNextChange.\n        const oldListeners = Array.from(listeners);\n        listeners.clear();\n        oldListeners.forEach(listener => listener(value));\n      }\n    } else {\n      // When reading from the variable, obtain the current cache from\n      // context via cacheSlot. This isn't entirely foolproof, but it's\n      // the same system that powers varDep.\n      const cache = cacheSlot.getValue();\n      if (cache) {\n        attach(cache);\n        getCacheInfo(cache).dep(rv);\n      }\n    }\n\n    return value;\n  };\n\n  rv.onNextChange = listener => {\n    listeners.add(listener);\n    return () => {\n      listeners.delete(listener);\n    };\n  };\n\n  const attach = rv.attachCache = cache => {\n    caches.add(cache);\n    getCacheInfo(cache).vars.add(rv);\n    return rv;\n  };\n\n  rv.forgetCache = cache => caches.delete(cache);\n\n  return rv;\n}\n\ntype Broadcastable = ApolloCache<any> & {\n  // This method is protected in InMemoryCache, which we are ignoring, but\n  // we still want some semblance of type safety when we call it.\n  broadcastWatches?: InMemoryCache[\"broadcastWatches\"];\n};\n\nfunction broadcast(cache: Broadcastable) {\n  if (cache.broadcastWatches) {\n    cache.broadcastWatches();\n  }\n}\n","import { invariant } from \"../../utilities/globals\";\n\nimport {\n  argumentsObjectFromField,\n  DeepMerger,\n  isNonEmptyArray,\n  isNonNullObject,\n} from \"../../utilities\";\n\nimport { hasOwn, isArray } from \"./helpers\";\nimport {\n  KeySpecifier,\n  KeyFieldsFunction,\n  KeyArgsFunction,\n} from \"./policies\";\n\n// Mapping from JSON-encoded KeySpecifier strings to associated information.\nconst specifierInfoCache: Record<string, {\n  paths?: string[][];\n  keyFieldsFn?: KeyFieldsFunction;\n  keyArgsFn?: KeyArgsFunction;\n}> = Object.create(null);\n\nfunction lookupSpecifierInfo(spec: KeySpecifier) {\n  // It's safe to encode KeySpecifier arrays with JSON.stringify, since they're\n  // just arrays of strings or nested KeySpecifier arrays, and the order of the\n  // array elements is important (and suitably preserved by JSON.stringify).\n  const cacheKey = JSON.stringify(spec);\n  return specifierInfoCache[cacheKey] ||\n    (specifierInfoCache[cacheKey] = Object.create(null));\n}\n\nexport function keyFieldsFnFromSpecifier(\n  specifier: KeySpecifier,\n): KeyFieldsFunction {\n  const info = lookupSpecifierInfo(specifier);\n\n  return info.keyFieldsFn || (info.keyFieldsFn = (\n    object,\n    context,\n  ) => {\n    const extract: typeof extractKey =\n      (from, key) => context.readField(key, from);\n\n    const keyObject = context.keyObject = collectSpecifierPaths(\n      specifier,\n      schemaKeyPath => {\n        let extracted = extractKeyPath(\n          context.storeObject,\n          schemaKeyPath,\n          // Using context.readField to extract paths from context.storeObject\n          // allows the extraction to see through Reference objects and respect\n          // custom read functions.\n          extract,\n        );\n\n        if (\n          extracted === void 0 &&\n          object !== context.storeObject &&\n          hasOwn.call(object, schemaKeyPath[0])\n        ) {\n          // If context.storeObject fails to provide a value for the requested\n          // path, fall back to the raw result object, if it has a top-level key\n          // matching the first key in the path (schemaKeyPath[0]). This allows\n          // key fields included in the written data to be saved in the cache\n          // even if they are not selected explicitly in context.selectionSet.\n          // Not being mentioned by context.selectionSet is convenient here,\n          // since it means these extra fields cannot be affected by field\n          // aliasing, which is why we can use extractKey instead of\n          // context.readField for this extraction.\n          extracted = extractKeyPath(object, schemaKeyPath, extractKey);\n        }\n\n        invariant(\n          extracted !== void 0,\n          `Missing field '${schemaKeyPath.join('.')}' while extracting keyFields from ${\n            JSON.stringify(object)\n          }`,\n        );\n\n        return extracted;\n      },\n    );\n\n    return `${context.typename}:${JSON.stringify(keyObject)}`;\n  });\n}\n\n// The keyArgs extraction process is roughly analogous to keyFields extraction,\n// but there are no aliases involved, missing fields are tolerated (by merely\n// omitting them from the key), and drawing from field.directives or variables\n// is allowed (in addition to drawing from the field's arguments object).\n// Concretely, these differences mean passing a different key path extractor\n// function to collectSpecifierPaths, reusing the shared extractKeyPath helper\n// wherever possible.\nexport function keyArgsFnFromSpecifier(specifier: KeySpecifier): KeyArgsFunction {\n  const info = lookupSpecifierInfo(specifier);\n\n  return info.keyArgsFn || (info.keyArgsFn = (args, {\n    field,\n    variables,\n    fieldName,\n  }) => {\n    const collected = collectSpecifierPaths(specifier, keyPath => {\n      const firstKey = keyPath[0];\n      const firstChar = firstKey.charAt(0);\n\n      if (firstChar === \"@\") {\n        if (field && isNonEmptyArray(field.directives)) {\n          const directiveName = firstKey.slice(1);\n          // If the directive appears multiple times, only the first\n          // occurrence's arguments will be used. TODO Allow repetition?\n          // TODO Cache this work somehow, a la aliasMap?\n          const d = field.directives.find(d => d.name.value === directiveName);\n          // Fortunately argumentsObjectFromField works for DirectiveNode!\n          const directiveArgs = d && argumentsObjectFromField(d, variables);\n          // For directives without arguments (d defined, but directiveArgs ===\n          // null), the presence or absence of the directive still counts as\n          // part of the field key, so we return null in those cases. If no\n          // directive with this name was found for this field (d undefined and\n          // thus directiveArgs undefined), we return undefined, which causes\n          // this value to be omitted from the key object returned by\n          // collectSpecifierPaths.\n          return directiveArgs && extractKeyPath(\n            directiveArgs,\n            // If keyPath.length === 1, this code calls extractKeyPath with an\n            // empty path, which works because it uses directiveArgs as the\n            // extracted value.\n            keyPath.slice(1),\n          );\n        }\n        // If the key started with @ but there was no corresponding directive,\n        // we want to omit this value from the key object, not fall through to\n        // treating @whatever as a normal argument name.\n        return;\n      }\n\n      if (firstChar === \"$\") {\n        const variableName = firstKey.slice(1);\n        if (variables && hasOwn.call(variables, variableName)) {\n          const varKeyPath = keyPath.slice(0);\n          varKeyPath[0] = variableName;\n          return extractKeyPath(variables, varKeyPath);\n        }\n        // If the key started with $ but there was no corresponding variable, we\n        // want to omit this value from the key object, not fall through to\n        // treating $whatever as a normal argument name.\n        return;\n      }\n\n      if (args) {\n        return extractKeyPath(args, keyPath);\n      }\n    });\n\n    const suffix = JSON.stringify(collected);\n\n    // If no arguments were passed to this field, and it didn't have any other\n    // field key contributions from directives or variables, hide the empty\n    // :{} suffix from the field key. However, a field passed no arguments can\n    // still end up with a non-empty :{...} suffix if its key configuration\n    // refers to directives or variables.\n    if (args || suffix !== \"{}\") {\n      fieldName += \":\" + suffix;\n    }\n\n    return fieldName;\n  });\n}\n\nexport function collectSpecifierPaths(\n  specifier: KeySpecifier,\n  extractor: (path: string[]) => any,\n): Record<string, any> {\n  // For each path specified by specifier, invoke the extractor, and repeatedly\n  // merge the results together, with appropriate ancestor context.\n  const merger = new DeepMerger;\n  return getSpecifierPaths(specifier).reduce((collected, path) => {\n    let toMerge = extractor(path);\n    if (toMerge !== void 0) {\n      // This path is not expected to contain array indexes, so the toMerge\n      // reconstruction will not contain arrays. TODO Fix this?\n      for (let i = path.length - 1; i >= 0; --i) {\n        toMerge = { [path[i]]: toMerge };\n      }\n      collected = merger.merge(collected, toMerge);\n    }\n    return collected;\n  }, Object.create(null));\n}\n\nexport function getSpecifierPaths(spec: KeySpecifier): string[][] {\n  const info = lookupSpecifierInfo(spec);\n\n  if (!info.paths) {\n    const paths: string[][] = info.paths = [];\n    const currentPath: string[] = [];\n\n    spec.forEach((s, i) => {\n      if (isArray(s)) {\n        getSpecifierPaths(s).forEach(p => paths.push(currentPath.concat(p)));\n        currentPath.length = 0;\n      } else {\n        currentPath.push(s);\n        if (!isArray(spec[i + 1])) {\n          paths.push(currentPath.slice(0));\n          currentPath.length = 0;\n        }\n      }\n    });\n  }\n\n  return info.paths!;\n}\n\nfunction extractKey<\n  TObj extends Record<string, any>,\n  TKey extends string,\n>(object: TObj, key: TKey): TObj[TKey] | undefined {\n  return object[key];\n}\n\nexport function extractKeyPath(\n  object: Record<string, any>,\n  path: string[],\n  extract?: typeof extractKey,\n): any {\n  // For each key in path, extract the corresponding child property from obj,\n  // flattening arrays if encountered (uncommon for keyFields and keyArgs, but\n  // possible). The final result of path.reduce is normalized so unexpected leaf\n  // objects have their keys safely sorted. That final result is difficult to\n  // type as anything other than any. You're welcome to try to improve the\n  // return type, but keep in mind extractKeyPath is not a public function\n  // (exported only for testing), so the effort may not be worthwhile unless the\n  // limited set of actual callers (see above) pass arguments that TypeScript\n  // can statically type. If we know only that path is some array of strings\n  // (and not, say, a specific tuple of statically known strings), any (or\n  // possibly unknown) is the honest answer.\n  extract = extract || extractKey;\n  return normalize(path.reduce(function reducer(obj, key): any {\n    return isArray(obj)\n      ? obj.map(child => reducer(child, key))\n      : obj && extract!(obj, key);\n  }, object));\n}\n\nfunction normalize<T>(value: T): T {\n  // Usually the extracted value will be a scalar value, since most primary\n  // key fields are scalar, but just in case we get an object or an array, we\n  // need to do some normalization of the order of (nested) keys.\n  if (isNonNullObject(value)) {\n    if (isArray(value)) {\n      return value.map(normalize) as any;\n    }\n    return collectSpecifierPaths(\n      Object.keys(value).sort(),\n      path => extractKeyPath(value, path),\n    ) as T;\n  }\n  return value;\n}\n","import { invariant, InvariantError } from '../../utilities/globals';\n\nimport {\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n  SelectionSetNode,\n  FieldNode,\n} from 'graphql';\n\nimport {\n  FragmentMap,\n  storeKeyNameFromField,\n  StoreValue,\n  StoreObject,\n  argumentsObjectFromField,\n  Reference,\n  isReference,\n  getStoreKeyName,\n  isNonNullObject,\n  stringifyForDisplay,\n} from '../../utilities';\nimport {\n  IdGetter,\n  MergeInfo,\n  NormalizedCache,\n  ReadMergeModifyContext,\n} from \"./types\";\nimport {\n  hasOwn,\n  fieldNameFromStoreName,\n  storeValueIsStoreObject,\n  selectionSetMatchesResult,\n  TypeOrFieldNameRegExp,\n  defaultDataIdFromObject,\n  isArray,\n} from './helpers';\nimport { cacheSlot } from './reactiveVars';\nimport { InMemoryCache } from './inMemoryCache';\nimport {\n  SafeReadonly,\n  FieldSpecifier,\n  ToReferenceFunction,\n  ReadFieldFunction,\n  ReadFieldOptions,\n  CanReadFunction,\n} from '../core/types/common';\nimport { WriteContext } from './writeToStore';\n\n// Upgrade to a faster version of the default stable JSON.stringify function\n// used by getStoreKeyName. This function is used when computing storeFieldName\n// strings (when no keyArgs has been configured for a field).\nimport { canonicalStringify } from './object-canon';\nimport { keyArgsFnFromSpecifier, keyFieldsFnFromSpecifier } from './key-extractor';\n\ngetStoreKeyName.setStringify(canonicalStringify);\n\nexport type TypePolicies = {\n  [__typename: string]: TypePolicy;\n}\n\n// TypeScript 3.7 will allow recursive type aliases, so this should work:\n// type KeySpecifier = (string | KeySpecifier)[]\nexport type KeySpecifier = ReadonlyArray<string | KeySpecifier>;\n\nexport type KeyFieldsContext = {\n  // The __typename of the incoming object, even if the __typename field was\n  // aliased to another name in the raw result object. May be undefined when\n  // dataIdFromObject is called for objects without __typename fields.\n  typename: string | undefined;\n\n  // The object to be identified, after processing to remove aliases and\n  // normalize identifiable child objects with references.\n  storeObject: StoreObject;\n\n  // Handy tool for reading additional fields from context.storeObject, either\n  // readField(\"fieldName\") to read storeObject[fieldName], or readField(\"name\",\n  // objectOrReference) to read from another object or Reference. If you read a\n  // field with a read function, that function will be invoked.\n  readField: ReadFieldFunction;\n\n  // If you are writing a custom keyFields function, and you plan to use the raw\n  // result object passed as the first argument, you may also need access to the\n  // selection set and available fragments for this object, just in case any\n  // fields have aliases. Since this logic is tricky to get right, and these\n  // context properties are not even always provided (for example, they are\n  // omitted when calling cache.identify(object), where object is assumed to be\n  // a StoreObject), we recommend you use context.storeObject (which has already\n  // been de-aliased) and context.readField (which can read from references as\n  // well as objects) instead of the raw result object in your keyFields\n  // functions, or just rely on the internal implementation of keyFields:[...]\n  // syntax to get these details right for you.\n  selectionSet?: SelectionSetNode;\n  fragmentMap?: FragmentMap;\n\n  // Internal. May be set by the KeyFieldsFunction to report fields that were\n  // involved in computing the ID. Never passed in by the caller.\n  keyObject?: Record<string, any>;\n};\n\nexport type KeyFieldsFunction = (\n  object: Readonly<StoreObject>,\n  context: KeyFieldsContext,\n) => KeySpecifier | false | ReturnType<IdGetter>;\n\ntype KeyFieldsResult = Exclude<ReturnType<KeyFieldsFunction>, KeySpecifier>;\n\n// TODO Should TypePolicy be a generic type, with a TObject or TEntity\n// type parameter?\nexport type TypePolicy = {\n  // Allows defining the primary key fields for this type, either using an\n  // array of field names or a function that returns an arbitrary string.\n  keyFields?: KeySpecifier | KeyFieldsFunction | false;\n\n  // Allows defining a merge function (or merge:true/false shorthand) to\n  // be used for merging objects of this type wherever they appear, unless\n  // the parent field also defines a merge function/boolean (that is,\n  // parent field merge functions take precedence over type policy merge\n  // functions). In many cases, defining merge:true for a given type\n  // policy can save you from specifying merge:true for all the field\n  // policies where that type might be encountered.\n  merge?: FieldMergeFunction | boolean;\n\n  // In the rare event that your schema happens to use a different\n  // __typename for the root Query, Mutation, and/or Schema types, you can\n  // express your deviant preferences by enabling one of these options.\n  queryType?: true,\n  mutationType?: true,\n  subscriptionType?: true,\n\n  fields?: {\n    [fieldName: string]:\n      | FieldPolicy<any>\n      | FieldReadFunction<any>;\n  }\n};\n\nexport type KeyArgsFunction = (\n  args: Record<string, any> | null,\n  context: {\n    typename: string;\n    fieldName: string;\n    field: FieldNode | null;\n    variables?: Record<string, any>;\n  },\n) => KeySpecifier | false | ReturnType<IdGetter>;\n\nexport type FieldPolicy<\n  // The internal representation used to store the field's data in the\n  // cache. Must be JSON-serializable if you plan to serialize the result\n  // of cache.extract() using JSON.\n  TExisting = any,\n  // The type of the incoming parameter passed to the merge function,\n  // typically matching the GraphQL response format, but with Reference\n  // objects substituted for any identifiable child objects. Often the\n  // same as TExisting, but not necessarily.\n  TIncoming = TExisting,\n  // The type that the read function actually returns, using TExisting\n  // data and options.args as input. Usually the same as TIncoming.\n  TReadResult = TIncoming,\n  // Allows FieldFunctionOptions definition to be overwritten by the\n  // developer\n  TOptions extends FieldFunctionOptions = FieldFunctionOptions\n> = {\n  keyArgs?: KeySpecifier | KeyArgsFunction | false;\n  read?: FieldReadFunction<TExisting, TReadResult, TOptions>;\n  merge?: FieldMergeFunction<TExisting, TIncoming, TOptions> | boolean;\n};\n\nexport type StorageType = Record<string, any>;\n\nfunction argsFromFieldSpecifier(spec: FieldSpecifier) {\n  return spec.args !== void 0 ? spec.args :\n    spec.field ? argumentsObjectFromField(spec.field, spec.variables) : null;\n}\n\nexport interface FieldFunctionOptions<\n  TArgs = Record<string, any>,\n  TVars = Record<string, any>,\n> {\n  args: TArgs | null;\n\n  // The name of the field, equal to options.field.name.value when\n  // options.field is available. Useful if you reuse the same function for\n  // multiple fields, and you need to know which field you're currently\n  // processing. Always a string, even when options.field is null.\n  fieldName: string;\n\n  // The full field key used internally, including serialized key arguments.\n  storeFieldName: string;\n\n  // The FieldNode object used to read this field. Useful if you need to\n  // know about other attributes of the field, such as its directives. This\n  // option will be null when a string was passed to options.readField.\n  field: FieldNode | null;\n\n  variables?: TVars;\n\n  // Utilities for dealing with { __ref } objects.\n  isReference: typeof isReference;\n  toReference: ToReferenceFunction;\n\n  // A handy place to put field-specific data that you want to survive\n  // across multiple read function calls. Useful for field-level caching,\n  // if your read function does any expensive work.\n  storage: StorageType;\n\n  cache: InMemoryCache;\n\n  // Helper function for reading other fields within the current object.\n  // If a foreign object or reference is provided, the field will be read\n  // from that object instead of the current object, so this function can\n  // be used (together with isReference) to examine the cache outside the\n  // current object. If a FieldNode is passed instead of a string, and\n  // that FieldNode has arguments, the same options.variables will be used\n  // to compute the argument values. Note that this function will invoke\n  // custom read functions for other fields, if defined. Always returns\n  // immutable data (enforced with Object.freeze in development).\n  readField: ReadFieldFunction;\n\n  // Returns true for non-normalized StoreObjects and non-dangling\n  // References, indicating that readField(name, objOrRef) has a chance of\n  // working. Useful for filtering out dangling references from lists.\n  canRead: CanReadFunction;\n\n  // Instead of just merging objects with { ...existing, ...incoming }, this\n  // helper function can be used to merge objects in a way that respects any\n  // custom merge functions defined for their fields.\n  mergeObjects: MergeObjectsFunction;\n}\n\ntype MergeObjectsFunction = <T extends StoreObject | Reference>(\n  existing: T,\n  incoming: T,\n) => T;\n\nexport type FieldReadFunction<\n  TExisting = any,\n  TReadResult = TExisting,\n  TOptions extends FieldFunctionOptions = FieldFunctionOptions\n> = (\n  // When reading a field, one often needs to know about any existing\n  // value stored for that field. If the field is read before any value\n  // has been written to the cache, this existing parameter will be\n  // undefined, which makes it easy to use a default parameter expression\n  // to supply the initial value. This parameter is positional (rather\n  // than one of the named options) because that makes it possible for the\n  // developer to annotate it with a type, without also having to provide\n  // a whole new type for the options object.\n  existing: SafeReadonly<TExisting> | undefined,\n  options: TOptions,\n) => TReadResult | undefined;\n\nexport type FieldMergeFunction<\n  TExisting = any,\n  TIncoming = TExisting,\n  // Passing the whole FieldFunctionOptions makes the current definition\n  // independent from its implementation\n  TOptions extends FieldFunctionOptions = FieldFunctionOptions\n> = (\n  existing: SafeReadonly<TExisting> | undefined,\n  // The incoming parameter needs to be positional as well, for the same\n  // reasons discussed in FieldReadFunction above.\n  incoming: SafeReadonly<TIncoming>,\n  options: TOptions,\n) => SafeReadonly<TExisting>;\n\nconst nullKeyFieldsFn: KeyFieldsFunction = () => void 0;\nconst simpleKeyArgsFn: KeyArgsFunction = (_args, context) => context.fieldName;\n\n// These merge functions can be selected by specifying merge:true or\n// merge:false in a field policy.\nconst mergeTrueFn: FieldMergeFunction<any> =\n  (existing, incoming, { mergeObjects }) => mergeObjects(existing, incoming);\nconst mergeFalseFn: FieldMergeFunction<any> = (_, incoming) => incoming;\n\nexport type PossibleTypesMap = {\n  [supertype: string]: string[];\n};\n\nexport class Policies {\n  private typePolicies: {\n    [__typename: string]: {\n      keyFn?: KeyFieldsFunction;\n      merge?: FieldMergeFunction<any>;\n      fields: {\n        [fieldName: string]: {\n          keyFn?: KeyArgsFunction;\n          read?: FieldReadFunction<any>;\n          merge?: FieldMergeFunction<any>;\n        };\n      };\n    };\n  } = Object.create(null);\n\n  private toBeAdded: {\n    [__typename: string]: TypePolicy[];\n  } = Object.create(null);\n\n  // Map from subtype names to sets of supertype names. Note that this\n  // representation inverts the structure of possibleTypes (whose keys are\n  // supertypes and whose values are arrays of subtypes) because it tends\n  // to be much more efficient to search upwards than downwards.\n  private supertypeMap = new Map<string, Set<string>>();\n\n  // Any fuzzy subtypes specified by possibleTypes will be converted to\n  // RegExp objects and recorded here. Every key of this map can also be\n  // found in supertypeMap. In many cases this Map will be empty, which\n  // means no fuzzy subtype checking will happen in fragmentMatches.\n  private fuzzySubtypes = new Map<string, RegExp>();\n\n  public readonly cache: InMemoryCache;\n\n  public readonly rootIdsByTypename: Record<string, string> = Object.create(null);\n  public readonly rootTypenamesById: Record<string, string> = Object.create(null);\n\n  public readonly usingPossibleTypes = false;\n\n  constructor(private config: {\n    cache: InMemoryCache;\n    dataIdFromObject?: KeyFieldsFunction;\n    possibleTypes?: PossibleTypesMap;\n    typePolicies?: TypePolicies;\n  }) {\n    this.config = {\n      dataIdFromObject: defaultDataIdFromObject,\n      ...config,\n    };\n\n    this.cache = this.config.cache;\n\n    this.setRootTypename(\"Query\");\n    this.setRootTypename(\"Mutation\");\n    this.setRootTypename(\"Subscription\");\n\n    if (config.possibleTypes) {\n      this.addPossibleTypes(config.possibleTypes);\n    }\n\n    if (config.typePolicies) {\n      this.addTypePolicies(config.typePolicies);\n    }\n  }\n\n  public identify(\n    object: StoreObject,\n    partialContext?: Partial<KeyFieldsContext>,\n  ): [string?, StoreObject?] {\n    const policies = this;\n\n    const typename = partialContext && (\n      partialContext.typename ||\n      partialContext.storeObject?.__typename\n    ) || object.__typename;\n\n    // It should be possible to write root Query fields with writeFragment,\n    // using { __typename: \"Query\", ... } as the data, but it does not make\n    // sense to allow the same identification behavior for the Mutation and\n    // Subscription types, since application code should never be writing\n    // directly to (or reading directly from) those root objects.\n    if (typename === this.rootTypenamesById.ROOT_QUERY) {\n      return [\"ROOT_QUERY\"];\n    }\n\n    // Default context.storeObject to object if not otherwise provided.\n    const storeObject = partialContext && partialContext.storeObject || object;\n\n    const context: KeyFieldsContext = {\n      ...partialContext,\n      typename,\n      storeObject,\n      readField: partialContext && partialContext.readField || function () {\n        const options = normalizeReadFieldOptions(arguments, storeObject);\n        return policies.readField(options, {\n          store: policies.cache[\"data\"],\n          variables: options.variables,\n        });\n      },\n    };\n\n    let id: KeyFieldsResult;\n\n    const policy = typename && this.getTypePolicy(typename);\n    let keyFn = policy && policy.keyFn || this.config.dataIdFromObject;\n    while (keyFn) {\n      const specifierOrId = keyFn(object, context);\n      if (isArray(specifierOrId)) {\n        keyFn = keyFieldsFnFromSpecifier(specifierOrId);\n      } else {\n        id = specifierOrId;\n        break;\n      }\n    }\n\n    id = id ? String(id) : void 0;\n    return context.keyObject ? [id, context.keyObject] : [id];\n  }\n\n  public addTypePolicies(typePolicies: TypePolicies) {\n    Object.keys(typePolicies).forEach(typename => {\n      const {\n        queryType,\n        mutationType,\n        subscriptionType,\n        ...incoming\n      } = typePolicies[typename];\n\n      // Though {query,mutation,subscription}Type configurations are rare,\n      // it's important to call setRootTypename as early as possible,\n      // since these configurations should apply consistently for the\n      // entire lifetime of the cache. Also, since only one __typename can\n      // qualify as one of these root types, these three properties cannot\n      // be inherited, unlike the rest of the incoming properties. That\n      // restriction is convenient, because the purpose of this.toBeAdded\n      // is to delay the processing of type/field policies until the first\n      // time they're used, allowing policies to be added in any order as\n      // long as all relevant policies (including policies for supertypes)\n      // have been added by the time a given policy is used for the first\n      // time. In other words, since inheritance doesn't matter for these\n      // properties, there's also no need to delay their processing using\n      // the this.toBeAdded queue.\n      if (queryType) this.setRootTypename(\"Query\", typename);\n      if (mutationType) this.setRootTypename(\"Mutation\", typename);\n      if (subscriptionType) this.setRootTypename(\"Subscription\", typename);\n\n      if (hasOwn.call(this.toBeAdded, typename)) {\n        this.toBeAdded[typename].push(incoming);\n      } else {\n        this.toBeAdded[typename] = [incoming];\n      }\n    });\n  }\n\n  private updateTypePolicy(typename: string, incoming: TypePolicy) {\n    const existing = this.getTypePolicy(typename);\n    const { keyFields, fields } = incoming;\n\n    function setMerge(\n      existing: { merge?: FieldMergeFunction | boolean; },\n      merge?: FieldMergeFunction | boolean,\n    ) {\n      existing.merge =\n        typeof merge === \"function\" ? merge :\n        // Pass merge:true as a shorthand for a merge implementation\n        // that returns options.mergeObjects(existing, incoming).\n        merge === true ? mergeTrueFn :\n        // Pass merge:false to make incoming always replace existing\n        // without any warnings about data clobbering.\n        merge === false ? mergeFalseFn :\n        existing.merge;\n    }\n\n    // Type policies can define merge functions, as an alternative to\n    // using field policies to merge child objects.\n    setMerge(existing, incoming.merge);\n\n    existing.keyFn =\n      // Pass false to disable normalization for this typename.\n      keyFields === false ? nullKeyFieldsFn :\n      // Pass an array of strings to use those fields to compute a\n      // composite ID for objects of this typename.\n      isArray(keyFields) ? keyFieldsFnFromSpecifier(keyFields) :\n      // Pass a function to take full control over identification.\n      typeof keyFields === \"function\" ? keyFields :\n      // Leave existing.keyFn unchanged if above cases fail.\n      existing.keyFn;\n\n    if (fields) {\n      Object.keys(fields).forEach(fieldName => {\n        const existing = this.getFieldPolicy(typename, fieldName, true)!;\n        const incoming = fields[fieldName];\n\n        if (typeof incoming === \"function\") {\n          existing.read = incoming;\n        } else {\n          const { keyArgs, read, merge } = incoming;\n\n          existing.keyFn =\n            // Pass false to disable argument-based differentiation of\n            // field identities.\n            keyArgs === false ? simpleKeyArgsFn :\n            // Pass an array of strings to use named arguments to\n            // compute a composite identity for the field.\n            isArray(keyArgs) ? keyArgsFnFromSpecifier(keyArgs) :\n            // Pass a function to take full control over field identity.\n            typeof keyArgs === \"function\" ? keyArgs :\n            // Leave existing.keyFn unchanged if above cases fail.\n            existing.keyFn;\n\n          if (typeof read === \"function\") {\n            existing.read = read;\n          }\n\n          setMerge(existing, merge);\n        }\n\n        if (existing.read && existing.merge) {\n          // If we have both a read and a merge function, assume\n          // keyArgs:false, because read and merge together can take\n          // responsibility for interpreting arguments in and out. This\n          // default assumption can always be overridden by specifying\n          // keyArgs explicitly in the FieldPolicy.\n          existing.keyFn = existing.keyFn || simpleKeyArgsFn;\n        }\n      });\n    }\n  }\n\n  private setRootTypename(\n    which: \"Query\" | \"Mutation\" | \"Subscription\",\n    typename: string = which,\n  ) {\n    const rootId = \"ROOT_\" + which.toUpperCase();\n    const old = this.rootTypenamesById[rootId];\n    if (typename !== old) {\n      invariant(!old || old === which, `Cannot change root ${which} __typename more than once`);\n      // First, delete any old __typename associated with this rootId from\n      // rootIdsByTypename.\n      if (old) delete this.rootIdsByTypename[old];\n      // Now make this the only __typename that maps to this rootId.\n      this.rootIdsByTypename[typename] = rootId;\n      // Finally, update the __typename associated with this rootId.\n      this.rootTypenamesById[rootId] = typename;\n    }\n  }\n\n  public addPossibleTypes(possibleTypes: PossibleTypesMap) {\n    (this.usingPossibleTypes as boolean) = true;\n    Object.keys(possibleTypes).forEach(supertype => {\n      // Make sure all types have an entry in this.supertypeMap, even if\n      // their supertype set is empty, so we can return false immediately\n      // from policies.fragmentMatches for unknown supertypes.\n      this.getSupertypeSet(supertype, true);\n\n      possibleTypes[supertype].forEach(subtype => {\n        this.getSupertypeSet(subtype, true)!.add(supertype);\n        const match = subtype.match(TypeOrFieldNameRegExp);\n        if (!match || match[0] !== subtype) {\n          // TODO Don't interpret just any invalid typename as a RegExp.\n          this.fuzzySubtypes.set(subtype, new RegExp(subtype));\n        }\n      });\n    });\n  }\n\n  private getTypePolicy(typename: string): Policies[\"typePolicies\"][string] {\n    if (!hasOwn.call(this.typePolicies, typename)) {\n      const policy: Policies[\"typePolicies\"][string] =\n        this.typePolicies[typename] = Object.create(null);\n      policy.fields = Object.create(null);\n\n      // When the TypePolicy for typename is first accessed, instead of\n      // starting with an empty policy object, inherit any properties or\n      // fields from the type policies of the supertypes of typename.\n      //\n      // Any properties or fields defined explicitly within the TypePolicy\n      // for typename will take precedence, and if there are multiple\n      // supertypes, the properties of policies whose types were added\n      // later via addPossibleTypes will take precedence over those of\n      // earlier supertypes. TODO Perhaps we should warn about these\n      // conflicts in development, and recommend defining the property\n      // explicitly in the subtype policy?\n      //\n      // Field policy inheritance is atomic/shallow: you can't inherit a\n      // field policy and then override just its read function, since read\n      // and merge functions often need to cooperate, so changing only one\n      // of them would be a recipe for inconsistency.\n      //\n      // Once the TypePolicy for typename has been accessed, its\n      // properties can still be updated directly using addTypePolicies,\n      // but future changes to supertype policies will not be reflected in\n      // this policy, because this code runs at most once per typename.\n      const supertypes = this.supertypeMap.get(typename);\n      if (supertypes && supertypes.size) {\n        supertypes.forEach(supertype => {\n          const { fields, ...rest } = this.getTypePolicy(supertype);\n          Object.assign(policy, rest);\n          Object.assign(policy.fields, fields);\n        });\n      }\n    }\n\n    const inbox = this.toBeAdded[typename];\n    if (inbox && inbox.length) {\n      // Merge the pending policies into this.typePolicies, in the order they\n      // were originally passed to addTypePolicy.\n      inbox.splice(0).forEach(policy => {\n        this.updateTypePolicy(typename, policy);\n      });\n    }\n\n    return this.typePolicies[typename];\n  }\n\n  private getFieldPolicy(\n    typename: string | undefined,\n    fieldName: string,\n    createIfMissing: boolean,\n  ): {\n    keyFn?: KeyArgsFunction;\n    read?: FieldReadFunction<any>;\n    merge?: FieldMergeFunction<any>;\n  } | undefined {\n    if (typename) {\n      const fieldPolicies = this.getTypePolicy(typename).fields;\n      return fieldPolicies[fieldName] || (\n        createIfMissing && (fieldPolicies[fieldName] = Object.create(null)));\n    }\n  }\n\n  private getSupertypeSet(\n    subtype: string,\n    createIfMissing: boolean,\n  ): Set<string> | undefined {\n    let supertypeSet = this.supertypeMap.get(subtype);\n    if (!supertypeSet && createIfMissing) {\n      this.supertypeMap.set(subtype, supertypeSet = new Set<string>());\n    }\n    return supertypeSet;\n  }\n\n  public fragmentMatches(\n    fragment: InlineFragmentNode | FragmentDefinitionNode,\n    typename: string | undefined,\n    result?: Record<string, any>,\n    variables?: Record<string, any>,\n  ): boolean {\n    if (!fragment.typeCondition) return true;\n\n    // If the fragment has a type condition but the object we're matching\n    // against does not have a __typename, the fragment cannot match.\n    if (!typename) return false;\n\n    const supertype = fragment.typeCondition.name.value;\n    // Common case: fragment type condition and __typename are the same.\n    if (typename === supertype) return true;\n\n    if (this.usingPossibleTypes &&\n        this.supertypeMap.has(supertype)) {\n      const typenameSupertypeSet = this.getSupertypeSet(typename, true)!;\n      const workQueue = [typenameSupertypeSet];\n      const maybeEnqueue = (subtype: string) => {\n        const supertypeSet = this.getSupertypeSet(subtype, false);\n        if (supertypeSet &&\n            supertypeSet.size &&\n            workQueue.indexOf(supertypeSet) < 0) {\n          workQueue.push(supertypeSet);\n        }\n      };\n\n      // We need to check fuzzy subtypes only if we encountered fuzzy\n      // subtype strings in addPossibleTypes, and only while writing to\n      // the cache, since that's when selectionSetMatchesResult gives a\n      // strong signal of fragment matching. The StoreReader class calls\n      // policies.fragmentMatches without passing a result object, so\n      // needToCheckFuzzySubtypes is always false while reading.\n      let needToCheckFuzzySubtypes = !!(result && this.fuzzySubtypes.size);\n      let checkingFuzzySubtypes = false;\n\n      // It's important to keep evaluating workQueue.length each time through\n      // the loop, because the queue can grow while we're iterating over it.\n      for (let i = 0; i < workQueue.length; ++i) {\n        const supertypeSet = workQueue[i];\n\n        if (supertypeSet.has(supertype)) {\n          if (!typenameSupertypeSet.has(supertype)) {\n            if (checkingFuzzySubtypes) {\n              invariant.warn(`Inferring subtype ${typename} of supertype ${supertype}`);\n            }\n            // Record positive results for faster future lookup.\n            // Unfortunately, we cannot safely cache negative results,\n            // because new possibleTypes data could always be added to the\n            // Policies class.\n            typenameSupertypeSet.add(supertype);\n          }\n          return true;\n        }\n\n        supertypeSet.forEach(maybeEnqueue);\n\n        if (needToCheckFuzzySubtypes &&\n            // Start checking fuzzy subtypes only after exhausting all\n            // non-fuzzy subtypes (after the final iteration of the loop).\n            i === workQueue.length - 1 &&\n            // We could wait to compare fragment.selectionSet to result\n            // after we verify the supertype, but this check is often less\n            // expensive than that search, and we will have to do the\n            // comparison anyway whenever we find a potential match.\n            selectionSetMatchesResult(fragment.selectionSet, result!, variables)) {\n          // We don't always need to check fuzzy subtypes (if no result\n          // was provided, or !this.fuzzySubtypes.size), but, when we do,\n          // we only want to check them once.\n          needToCheckFuzzySubtypes = false;\n          checkingFuzzySubtypes = true;\n\n          // If we find any fuzzy subtypes that match typename, extend the\n          // workQueue to search through the supertypes of those fuzzy\n          // subtypes. Otherwise the for-loop will terminate and we'll\n          // return false below.\n          this.fuzzySubtypes.forEach((regExp, fuzzyString) => {\n            const match = typename.match(regExp);\n            if (match && match[0] === typename) {\n              maybeEnqueue(fuzzyString);\n            }\n          });\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public hasKeyArgs(typename: string | undefined, fieldName: string) {\n    const policy = this.getFieldPolicy(typename, fieldName, false);\n    return !!(policy && policy.keyFn);\n  }\n\n  public getStoreFieldName(fieldSpec: FieldSpecifier): string {\n    const { typename, fieldName } = fieldSpec;\n    const policy = this.getFieldPolicy(typename, fieldName, false);\n    let storeFieldName: Exclude<ReturnType<KeyArgsFunction>, KeySpecifier>;\n\n    let keyFn = policy && policy.keyFn;\n    if (keyFn && typename) {\n      const context: Parameters<KeyArgsFunction>[1] = {\n        typename,\n        fieldName,\n        field: fieldSpec.field || null,\n        variables: fieldSpec.variables,\n      };\n      const args = argsFromFieldSpecifier(fieldSpec);\n      while (keyFn) {\n        const specifierOrString = keyFn(args, context);\n        if (isArray(specifierOrString)) {\n          keyFn = keyArgsFnFromSpecifier(specifierOrString);\n        } else {\n          // If the custom keyFn returns a falsy value, fall back to\n          // fieldName instead.\n          storeFieldName = specifierOrString || fieldName;\n          break;\n        }\n      }\n    }\n\n    if (storeFieldName === void 0) {\n      storeFieldName = fieldSpec.field\n        ? storeKeyNameFromField(fieldSpec.field, fieldSpec.variables)\n        : getStoreKeyName(fieldName, argsFromFieldSpecifier(fieldSpec));\n    }\n\n    // Returning false from a keyArgs function is like configuring\n    // keyArgs: false, but more dynamic.\n    if (storeFieldName === false) {\n      return fieldName;\n    }\n\n    // Make sure custom field names start with the actual field.name.value\n    // of the field, so we can always figure out which properties of a\n    // StoreObject correspond to which original field names.\n    return fieldName === fieldNameFromStoreName(storeFieldName)\n      ? storeFieldName\n      : fieldName + \":\" + storeFieldName;\n  }\n\n  public readField<V = StoreValue>(\n    options: ReadFieldOptions,\n    context: ReadMergeModifyContext,\n  ): SafeReadonly<V> | undefined {\n    const objectOrReference = options.from;\n    if (!objectOrReference) return;\n\n    const nameOrField = options.field || options.fieldName;\n    if (!nameOrField) return;\n\n    if (options.typename === void 0) {\n      const typename = context.store.getFieldValue<string>(objectOrReference, \"__typename\");\n      if (typename) options.typename = typename;\n    }\n\n    const storeFieldName = this.getStoreFieldName(options);\n    const fieldName = fieldNameFromStoreName(storeFieldName);\n    const existing = context.store.getFieldValue<V>(objectOrReference, storeFieldName);\n    const policy = this.getFieldPolicy(options.typename, fieldName, false);\n    const read = policy && policy.read;\n\n    if (read) {\n      const readOptions = makeFieldFunctionOptions(\n        this,\n        objectOrReference,\n        options,\n        context,\n        context.store.getStorage(\n          isReference(objectOrReference)\n            ? objectOrReference.__ref\n            : objectOrReference,\n          storeFieldName,\n        ),\n      );\n\n      // Call read(existing, readOptions) with cacheSlot holding this.cache.\n      return cacheSlot.withValue(\n        this.cache,\n        read,\n        [existing, readOptions],\n      ) as SafeReadonly<V>;\n    }\n\n    return existing;\n  }\n\n  public getReadFunction(\n    typename: string | undefined,\n    fieldName: string,\n  ): FieldReadFunction | undefined {\n    const policy = this.getFieldPolicy(typename, fieldName, false);\n    return policy && policy.read;\n  }\n\n  public getMergeFunction(\n    parentTypename: string | undefined,\n    fieldName: string,\n    childTypename: string | undefined,\n  ): FieldMergeFunction | undefined {\n    let policy:\n      | Policies[\"typePolicies\"][string]\n      | Policies[\"typePolicies\"][string][\"fields\"][string]\n      | undefined =\n      this.getFieldPolicy(parentTypename, fieldName, false);\n    let merge = policy && policy.merge;\n    if (!merge && childTypename) {\n      policy = this.getTypePolicy(childTypename);\n      merge = policy && policy.merge;\n    }\n    return merge;\n  }\n\n  public runMergeFunction(\n    existing: StoreValue,\n    incoming: StoreValue,\n    { field, typename, merge }: MergeInfo,\n    context: WriteContext,\n    storage?: StorageType,\n  ) {\n    if (merge === mergeTrueFn) {\n      // Instead of going to the trouble of creating a full\n      // FieldFunctionOptions object and calling mergeTrueFn, we can\n      // simply call mergeObjects, as mergeTrueFn would.\n      return makeMergeObjectsFunction(\n        context.store,\n      )(existing as StoreObject,\n        incoming as StoreObject);\n    }\n\n    if (merge === mergeFalseFn) {\n      // Likewise for mergeFalseFn, whose implementation is even simpler.\n      return incoming;\n    }\n\n    // If cache.writeQuery or cache.writeFragment was called with\n    // options.overwrite set to true, we still call merge functions, but\n    // the existing data is always undefined, so the merge function will\n    // not attempt to combine the incoming data with the existing data.\n    if (context.overwrite) {\n      existing = void 0;\n    }\n\n    return merge(existing, incoming, makeFieldFunctionOptions(\n      this,\n      // Unlike options.readField for read functions, we do not fall\n      // back to the current object if no foreignObjOrRef is provided,\n      // because it's not clear what the current object should be for\n      // merge functions: the (possibly undefined) existing object, or\n      // the incoming object? If you think your merge function needs\n      // to read sibling fields in order to produce a new value for\n      // the current field, you might want to rethink your strategy,\n      // because that's a recipe for making merge behavior sensitive\n      // to the order in which fields are written into the cache.\n      // However, readField(name, ref) is useful for merge functions\n      // that need to deduplicate child objects and references.\n      void 0,\n      { typename,\n        fieldName: field.name.value,\n        field,\n        variables: context.variables },\n      context,\n      storage || Object.create(null),\n    ));\n  }\n}\n\nfunction makeFieldFunctionOptions(\n  policies: Policies,\n  objectOrReference: StoreObject | Reference | undefined,\n  fieldSpec: FieldSpecifier,\n  context: ReadMergeModifyContext,\n  storage: StorageType,\n): FieldFunctionOptions {\n  const storeFieldName = policies.getStoreFieldName(fieldSpec);\n  const fieldName = fieldNameFromStoreName(storeFieldName);\n  const variables = fieldSpec.variables || context.variables;\n  const { toReference, canRead } = context.store;\n\n  return {\n    args: argsFromFieldSpecifier(fieldSpec),\n    field: fieldSpec.field || null,\n    fieldName,\n    storeFieldName,\n    variables,\n    isReference,\n    toReference,\n    storage,\n    cache: policies.cache,\n    canRead,\n    readField<T>() {\n      return policies.readField<T>(\n        normalizeReadFieldOptions(arguments, objectOrReference, context),\n        context,\n      );\n    },\n    mergeObjects: makeMergeObjectsFunction(context.store),\n  };\n}\n\nexport function normalizeReadFieldOptions(\n  readFieldArgs: IArguments,\n  objectOrReference: StoreObject | Reference | undefined,\n  variables?: ReadMergeModifyContext[\"variables\"],\n): ReadFieldOptions {\n  const {\n    0: fieldNameOrOptions,\n    1: from,\n    length: argc,\n  } = readFieldArgs;\n\n  let options: ReadFieldOptions;\n\n  if (typeof fieldNameOrOptions === \"string\") {\n    options = {\n      fieldName: fieldNameOrOptions,\n      // Default to objectOrReference only when no second argument was\n      // passed for the from parameter, not when undefined is explicitly\n      // passed as the second argument.\n      from: argc > 1 ? from : objectOrReference,\n    };\n  } else {\n    options = { ...fieldNameOrOptions };\n    // Default to objectOrReference only when fieldNameOrOptions.from is\n    // actually omitted, rather than just undefined.\n    if (!hasOwn.call(options, \"from\")) {\n      options.from = objectOrReference;\n    }\n  }\n\n  if (__DEV__ && options.from === void 0) {\n    invariant.warn(`Undefined 'from' passed to readField with arguments ${\n      stringifyForDisplay(Array.from(readFieldArgs))\n    }`);\n  }\n\n  if (void 0 === options.variables) {\n    options.variables = variables;\n  }\n\n  return options;\n}\n\nfunction makeMergeObjectsFunction(\n  store: NormalizedCache,\n): MergeObjectsFunction {\n  return function mergeObjects(existing, incoming) {\n    if (isArray(existing) || isArray(incoming)) {\n      throw new InvariantError(\"Cannot automatically merge arrays\");\n    }\n\n    // These dynamic checks are necessary because the parameters of a\n    // custom merge function can easily have the any type, so the type\n    // system cannot always enforce the StoreObject | Reference parameter\n    // types of options.mergeObjects.\n    if (isNonNullObject(existing) &&\n        isNonNullObject(incoming)) {\n      const eType = store.getFieldValue(existing, \"__typename\");\n      const iType = store.getFieldValue(incoming, \"__typename\");\n      const typesDiffer = eType && iType && eType !== iType;\n\n      if (typesDiffer) {\n        return incoming;\n      }\n\n      if (isReference(existing) &&\n          storeValueIsStoreObject(incoming)) {\n        // Update the normalized EntityStore for the entity identified by\n        // existing.__ref, preferring/overwriting any fields contributed by the\n        // newer incoming StoreObject.\n        store.merge(existing.__ref, incoming);\n        return existing;\n      }\n\n      if (storeValueIsStoreObject(existing) &&\n          isReference(incoming)) {\n        // Update the normalized EntityStore for the entity identified by\n        // incoming.__ref, taking fields from the older existing object only if\n        // those fields are not already present in the newer StoreObject\n        // identified by incoming.__ref.\n        store.merge(existing, incoming.__ref);\n        return incoming;\n      }\n\n      if (storeValueIsStoreObject(existing) &&\n          storeValueIsStoreObject(incoming)) {\n        return { ...existing, ...incoming };\n      }\n    }\n\n    return incoming;\n  };\n}\n","import { makeUniqueId } from \"./makeUniqueId\";\n\nexport function stringifyForDisplay(value: any): string {\n  const undefId = makeUniqueId(\"stringifyForDisplay\");\n  return JSON.stringify(value, (key, value) => {\n    return value === void 0 ? undefId : value;\n  }).split(JSON.stringify(undefId)).join(\"<undefined>\");\n}\n","import { invariant, InvariantError } from '../../utilities/globals';\nimport { equal } from '@wry/equality';\nimport { Trie } from '@wry/trie';\nimport {\n  SelectionSetNode,\n  FieldNode,\n} from 'graphql';\n\nimport {\n  createFragmentMap,\n  FragmentMap,\n  getFragmentFromSelection,\n  getDefaultValues,\n  getFragmentDefinitions,\n  getOperationDefinition,\n  getTypenameFromResult,\n  makeReference,\n  isField,\n  resultKeyNameFromField,\n  StoreValue,\n  StoreObject,\n  Reference,\n  isReference,\n  shouldInclude,\n  cloneDeep,\n  addTypenameToDocument,\n  isNonEmptyArray,\n  argumentsObjectFromField,\n} from '../../utilities';\n\nimport { NormalizedCache, ReadMergeModifyContext, MergeTree } from './types';\nimport { makeProcessedFieldsMerger, fieldNameFromStoreName, storeValueIsStoreObject, isArray } from './helpers';\nimport { StoreReader } from './readFromStore';\nimport { InMemoryCache } from './inMemoryCache';\nimport { EntityStore } from './entityStore';\nimport { Cache } from '../../core';\nimport { canonicalStringify } from './object-canon';\nimport { normalizeReadFieldOptions } from './policies';\nimport { ReadFieldFunction } from '../core/types/common';\n\nexport interface WriteContext extends ReadMergeModifyContext {\n  readonly written: {\n    [dataId: string]: SelectionSetNode[];\n  };\n  readonly fragmentMap?: FragmentMap;\n  // General-purpose deep-merge function for use during writes.\n  merge<T>(existing: T, incoming: T): T;\n  // If true, merge functions will be called with undefined existing data.\n  overwrite: boolean;\n  incomingById: Map<string, {\n    storeObject: StoreObject;\n    mergeTree?: MergeTree;\n    fieldNodeSet: Set<FieldNode>;\n  }>;\n  // Directive metadata for @client and @defer. We could use a bitfield for this\n  // information to save some space, and use that bitfield number as the keys in\n  // the context.flavors Map.\n  clientOnly: boolean;\n  deferred: boolean;\n  flavors: Map<string, FlavorableWriteContext>;\n};\n\ntype FlavorableWriteContext = Pick<\n  WriteContext,\n  | \"clientOnly\"\n  | \"deferred\"\n  | \"flavors\"\n>;\n\n// Since there are only four possible combinations of context.clientOnly and\n// context.deferred values, we should need at most four \"flavors\" of any given\n// WriteContext. To avoid creating multiple copies of the same context, we cache\n// the contexts in the context.flavors Map (shared by all flavors) according to\n// their clientOnly and deferred values (always in that order).\nfunction getContextFlavor<TContext extends FlavorableWriteContext>(\n  context: TContext,\n  clientOnly: TContext[\"clientOnly\"],\n  deferred: TContext[\"deferred\"],\n): TContext {\n  const key = `${clientOnly}${deferred}`;\n  let flavored = context.flavors.get(key);\n  if (!flavored) {\n    context.flavors.set(key, flavored = (\n      context.clientOnly === clientOnly &&\n      context.deferred === deferred\n    ) ? context : {\n      ...context,\n      clientOnly,\n      deferred,\n    });\n  }\n  return flavored as TContext;\n}\n\ninterface ProcessSelectionSetOptions {\n  dataId?: string,\n  result: Record<string, any>;\n  selectionSet: SelectionSetNode;\n  context: WriteContext;\n  mergeTree: MergeTree;\n}\n\nexport class StoreWriter {\n  constructor(\n    public readonly cache: InMemoryCache,\n    private reader?: StoreReader,\n  ) {}\n\n  public writeToStore(store: NormalizedCache, {\n    query,\n    result,\n    dataId,\n    variables,\n    overwrite,\n  }: Cache.WriteOptions): Reference | undefined {\n    const operationDefinition = getOperationDefinition(query)!;\n    const merger = makeProcessedFieldsMerger();\n\n    variables = {\n      ...getDefaultValues(operationDefinition),\n      ...variables!,\n    };\n\n    const context: WriteContext = {\n      store,\n      written: Object.create(null),\n      merge<T>(existing: T, incoming: T) {\n        return merger.merge(existing, incoming) as T;\n      },\n      variables,\n      varString: canonicalStringify(variables),\n      fragmentMap: createFragmentMap(getFragmentDefinitions(query)),\n      overwrite: !!overwrite,\n      incomingById: new Map,\n      clientOnly: false,\n      deferred: false,\n      flavors: new Map,\n    };\n\n    const ref = this.processSelectionSet({\n      result: result || Object.create(null),\n      dataId,\n      selectionSet: operationDefinition.selectionSet,\n      mergeTree: { map: new Map },\n      context,\n    });\n\n    if (!isReference(ref)) {\n      throw new InvariantError(`Could not identify object ${JSON.stringify(result)}`);\n    }\n\n    // So far, the store has not been modified, so now it's time to process\n    // context.incomingById and merge those incoming fields into context.store.\n    context.incomingById.forEach(({ storeObject, mergeTree, fieldNodeSet }, dataId) => {\n      const entityRef = makeReference(dataId);\n\n      if (mergeTree && mergeTree.map.size) {\n        const applied = this.applyMerges(mergeTree, entityRef, storeObject, context);\n        if (isReference(applied)) {\n          // Assume References returned by applyMerges have already been merged\n          // into the store. See makeMergeObjectsFunction in policies.ts for an\n          // example of how this can happen.\n          return;\n        }\n        // Otherwise, applyMerges returned a StoreObject, whose fields we should\n        // merge into the store (see store.merge statement below).\n        storeObject = applied;\n      }\n\n      if (__DEV__ && !context.overwrite) {\n        const fieldsWithSelectionSets: Record<string, true> = Object.create(null);\n        fieldNodeSet.forEach(field => {\n          if (field.selectionSet) {\n            fieldsWithSelectionSets[field.name.value] = true;\n          }\n        });\n\n        const hasSelectionSet = (storeFieldName: string) =>\n          fieldsWithSelectionSets[\n            fieldNameFromStoreName(storeFieldName)\n          ] === true;\n\n        const hasMergeFunction = (storeFieldName: string) => {\n          const childTree = mergeTree && mergeTree.map.get(storeFieldName);\n          return Boolean(childTree && childTree.info && childTree.info.merge);\n        };\n\n        Object.keys(storeObject).forEach(storeFieldName => {\n          // If a merge function was defined for this field, trust that it\n          // did the right thing about (not) clobbering data. If the field\n          // has no selection set, it's a scalar field, so it doesn't need\n          // a merge function (even if it's an object, like JSON data).\n          if (hasSelectionSet(storeFieldName) &&\n              !hasMergeFunction(storeFieldName)) {\n            warnAboutDataLoss(\n              entityRef,\n              storeObject,\n              storeFieldName,\n              context.store,\n            );\n          }\n        });\n      }\n\n      store.merge(dataId, storeObject);\n    });\n\n    // Any IDs written explicitly to the cache will be retained as\n    // reachable root IDs for garbage collection purposes. Although this\n    // logic includes root IDs like ROOT_QUERY and ROOT_MUTATION, their\n    // retainment counts are effectively ignored because cache.gc() always\n    // includes them in its root ID set.\n    store.retain(ref.__ref);\n\n    return ref;\n  }\n\n  private processSelectionSet({\n    dataId,\n    result,\n    selectionSet,\n    context,\n    // This object allows processSelectionSet to report useful information\n    // to its callers without explicitly returning that information.\n    mergeTree,\n  }: ProcessSelectionSetOptions): StoreObject | Reference {\n    const { policies } = this.cache;\n\n    // This variable will be repeatedly updated using context.merge to\n    // accumulate all fields that need to be written into the store.\n    let incoming: StoreObject = Object.create(null);\n\n    // If typename was not passed in, infer it. Note that typename is\n    // always passed in for tricky-to-infer cases such as \"Query\" for\n    // ROOT_QUERY.\n    const typename: string | undefined =\n      (dataId && policies.rootTypenamesById[dataId]) ||\n      getTypenameFromResult(result, selectionSet, context.fragmentMap) ||\n      (dataId && context.store.get(dataId, \"__typename\") as string);\n\n    if (\"string\" === typeof typename) {\n      incoming.__typename = typename;\n    }\n\n    // This readField function will be passed as context.readField in the\n    // KeyFieldsContext object created within policies.identify (called below).\n    // In addition to reading from the existing context.store (thanks to the\n    // policies.readField(options, context) line at the very bottom), this\n    // version of readField can read from Reference objects that are currently\n    // pending in context.incomingById, which is important whenever keyFields\n    // need to be extracted from a child object that processSelectionSet has\n    // turned into a Reference.\n    const readField: ReadFieldFunction = function (this: void) {\n      const options = normalizeReadFieldOptions(\n        arguments,\n        incoming,\n        context.variables,\n      );\n\n      if (isReference(options.from)) {\n        const info = context.incomingById.get(options.from.__ref);\n        if (info) {\n          const result = policies.readField({\n            ...options,\n            from: info.storeObject\n          }, context);\n\n          if (result !== void 0) {\n            return result;\n          }\n        }\n      }\n\n      return policies.readField(options, context);\n    };\n\n    const fieldNodeSet = new Set<FieldNode>();\n\n    this.flattenFields(\n      selectionSet,\n      result,\n      // This WriteContext will be the default context value for fields returned\n      // by the flattenFields method, but some fields may be assigned a modified\n      // context, depending on the presence of @client and other directives.\n      context,\n      typename,\n    ).forEach((context, field) => {\n      const resultFieldKey = resultKeyNameFromField(field);\n      const value = result[resultFieldKey];\n\n      fieldNodeSet.add(field);\n\n      if (value !== void 0) {\n        const storeFieldName = policies.getStoreFieldName({\n          typename,\n          fieldName: field.name.value,\n          field,\n          variables: context.variables,\n        });\n\n        const childTree = getChildMergeTree(mergeTree, storeFieldName);\n\n        let incomingValue = this.processFieldValue(\n          value,\n          field,\n          // Reset context.clientOnly and context.deferred to their default\n          // values before processing nested selection sets.\n          field.selectionSet\n            ? getContextFlavor(context, false, false)\n            : context,\n          childTree,\n        );\n\n        // To determine if this field holds a child object with a merge function\n        // defined in its type policy (see PR #7070), we need to figure out the\n        // child object's __typename.\n        let childTypename: string | undefined;\n\n        // The field's value can be an object that has a __typename only if the\n        // field has a selection set. Otherwise incomingValue is scalar.\n        if (field.selectionSet &&\n            (isReference(incomingValue) ||\n             storeValueIsStoreObject(incomingValue))) {\n          childTypename = readField<string>(\"__typename\", incomingValue);\n        }\n\n        const merge = policies.getMergeFunction(\n          typename,\n          field.name.value,\n          childTypename,\n        );\n\n        if (merge) {\n          childTree.info = {\n            // TODO Check compatibility against any existing childTree.field?\n            field,\n            typename,\n            merge,\n          };\n        } else {\n          maybeRecycleChildMergeTree(mergeTree, storeFieldName);\n        }\n\n        incoming = context.merge(incoming, {\n          [storeFieldName]: incomingValue,\n        });\n\n      } else if (\n        __DEV__ &&\n        !context.clientOnly &&\n        !context.deferred &&\n        !addTypenameToDocument.added(field) &&\n        // If the field has a read function, it may be a synthetic field or\n        // provide a default value, so its absence from the written data should\n        // not be cause for alarm.\n        !policies.getReadFunction(typename, field.name.value)\n      ) {\n        invariant.error(`Missing field '${\n          resultKeyNameFromField(field)\n        }' while writing result ${\n          JSON.stringify(result, null, 2)\n        }`.substring(0, 1000));\n      }\n    });\n\n    // Identify the result object, even if dataId was already provided,\n    // since we always need keyObject below.\n    try {\n      const [id, keyObject] = policies.identify(result, {\n        typename,\n        selectionSet,\n        fragmentMap: context.fragmentMap,\n        storeObject: incoming,\n        readField,\n      });\n\n      // If dataId was not provided, fall back to the id just generated by\n      // policies.identify.\n      dataId = dataId || id;\n\n      // Write any key fields that were used during identification, even if\n      // they were not mentioned in the original query.\n      if (keyObject) {\n        // TODO Reverse the order of the arguments?\n        incoming = context.merge(incoming, keyObject);\n      }\n    } catch (e) {\n      // If dataId was provided, tolerate failure of policies.identify.\n      if (!dataId) throw e;\n    }\n\n    if (\"string\" === typeof dataId) {\n      const dataRef = makeReference(dataId);\n\n      // Avoid processing the same entity object using the same selection\n      // set more than once. We use an array instead of a Set since most\n      // entity IDs will be written using only one selection set, so the\n      // size of this array is likely to be very small, meaning indexOf is\n      // likely to be faster than Set.prototype.has.\n      const sets = context.written[dataId] || (context.written[dataId] = []);\n      if (sets.indexOf(selectionSet) >= 0) return dataRef;\n      sets.push(selectionSet);\n\n      // If we're about to write a result object into the store, but we\n      // happen to know that the exact same (===) result object would be\n      // returned if we were to reread the result with the same inputs,\n      // then we can skip the rest of the processSelectionSet work for\n      // this object, and immediately return a Reference to it.\n      if (this.reader && this.reader.isFresh(\n        result,\n        dataRef,\n        selectionSet,\n        context,\n      )) {\n        return dataRef;\n      }\n\n      const previous = context.incomingById.get(dataId);\n      if (previous) {\n        previous.storeObject = context.merge(previous.storeObject, incoming);\n        previous.mergeTree = mergeMergeTrees(previous.mergeTree, mergeTree);\n        fieldNodeSet.forEach(field => previous.fieldNodeSet.add(field));\n      } else {\n        context.incomingById.set(dataId, {\n          storeObject: incoming,\n          // Save a reference to mergeTree only if it is not empty, because\n          // empty MergeTrees may be recycled by maybeRecycleChildMergeTree and\n          // reused for entirely different parts of the result tree.\n          mergeTree: mergeTreeIsEmpty(mergeTree) ? void 0 : mergeTree,\n          fieldNodeSet,\n        });\n      }\n\n      return dataRef;\n    }\n\n    return incoming;\n  }\n\n  private processFieldValue(\n    value: any,\n    field: FieldNode,\n    context: WriteContext,\n    mergeTree: MergeTree,\n  ): StoreValue {\n    if (!field.selectionSet || value === null) {\n      // In development, we need to clone scalar values so that they can be\n      // safely frozen with maybeDeepFreeze in readFromStore.ts. In production,\n      // it's cheaper to store the scalar values directly in the cache.\n      return __DEV__ ? cloneDeep(value) : value;\n    }\n\n    if (isArray(value)) {\n      return value.map((item, i) => {\n        const value = this.processFieldValue(\n          item, field, context, getChildMergeTree(mergeTree, i));\n        maybeRecycleChildMergeTree(mergeTree, i);\n        return value;\n      });\n    }\n\n    return this.processSelectionSet({\n      result: value,\n      selectionSet: field.selectionSet,\n      context,\n      mergeTree,\n    });\n  }\n\n  // Implements https://spec.graphql.org/draft/#sec-Field-Collection, but with\n  // some additions for tracking @client and @defer directives.\n  private flattenFields<TContext extends Pick<\n    WriteContext,\n    | \"clientOnly\"\n    | \"deferred\"\n    | \"flavors\"\n    | \"fragmentMap\"\n    | \"variables\"\n  >>(\n    selectionSet: SelectionSetNode,\n    result: Record<string, any>,\n    context: TContext,\n    typename = getTypenameFromResult(result, selectionSet, context.fragmentMap),\n  ): Map<FieldNode, TContext> {\n    const fieldMap = new Map<FieldNode, TContext>();\n    const { policies } = this.cache;\n\n    const limitingTrie = new Trie<{\n      // Tracks whether (selectionSet, clientOnly, deferred) has been flattened\n      // before. The GraphQL specification only uses the fragment name for\n      // skipping previously visited fragments, but the top-level fragment\n      // selection set corresponds 1:1 with the fagment name (and is slightly\n      // easier too work with), and we need to consider clientOnly and deferred\n      // values as well, potentially revisiting selection sets that were\n      // previously visited with different inherited configurations of those\n      // directives.\n      visited?: boolean;\n    }>(false); // No need for WeakMap, since limitingTrie does not escape.\n\n    (function flatten(\n      this: void,\n      selectionSet: SelectionSetNode,\n      inheritedContext: TContext,\n    ) {\n      const visitedNode = limitingTrie.lookup(\n        selectionSet,\n        // Because we take inheritedClientOnly and inheritedDeferred into\n        // consideration here (in addition to selectionSet), it's possible for\n        // the same selection set to be flattened more than once, if it appears\n        // in the query with different @client and/or @directive configurations.\n        inheritedContext.clientOnly,\n        inheritedContext.deferred,\n      );\n      if (visitedNode.visited) return;\n      visitedNode.visited = true;\n\n      selectionSet.selections.forEach(selection => {\n        if (!shouldInclude(selection, context.variables)) return;\n\n        let { clientOnly, deferred } = inheritedContext;\n        if (\n          // Since the presence of @client or @defer on this field can only\n          // cause clientOnly or deferred to become true, we can skip the\n          // forEach loop if both clientOnly and deferred are already true.\n          !(clientOnly && deferred) &&\n          isNonEmptyArray(selection.directives)\n        ) {\n          selection.directives.forEach(dir => {\n            const name = dir.name.value;\n            if (name === \"client\") clientOnly = true;\n            if (name === \"defer\") {\n              const args = argumentsObjectFromField(dir, context.variables);\n              // The @defer directive takes an optional args.if boolean\n              // argument, similar to @include(if: boolean). Note that\n              // @defer(if: false) does not make context.deferred false, but\n              // instead behaves as if there was no @defer directive.\n              if (!args || (args as { if?: boolean }).if !== false) {\n                deferred = true;\n              }\n              // TODO In the future, we may want to record args.label using\n              // context.deferred, if a label is specified.\n            }\n          });\n        }\n\n        if (isField(selection)) {\n          const existing = fieldMap.get(selection);\n          if (existing) {\n            // If this field has been visited along another recursive path\n            // before, the final context should have clientOnly or deferred set\n            // to true only if *all* paths have the directive (hence the &&).\n            clientOnly = clientOnly && existing.clientOnly;\n            deferred = deferred && existing.deferred;\n          }\n\n          fieldMap.set(\n            selection,\n            getContextFlavor(context, clientOnly, deferred),\n          );\n\n        } else {\n          const fragment =\n            getFragmentFromSelection(selection, context.fragmentMap);\n\n          if (fragment &&\n              policies.fragmentMatches(\n                fragment, typename, result, context.variables)) {\n\n            flatten(\n              fragment.selectionSet,\n              getContextFlavor(context, clientOnly, deferred),\n            );\n          }\n        }\n      });\n    })(selectionSet, context);\n\n    return fieldMap;\n  }\n\n  private applyMerges<T extends StoreValue>(\n    mergeTree: MergeTree,\n    existing: StoreValue,\n    incoming: T,\n    context: WriteContext,\n    getStorageArgs?: Parameters<EntityStore[\"getStorage\"]>,\n  ): T | Reference {\n    if (mergeTree.map.size && !isReference(incoming)) {\n      const e: StoreObject | Reference | undefined = (\n        // Items in the same position in different arrays are not\n        // necessarily related to each other, so when incoming is an array\n        // we process its elements as if there was no existing data.\n        !isArray(incoming) &&\n        // Likewise, existing must be either a Reference or a StoreObject\n        // in order for its fields to be safe to merge with the fields of\n        // the incoming object.\n        (isReference(existing) || storeValueIsStoreObject(existing))\n      ) ? existing : void 0;\n\n      // This narrowing is implied by mergeTree.map.size > 0 and\n      // !isReference(incoming), though TypeScript understandably cannot\n      // hope to infer this type.\n      const i = incoming as StoreObject | StoreValue[];\n\n      // The options.storage objects provided to read and merge functions\n      // are derived from the identity of the parent object plus a\n      // sequence of storeFieldName strings/numbers identifying the nested\n      // field name path of each field value to be merged.\n      if (e && !getStorageArgs) {\n        getStorageArgs = [isReference(e) ? e.__ref : e];\n      }\n\n      // It's possible that applying merge functions to this subtree will\n      // not change the incoming data, so this variable tracks the fields\n      // that did change, so we can create a new incoming object when (and\n      // only when) at least one incoming field has changed. We use a Map\n      // to preserve the type of numeric keys.\n      let changedFields: Map<string | number, StoreValue> | undefined;\n\n      const getValue = (\n        from: typeof e | typeof i,\n        name: string | number,\n      ): StoreValue => {\n        return isArray(from)\n          ? (typeof name === \"number\" ? from[name] : void 0)\n          : context.store.getFieldValue(from, String(name))\n      };\n\n      mergeTree.map.forEach((childTree, storeFieldName) => {\n        const eVal = getValue(e, storeFieldName);\n        const iVal = getValue(i, storeFieldName);\n        // If we have no incoming data, leave any existing data untouched.\n        if (void 0 === iVal) return;\n        if (getStorageArgs) {\n          getStorageArgs.push(storeFieldName);\n        }\n        const aVal = this.applyMerges(\n          childTree,\n          eVal,\n          iVal,\n          context,\n          getStorageArgs,\n        );\n        if (aVal !== iVal) {\n          changedFields = changedFields || new Map;\n          changedFields.set(storeFieldName, aVal);\n        }\n        if (getStorageArgs) {\n          invariant(getStorageArgs.pop() === storeFieldName);\n        }\n      });\n\n      if (changedFields) {\n        // Shallow clone i so we can add changed fields to it.\n        incoming = (isArray(i) ? i.slice(0) : { ...i }) as T;\n        changedFields.forEach((value, name) => {\n          (incoming as any)[name] = value;\n        });\n      }\n    }\n\n    if (mergeTree.info) {\n      return this.cache.policies.runMergeFunction(\n        existing,\n        incoming,\n        mergeTree.info,\n        context,\n        getStorageArgs && context.store.getStorage(...getStorageArgs),\n      );\n    }\n\n    return incoming;\n  }\n}\n\nconst emptyMergeTreePool: MergeTree[] = [];\n\nfunction getChildMergeTree(\n  { map }: MergeTree,\n  name: string | number,\n): MergeTree {\n  if (!map.has(name)) {\n    map.set(name, emptyMergeTreePool.pop() || { map: new Map });\n  }\n  return map.get(name)!;\n}\n\nfunction mergeMergeTrees(\n  left: MergeTree | undefined,\n  right: MergeTree | undefined,\n): MergeTree {\n  if (left === right || !right || mergeTreeIsEmpty(right)) return left!;\n  if (!left || mergeTreeIsEmpty(left)) return right;\n\n  const info = left.info && right.info ? {\n    ...left.info,\n    ...right.info,\n  } : left.info || right.info;\n\n  const needToMergeMaps = left.map.size && right.map.size;\n  const map = needToMergeMaps ? new Map :\n    left.map.size ? left.map : right.map;\n\n  const merged = { info, map };\n\n  if (needToMergeMaps) {\n    const remainingRightKeys = new Set(right.map.keys());\n\n    left.map.forEach((leftTree, key) => {\n      merged.map.set(\n        key,\n        mergeMergeTrees(leftTree, right.map.get(key)),\n      );\n      remainingRightKeys.delete(key);\n    });\n\n    remainingRightKeys.forEach(key => {\n      merged.map.set(\n        key,\n        mergeMergeTrees(\n          right.map.get(key),\n          left.map.get(key),\n        ),\n      );\n    });\n  }\n\n  return merged;\n}\n\nfunction mergeTreeIsEmpty(tree: MergeTree | undefined): boolean {\n  return !tree || !(tree.info || tree.map.size);\n}\n\nfunction maybeRecycleChildMergeTree(\n  { map }: MergeTree,\n  name: string | number,\n) {\n  const childTree = map.get(name);\n  if (childTree && mergeTreeIsEmpty(childTree)) {\n    emptyMergeTreePool.push(childTree);\n    map.delete(name);\n  }\n}\n\nconst warnings = new Set<string>();\n\n// Note that this function is unused in production, and thus should be\n// pruned by any well-configured minifier.\nfunction warnAboutDataLoss(\n  existingRef: Reference,\n  incomingObj: StoreObject,\n  storeFieldName: string,\n  store: NormalizedCache,\n) {\n  const getChild = (objOrRef: StoreObject | Reference): StoreObject | false => {\n    const child = store.getFieldValue<StoreObject>(objOrRef, storeFieldName);\n    return typeof child === \"object\" && child;\n  };\n\n  const existing = getChild(existingRef);\n  if (!existing) return;\n\n  const incoming = getChild(incomingObj);\n  if (!incoming) return;\n\n  // It's always safe to replace a reference, since it refers to data\n  // safely stored elsewhere.\n  if (isReference(existing)) return;\n\n  // If the values are structurally equivalent, we do not need to worry\n  // about incoming replacing existing.\n  if (equal(existing, incoming)) return;\n\n  // If we're replacing every key of the existing object, then the\n  // existing data would be overwritten even if the objects were\n  // normalized, so warning would not be helpful here.\n  if (Object.keys(existing).every(\n    key => store.getFieldValue(incoming, key) !== void 0)) {\n    return;\n  }\n\n  const parentType =\n    store.getFieldValue<string>(existingRef, \"__typename\") ||\n    store.getFieldValue<string>(incomingObj, \"__typename\");\n  const fieldName = fieldNameFromStoreName(storeFieldName);\n  const typeDotName = `${parentType}.${fieldName}`;\n  // Avoid warning more than once for the same type and field name.\n  if (warnings.has(typeDotName)) return;\n  warnings.add(typeDotName);\n\n  const childTypenames: string[] = [];\n  // Arrays do not have __typename fields, and always need a custom merge\n  // function, even if their elements are normalized entities.\n  if (!isArray(existing) &&\n      !isArray(incoming)) {\n    [existing, incoming].forEach(child => {\n      const typename = store.getFieldValue(child, \"__typename\");\n      if (typeof typename === \"string\" &&\n          !childTypenames.includes(typename)) {\n        childTypenames.push(typename);\n      }\n    });\n  }\n\n  invariant.warn(\n`Cache data may be lost when replacing the ${fieldName} field of a ${parentType} object.\n\nTo address this problem (which is not a bug in Apollo Client), ${\n  childTypenames.length\n    ? \"either ensure all objects of type \" +\n        childTypenames.join(\" and \") + \" have an ID or a custom merge function, or \"\n    : \"\"\n}define a custom merge function for the ${\n  typeDotName\n} field, so InMemoryCache can safely merge these objects:\n\n  existing: ${JSON.stringify(existing).slice(0, 1000)}\n  incoming: ${JSON.stringify(incoming).slice(0, 1000)}\n\nFor more information about these options, please refer to the documentation:\n\n  * Ensuring entity objects have IDs: https://go.apollo.dev/c/generating-unique-identifiers\n  * Defining custom merge functions: https://go.apollo.dev/c/merging-non-normalized-objects\n`);\n}\n","import { invariant } from '../../utilities/globals';\n\n// Make builtins like Map and Set safe to use with non-extensible objects.\nimport './fixPolyfills';\n\nimport { DocumentNode } from 'graphql';\nimport { OptimisticWrapperFunction, wrap } from 'optimism';\nimport { equal } from '@wry/equality';\n\nimport { ApolloCache } from '../core/cache';\nimport { Cache } from '../core/types/Cache';\nimport { MissingFieldError } from '../core/types/common';\nimport {\n  addTypenameToDocument,\n  StoreObject,\n  Reference,\n  isReference,\n} from '../../utilities';\nimport { InMemoryCacheConfig, NormalizedCacheObject } from './types';\nimport { StoreReader } from './readFromStore';\nimport { StoreWriter } from './writeToStore';\nimport { EntityStore, supportsResultCaching } from './entityStore';\nimport { makeVar, forgetCache, recallCache } from './reactiveVars';\nimport { Policies } from './policies';\nimport { hasOwn, normalizeConfig, shouldCanonizeResults } from './helpers';\nimport { canonicalStringify } from './object-canon';\n\ntype BroadcastOptions = Pick<\n  Cache.BatchOptions<InMemoryCache>,\n  | \"optimistic\"\n  | \"onWatchUpdated\"\n>\n\nexport class InMemoryCache extends ApolloCache<NormalizedCacheObject> {\n  private data: EntityStore;\n  private optimisticData: EntityStore;\n\n  protected config: InMemoryCacheConfig;\n  private watches = new Set<Cache.WatchOptions>();\n  private addTypename: boolean;\n\n  private typenameDocumentCache = new Map<DocumentNode, DocumentNode>();\n  private storeReader: StoreReader;\n  private storeWriter: StoreWriter;\n\n  private maybeBroadcastWatch: OptimisticWrapperFunction<\n    [Cache.WatchOptions, BroadcastOptions?],\n    any,\n    [Cache.WatchOptions]>;\n\n  // Dynamically imported code can augment existing typePolicies or\n  // possibleTypes by calling cache.policies.addTypePolicies or\n  // cache.policies.addPossibletypes.\n  public readonly policies: Policies;\n\n  public readonly makeVar = makeVar;\n\n  constructor(config: InMemoryCacheConfig = {}) {\n    super();\n    this.config = normalizeConfig(config);\n    this.addTypename = !!this.config.addTypename;\n\n    this.policies = new Policies({\n      cache: this,\n      dataIdFromObject: this.config.dataIdFromObject,\n      possibleTypes: this.config.possibleTypes,\n      typePolicies: this.config.typePolicies,\n    });\n\n    this.init();\n  }\n\n  private init() {\n    // Passing { resultCaching: false } in the InMemoryCache constructor options\n    // will completely disable dependency tracking, which will improve memory\n    // usage but worsen the performance of repeated reads.\n    const rootStore = this.data = new EntityStore.Root({\n      policies: this.policies,\n      resultCaching: this.config.resultCaching,\n    });\n\n    // When no optimistic writes are currently active, cache.optimisticData ===\n    // cache.data, so there are no additional layers on top of the actual data.\n    // When an optimistic update happens, this.optimisticData will become a\n    // linked list of EntityStore Layer objects that terminates with the\n    // original this.data cache object.\n    this.optimisticData = rootStore.stump;\n\n    this.resetResultCache();\n  }\n\n  private resetResultCache(resetResultIdentities?: boolean) {\n    const previousReader = this.storeReader;\n\n    // The StoreWriter is mostly stateless and so doesn't really need to be\n    // reset, but it does need to have its writer.storeReader reference updated,\n    // so it's simpler to update this.storeWriter as well.\n    this.storeWriter = new StoreWriter(\n      this,\n      this.storeReader = new StoreReader({\n        cache: this,\n        addTypename: this.addTypename,\n        resultCacheMaxSize: this.config.resultCacheMaxSize,\n        canonizeResults: shouldCanonizeResults(this.config),\n        canon: resetResultIdentities\n          ? void 0\n          : previousReader && previousReader.canon,\n      }),\n    );\n\n    this.maybeBroadcastWatch = wrap((\n      c: Cache.WatchOptions,\n      options?: BroadcastOptions,\n    ) => {\n      return this.broadcastWatch(c, options);\n    }, {\n      max: this.config.resultCacheMaxSize,\n      makeCacheKey: (c: Cache.WatchOptions) => {\n        // Return a cache key (thus enabling result caching) only if we're\n        // currently using a data store that can track cache dependencies.\n        const store = c.optimistic ? this.optimisticData : this.data;\n        if (supportsResultCaching(store)) {\n          const { optimistic, rootId, variables } = c;\n          return store.makeCacheKey(\n            c.query,\n            // Different watches can have the same query, optimistic\n            // status, rootId, and variables, but if their callbacks are\n            // different, the (identical) result needs to be delivered to\n            // each distinct callback. The easiest way to achieve that\n            // separation is to include c.callback in the cache key for\n            // maybeBroadcastWatch calls. See issue #5733.\n            c.callback,\n            canonicalStringify({ optimistic, rootId, variables }),\n          );\n        }\n      }\n    });\n\n    // Since we have thrown away all the cached functions that depend on the\n    // CacheGroup dependencies maintained by EntityStore, we should also reset\n    // all CacheGroup dependency information.\n    new Set([\n      this.data.group,\n      this.optimisticData.group,\n    ]).forEach(group => group.resetCaching());\n  }\n\n  public restore(data: NormalizedCacheObject): this {\n    this.init();\n    // Since calling this.init() discards/replaces the entire StoreReader, along\n    // with the result caches it maintains, this.data.replace(data) won't have\n    // to bother deleting the old data.\n    if (data) this.data.replace(data);\n    return this;\n  }\n\n  public extract(optimistic: boolean = false): NormalizedCacheObject {\n    return (optimistic ? this.optimisticData : this.data).extract();\n  }\n\n  public read<T>(options: Cache.ReadOptions): T | null {\n    const {\n      // Since read returns data or null, without any additional metadata\n      // about whether/where there might have been missing fields, the\n      // default behavior cannot be returnPartialData = true (like it is\n      // for the diff method), since defaulting to true would violate the\n      // integrity of the T in the return type. However, partial data may\n      // be useful in some cases, so returnPartialData:true may be\n      // specified explicitly.\n      returnPartialData = false,\n    } = options;\n    try {\n      return this.storeReader.diffQueryAgainstStore<T>({\n        ...options,\n        store: options.optimistic ? this.optimisticData : this.data,\n        config: this.config,\n        returnPartialData,\n      }).result || null;\n    } catch (e) {\n      if (e instanceof MissingFieldError) {\n        // Swallow MissingFieldError and return null, so callers do not\n        // need to worry about catching \"normal\" exceptions resulting from\n        // incomplete cache data. Unexpected errors will be re-thrown. If\n        // you need more information about which fields were missing, use\n        // cache.diff instead, and examine diffResult.missing.\n        return null;\n      }\n      throw e;\n    }\n  }\n\n  public write(options: Cache.WriteOptions): Reference | undefined {\n    try {\n      ++this.txCount;\n      return this.storeWriter.writeToStore(this.data, options);\n    } finally {\n      if (!--this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  }\n\n  public modify(options: Cache.ModifyOptions): boolean {\n    if (hasOwn.call(options, \"id\") && !options.id) {\n      // To my knowledge, TypeScript does not currently provide a way to\n      // enforce that an optional property?:type must *not* be undefined\n      // when present. That ability would be useful here, because we want\n      // options.id to default to ROOT_QUERY only when no options.id was\n      // provided. If the caller attempts to pass options.id with a\n      // falsy/undefined value (perhaps because cache.identify failed), we\n      // should not assume the goal was to modify the ROOT_QUERY object.\n      // We could throw, but it seems natural to return false to indicate\n      // that nothing was modified.\n      return false;\n    }\n    const store = options.optimistic // Defaults to false.\n      ? this.optimisticData\n      : this.data;\n    try {\n      ++this.txCount;\n      return store.modify(options.id || \"ROOT_QUERY\", options.fields);\n    } finally {\n      if (!--this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  }\n\n  public diff<TData, TVariables = any>(\n    options: Cache.DiffOptions<TData, TVariables>,\n  ): Cache.DiffResult<TData> {\n    return this.storeReader.diffQueryAgainstStore({\n      ...options,\n      store: options.optimistic ? this.optimisticData : this.data,\n      rootId: options.id || \"ROOT_QUERY\",\n      config: this.config,\n    });\n  }\n\n  public watch<TData = any, TVariables = any>(\n    watch: Cache.WatchOptions<TData, TVariables>,\n  ): () => void {\n    if (!this.watches.size) {\n      // In case we previously called forgetCache(this) because\n      // this.watches became empty (see below), reattach this cache to any\n      // reactive variables on which it previously depended. It might seem\n      // paradoxical that we're able to recall something we supposedly\n      // forgot, but the point of calling forgetCache(this) is to silence\n      // useless broadcasts while this.watches is empty, and to allow the\n      // cache to be garbage collected. If, however, we manage to call\n      // recallCache(this) here, this cache object must not have been\n      // garbage collected yet, and should resume receiving updates from\n      // reactive variables, now that it has a watcher to notify.\n      recallCache(this);\n    }\n    this.watches.add(watch);\n    if (watch.immediate) {\n      this.maybeBroadcastWatch(watch);\n    }\n    return () => {\n      // Once we remove the last watch from this.watches, cache.broadcastWatches\n      // no longer does anything, so we preemptively tell the reactive variable\n      // system to exclude this cache from future broadcasts.\n      if (this.watches.delete(watch) && !this.watches.size) {\n        forgetCache(this);\n      }\n      // Remove this watch from the LRU cache managed by the\n      // maybeBroadcastWatch OptimisticWrapperFunction, to prevent memory\n      // leaks involving the closure of watch.callback.\n      this.maybeBroadcastWatch.forget(watch);\n    };\n  }\n\n  public gc(options?: {\n    // If true, also free non-essential result cache memory by bulk-releasing\n    // this.{store{Reader,Writer},maybeBroadcastWatch}. Defaults to false.\n    resetResultCache?: boolean;\n    // If resetResultCache is true, this.storeReader.canon will be preserved by\n    // default, but can also be discarded by passing resetResultIdentities:true.\n    // Defaults to false.\n    resetResultIdentities?: boolean;\n  }) {\n    canonicalStringify.reset();\n    const ids = this.optimisticData.gc();\n    if (options && !this.txCount) {\n      if (options.resetResultCache) {\n        this.resetResultCache(options.resetResultIdentities);\n      } else if (options.resetResultIdentities) {\n        this.storeReader.resetCanon();\n      }\n    }\n    return ids;\n  }\n\n  // Call this method to ensure the given root ID remains in the cache after\n  // garbage collection, along with its transitive child entities. Note that\n  // the cache automatically retains all directly written entities. By default,\n  // the retainment persists after optimistic updates are removed. Pass true\n  // for the optimistic argument if you would prefer for the retainment to be\n  // discarded when the top-most optimistic layer is removed. Returns the\n  // resulting (non-negative) retainment count.\n  public retain(rootId: string, optimistic?: boolean): number {\n    return (optimistic ? this.optimisticData : this.data).retain(rootId);\n  }\n\n  // Call this method to undo the effect of the retain method, above. Once the\n  // retainment count falls to zero, the given ID will no longer be preserved\n  // during garbage collection, though it may still be preserved by other safe\n  // entities that refer to it. Returns the resulting (non-negative) retainment\n  // count, in case that's useful.\n  public release(rootId: string, optimistic?: boolean): number {\n    return (optimistic ? this.optimisticData : this.data).release(rootId);\n  }\n\n  // Returns the canonical ID for a given StoreObject, obeying typePolicies\n  // and keyFields (and dataIdFromObject, if you still use that). At minimum,\n  // the object must contain a __typename and any primary key fields required\n  // to identify entities of that type. If you pass a query result object, be\n  // sure that none of the primary key fields have been renamed by aliasing.\n  // If you pass a Reference object, its __ref ID string will be returned.\n  public identify(object: StoreObject | Reference): string | undefined {\n    if (isReference(object)) return object.__ref;\n    try {\n      return this.policies.identify(object)[0];\n    } catch (e) {\n      invariant.warn(e);\n    }\n  }\n\n  public evict(options: Cache.EvictOptions): boolean {\n    if (!options.id) {\n      if (hasOwn.call(options, \"id\")) {\n        // See comment in modify method about why we return false when\n        // options.id exists but is falsy/undefined.\n        return false;\n      }\n      options = { ...options, id: \"ROOT_QUERY\" };\n    }\n    try {\n      // It's unlikely that the eviction will end up invoking any other\n      // cache update operations while it's running, but {in,de}crementing\n      // this.txCount still seems like a good idea, for uniformity with\n      // the other update methods.\n      ++this.txCount;\n      // Pass this.data as a limit on the depth of the eviction, so evictions\n      // during optimistic updates (when this.data is temporarily set equal to\n      // this.optimisticData) do not escape their optimistic Layer.\n      return this.optimisticData.evict(options, this.data);\n    } finally {\n      if (!--this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  }\n\n  public reset(options?: Cache.ResetOptions): Promise<void> {\n    this.init();\n\n    canonicalStringify.reset();\n\n    if (options && options.discardWatches) {\n      // Similar to what happens in the unsubscribe function returned by\n      // cache.watch, applied to all current watches.\n      this.watches.forEach(watch => this.maybeBroadcastWatch.forget(watch));\n      this.watches.clear();\n      forgetCache(this);\n    } else {\n      // Calling this.init() above unblocks all maybeBroadcastWatch caching, so\n      // this.broadcastWatches() triggers a broadcast to every current watcher\n      // (letting them know their data is now missing). This default behavior is\n      // convenient because it means the watches do not have to be manually\n      // reestablished after resetting the cache. To prevent this broadcast and\n      // cancel all watches, pass true for options.discardWatches.\n      this.broadcastWatches();\n    }\n\n    return Promise.resolve();\n  }\n\n  public removeOptimistic(idToRemove: string) {\n    const newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n    if (newOptimisticData !== this.optimisticData) {\n      this.optimisticData = newOptimisticData;\n      this.broadcastWatches();\n    }\n  }\n\n  private txCount = 0;\n\n  public batch<TUpdateResult>(\n    options: Cache.BatchOptions<InMemoryCache, TUpdateResult>,\n  ): TUpdateResult {\n    const {\n      update,\n      optimistic = true,\n      removeOptimistic,\n      onWatchUpdated,\n    } = options;\n\n    let updateResult: TUpdateResult;\n    const perform = (layer?: EntityStore): TUpdateResult => {\n      const { data, optimisticData } = this;\n      ++this.txCount;\n      if (layer) {\n        this.data = this.optimisticData = layer;\n      }\n      try {\n        return updateResult = update(this);\n      } finally {\n        --this.txCount;\n        this.data = data;\n        this.optimisticData = optimisticData;\n      }\n    };\n\n    const alreadyDirty = new Set<Cache.WatchOptions>();\n\n    if (onWatchUpdated && !this.txCount) {\n      // If an options.onWatchUpdated callback is provided, we want to call it\n      // with only the Cache.WatchOptions objects affected by options.update,\n      // but there might be dirty watchers already waiting to be broadcast that\n      // have nothing to do with the update. To prevent including those watchers\n      // in the post-update broadcast, we perform this initial broadcast to\n      // collect the dirty watchers, so we can re-dirty them later, after the\n      // post-update broadcast, allowing them to receive their pending\n      // broadcasts the next time broadcastWatches is called, just as they would\n      // if we never called cache.batch.\n      this.broadcastWatches({\n        ...options,\n        onWatchUpdated(watch) {\n          alreadyDirty.add(watch);\n          return false;\n        },\n      });\n    }\n\n    if (typeof optimistic === 'string') {\n      // Note that there can be multiple layers with the same optimistic ID.\n      // When removeOptimistic(id) is called for that id, all matching layers\n      // will be removed, and the remaining layers will be reapplied.\n      this.optimisticData = this.optimisticData.addLayer(optimistic, perform);\n    } else if (optimistic === false) {\n      // Ensure both this.data and this.optimisticData refer to the root\n      // (non-optimistic) layer of the cache during the update. Note that\n      // this.data could be a Layer if we are currently executing an optimistic\n      // update function, but otherwise will always be an EntityStore.Root\n      // instance.\n      perform(this.data);\n    } else {\n      // Otherwise, leave this.data and this.optimisticData unchanged and run\n      // the update with broadcast batching.\n      perform();\n    }\n\n    if (typeof removeOptimistic === \"string\") {\n      this.optimisticData = this.optimisticData.removeLayer(removeOptimistic);\n    }\n\n    // Note: if this.txCount > 0, then alreadyDirty.size === 0, so this code\n    // takes the else branch and calls this.broadcastWatches(options), which\n    // does nothing when this.txCount > 0.\n    if (onWatchUpdated && alreadyDirty.size) {\n      this.broadcastWatches({\n        ...options,\n        onWatchUpdated(watch, diff) {\n          const result = onWatchUpdated.call(this, watch, diff);\n          if (result !== false) {\n            // Since onWatchUpdated did not return false, this diff is\n            // about to be broadcast to watch.callback, so we don't need\n            // to re-dirty it with the other alreadyDirty watches below.\n            alreadyDirty.delete(watch);\n          }\n          return result;\n        }\n      });\n      // Silently re-dirty any watches that were already dirty before the update\n      // was performed, and were not broadcast just now.\n      if (alreadyDirty.size) {\n        alreadyDirty.forEach(watch => this.maybeBroadcastWatch.dirty(watch));\n      }\n    } else {\n      // If alreadyDirty is empty or we don't have an onWatchUpdated\n      // function, we don't need to go to the trouble of wrapping\n      // options.onWatchUpdated.\n      this.broadcastWatches(options);\n    }\n\n    return updateResult!;\n  }\n\n  public performTransaction(\n    update: (cache: InMemoryCache) => any,\n    optimisticId?: string | null,\n  ) {\n    return this.batch({\n      update,\n      optimistic: optimisticId || (optimisticId !== null),\n    });\n  }\n\n  public transformDocument(document: DocumentNode): DocumentNode {\n    if (this.addTypename) {\n      let result = this.typenameDocumentCache.get(document);\n      if (!result) {\n        result = addTypenameToDocument(document);\n        this.typenameDocumentCache.set(document, result);\n        // If someone calls transformDocument and then mistakenly passes the\n        // result back into an API that also calls transformDocument, make sure\n        // we don't keep creating new query documents.\n        this.typenameDocumentCache.set(result, result);\n      }\n      return result;\n    }\n    return document;\n  }\n\n  protected broadcastWatches(options?: BroadcastOptions) {\n    if (!this.txCount) {\n      this.watches.forEach(c => this.maybeBroadcastWatch(c, options));\n    }\n  }\n\n  // This method is wrapped by maybeBroadcastWatch, which is called by\n  // broadcastWatches, so that we compute and broadcast results only when\n  // the data that would be broadcast might have changed. It would be\n  // simpler to check for changes after recomputing a result but before\n  // broadcasting it, but this wrapping approach allows us to skip both\n  // the recomputation and the broadcast, in most cases.\n  private broadcastWatch(\n    c: Cache.WatchOptions,\n    options?: BroadcastOptions,\n  ) {\n    const { lastDiff } = c;\n\n    // Both WatchOptions and DiffOptions extend ReadOptions, and DiffOptions\n    // currently requires no additional properties, so we can use c (a\n    // WatchOptions object) as DiffOptions, without having to allocate a new\n    // object, and without having to enumerate the relevant properties (query,\n    // variables, etc.) explicitly. There will be some additional properties\n    // (lastDiff, callback, etc.), but cache.diff ignores them.\n    const diff = this.diff<any>(c);\n\n    if (options) {\n      if (c.optimistic &&\n          typeof options.optimistic === \"string\") {\n        diff.fromOptimisticTransaction = true;\n      }\n\n      if (options.onWatchUpdated &&\n          options.onWatchUpdated.call(this, c, diff, lastDiff) === false) {\n        // Returning false from the onWatchUpdated callback will prevent\n        // calling c.callback(diff) for this watcher.\n        return;\n      }\n    }\n\n    if (!lastDiff || !equal(lastDiff.result, diff.result)) {\n      c.callback(c.lastDiff = diff, lastDiff);\n    }\n  }\n}\n","import '../utilities/globals';\n\nimport { GraphQLError } from 'graphql';\n\nimport { isNonEmptyArray } from '../utilities';\nimport { ServerParseError } from '../link/http';\nimport { ServerError } from '../link/utils';\n\nexport function isApolloError(err: Error): err is ApolloError {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\n// Sets the error message on this error according to the\n// the GraphQL and network errors that are present.\n// If the error message has already been set through the\n// constructor or otherwise, this function is a nop.\nconst generateErrorMessage = (err: ApolloError) => {\n  let message = '';\n  // If we have GraphQL errors present, add that to the error message.\n  if (isNonEmptyArray(err.graphQLErrors) || isNonEmptyArray(err.clientErrors)) {\n    const errors = ((err.graphQLErrors || []) as readonly Error[])\n      .concat(err.clientErrors || []);\n    errors.forEach((error: Error) => {\n      const errorMessage = error\n        ? error.message\n        : 'Error message not found.';\n      message += `${errorMessage}\\n`;\n    });\n  }\n\n  if (err.networkError) {\n    message += `${err.networkError.message}\\n`;\n  }\n\n  // strip newline from the end of the message\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nexport type GraphQLErrors = ReadonlyArray<GraphQLError>;\n\nexport type NetworkError = Error | ServerParseError | ServerError | null;\n\nexport class ApolloError extends Error {\n  public message: string;\n  public graphQLErrors: GraphQLErrors;\n  public clientErrors: ReadonlyArray<Error>;\n  public networkError: Error | ServerParseError | ServerError | null;\n\n  // An object that can be used to provide some additional information\n  // about an error, e.g. specifying the type of error this is. Used\n  // internally within Apollo Client.\n  public extraInfo: any;\n\n  // Constructs an instance of ApolloError given a GraphQLError\n  // or a network error. Note that one of these has to be a valid\n  // value or the constructed error will be meaningless.\n  constructor({\n    graphQLErrors,\n    clientErrors,\n    networkError,\n    errorMessage,\n    extraInfo,\n  }: {\n    graphQLErrors?: ReadonlyArray<GraphQLError>;\n    clientErrors?: ReadonlyArray<Error>;\n    networkError?: Error | ServerParseError | ServerError | null;\n    errorMessage?: string;\n    extraInfo?: any;\n  }) {\n    super(errorMessage);\n    this.graphQLErrors = graphQLErrors || [];\n    this.clientErrors = clientErrors || [];\n    this.networkError = networkError || null;\n    this.message = errorMessage || generateErrorMessage(this);\n    this.extraInfo = extraInfo;\n\n    // We're not using `Object.setPrototypeOf` here as it isn't fully\n    // supported on Android (see issue #3236).\n    (this as any).__proto__ = ApolloError.prototype;\n  }\n}\n","/**\n * The current status of a query’s execution in our system.\n */\nexport enum NetworkStatus {\n  /**\n   * The query has never been run before and the query is now currently running. A query will still\n   * have this network status even if a partial data result was returned from the cache, but a\n   * query was dispatched anyway.\n   */\n  loading = 1,\n\n  /**\n   * If `setVariables` was called and a query was fired because of that then the network status\n   * will be `setVariables` until the result of that query comes back.\n   */\n  setVariables = 2,\n\n  /**\n   * Indicates that `fetchMore` was called on this query and that the query created is currently in\n   * flight.\n   */\n  fetchMore = 3,\n\n  /**\n   * Similar to the `setVariables` network status. It means that `refetch` was called on a query\n   * and the refetch request is currently in flight.\n   */\n  refetch = 4,\n\n  /**\n   * Indicates that a polling query is currently in flight. So for example if you are polling a\n   * query every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\n   * a poll request has been sent but not resolved.\n   */\n  poll = 6,\n\n  /**\n   * No request is in flight for this query, and no errors happened. Everything is OK.\n   */\n  ready = 7,\n\n  /**\n   * No request is in flight for this query, but one or more errors were detected.\n   */\n  error = 8,\n}\n\n/**\n * Returns true if there is currently a network request in flight according to a given network\n * status.\n */\nexport function isNetworkRequestInFlight(\n  networkStatus?: NetworkStatus,\n): boolean {\n  return networkStatus ? networkStatus < 7 : false;\n}\n","import { invariant } from '../utilities/globals';\n\nimport { equal } from '@wry/equality';\n\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport {\n  Concast,\n  compact,\n  cloneDeep,\n  getOperationDefinition,\n  Observable,\n  Observer,\n  ObservableSubscription,\n  iterateObserversSafely,\n  isNonEmptyArray,\n  fixObservableSubclass,\n  getQueryDefinition,\n} from '../utilities';\nimport { ApolloError } from '../errors';\nimport { QueryManager } from './QueryManager';\nimport { ApolloQueryResult, OperationVariables } from './types';\nimport {\n  WatchQueryOptions,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n  WatchQueryFetchPolicy,\n} from './watchQueryOptions';\nimport { QueryInfo } from './QueryInfo';\nimport { MissingFieldError } from '../cache';\nimport { MissingTree } from '../cache/core/types/common';\n\nconst {\n  assign,\n  hasOwnProperty,\n} = Object;\n\nexport interface FetchMoreOptions<\n  TData = any,\n  TVariables = OperationVariables\n> {\n  updateQuery?: (\n    previousQueryResult: TData,\n    options: {\n      fetchMoreResult?: TData;\n      variables?: TVariables;\n    },\n  ) => TData;\n}\n\nexport interface UpdateQueryOptions<TVariables> {\n  variables?: TVariables;\n}\n\nlet warnedAboutUpdateQuery = false;\n\ninterface Last<TData, TVariables> {\n  result: ApolloQueryResult<TData>;\n  variables?: TVariables;\n  error?: ApolloError;\n}\n\nexport class ObservableQuery<\n  TData = any,\n  TVariables = OperationVariables\n> extends Observable<ApolloQueryResult<TData>> {\n  public readonly options: WatchQueryOptions<TVariables, TData>;\n  public readonly queryId: string;\n  public readonly queryName?: string;\n\n  // Computed shorthand for this.options.variables, preserved for\n  // backwards compatibility.\n  public get variables(): TVariables | undefined {\n    return this.options.variables;\n  }\n\n  // Original value of this.options.fetchPolicy (defaulting to \"cache-first\"),\n  // from whenever the ObservableQuery was first created.\n  private initialFetchPolicy: WatchQueryFetchPolicy;\n\n  private isTornDown: boolean;\n  private queryManager: QueryManager<any>;\n  private observers = new Set<Observer<ApolloQueryResult<TData>>>();\n  private subscriptions = new Set<ObservableSubscription>();\n\n  private last?: Last<TData, TVariables>;\n\n  private queryInfo: QueryInfo;\n\n  // When this.concast is defined, this.observer is the Observer currently\n  // subscribed to that Concast.\n  private concast?: Concast<ApolloQueryResult<TData>>;\n  private observer?: Observer<ApolloQueryResult<TData>>;\n\n  private pollingInfo?: {\n    interval: number;\n    timeout: ReturnType<typeof setTimeout>;\n  };\n\n  constructor({\n    queryManager,\n    queryInfo,\n    options,\n  }: {\n    queryManager: QueryManager<any>;\n    queryInfo: QueryInfo;\n    options: WatchQueryOptions<TVariables, TData>;\n  }) {\n    super((observer: Observer<ApolloQueryResult<TData>>) => {\n      // Zen Observable has its own error function, so in order to log correctly\n      // we need to provide a custom error callback.\n      try {\n        var subObserver = (observer as any)._subscription._observer;\n        if (subObserver && !subObserver.error) {\n          subObserver.error = defaultSubscriptionObserverErrorCallback;\n        }\n      } catch {}\n\n      const first = !this.observers.size;\n      this.observers.add(observer);\n\n      // Deliver most recent error or result.\n      const last = this.last;\n      if (last && last.error) {\n        observer.error && observer.error(last.error);\n      } else if (last && last.result) {\n        observer.next && observer.next(last.result);\n      }\n\n      // Initiate observation of this query if it hasn't been reported to\n      // the QueryManager yet.\n      if (first) {\n        // Blindly catching here prevents unhandled promise rejections,\n        // and is safe because the ObservableQuery handles this error with\n        // this.observer.error, so we're not just swallowing the error by\n        // ignoring it here.\n        this.reobserve().catch(() => {});\n      }\n\n      return () => {\n        if (this.observers.delete(observer) && !this.observers.size) {\n          this.tearDownQuery();\n        }\n      };\n    });\n\n    // active state\n    this.isTornDown = false;\n\n    // query information\n    this.options = options;\n    this.queryId = queryInfo.queryId || queryManager.generateQueryId();\n\n    const opDef = getOperationDefinition(options.query);\n    this.queryName = opDef && opDef.name && opDef.name.value;\n\n    this.initialFetchPolicy = options.fetchPolicy || \"cache-first\";\n\n    // related classes\n    this.queryManager = queryManager;\n    this.queryInfo = queryInfo;\n  }\n\n  public result(): Promise<ApolloQueryResult<TData>> {\n    return new Promise((resolve, reject) => {\n      // TODO: this code doesn’t actually make sense insofar as the observer\n      // will never exist in this.observers due how zen-observable wraps observables.\n      // https://github.com/zenparsing/zen-observable/blob/master/src/Observable.js#L169\n      const observer: Observer<ApolloQueryResult<TData>> = {\n        next: (result: ApolloQueryResult<TData>) => {\n          resolve(result);\n\n          // Stop the query within the QueryManager if we can before\n          // this function returns.\n          //\n          // We do this in order to prevent observers piling up within\n          // the QueryManager. Notice that we only fully unsubscribe\n          // from the subscription in a setTimeout(..., 0)  call. This call can\n          // actually be handled by the browser at a much later time. If queries\n          // are fired in the meantime, observers that should have been removed\n          // from the QueryManager will continue to fire, causing an unnecessary\n          // performance hit.\n          this.observers.delete(observer);\n          if (!this.observers.size) {\n            this.queryManager.removeQuery(this.queryId);\n          }\n\n          setTimeout(() => {\n            subscription.unsubscribe();\n          }, 0);\n        },\n        error: reject,\n      };\n      const subscription = this.subscribe(observer);\n    });\n  }\n\n  public getCurrentResult(saveAsLastResult = true): ApolloQueryResult<TData> {\n    // Use the last result as long as the variables match this.variables.\n    const lastResult = this.getLastResult(true);\n\n    const networkStatus =\n      this.queryInfo.networkStatus ||\n      (lastResult && lastResult.networkStatus) ||\n      NetworkStatus.ready;\n\n    const result = {\n      ...lastResult,\n      loading: isNetworkRequestInFlight(networkStatus),\n      networkStatus,\n    } as ApolloQueryResult<TData>;\n\n    const { fetchPolicy = \"cache-first\" } = this.options;\n    if (\n      // These fetch policies should never deliver data from the cache, unless\n      // redelivering a previously delivered result.\n      fetchPolicy === 'network-only' ||\n      fetchPolicy === 'no-cache' ||\n      fetchPolicy === 'standby' ||\n      // If this.options.query has @client(always: true) fields, we cannot\n      // trust diff.result, since it was read from the cache without running\n      // local resolvers (and it's too late to run resolvers now, since we must\n      // return a result synchronously).\n      this.queryManager.transform(this.options.query).hasForcedResolvers\n    ) {\n      // Fall through.\n    } else {\n      const diff = this.queryInfo.getDiff();\n\n      if (diff.complete || this.options.returnPartialData) {\n        result.data = diff.result;\n      }\n\n      if (equal(result.data, {})) {\n        result.data = void 0 as any;\n      }\n\n      if (diff.complete) {\n        // Similar to setting result.partial to false, but taking advantage of the\n        // falsiness of missing fields.\n        delete result.partial;\n\n        // If the diff is complete, and we're using a FetchPolicy that\n        // terminates after a complete cache read, we can assume the next result\n        // we receive will have NetworkStatus.ready and !loading.\n        if (\n          diff.complete &&\n          result.networkStatus === NetworkStatus.loading &&\n          (fetchPolicy === 'cache-first' ||\n          fetchPolicy === 'cache-only')\n        ) {\n          result.networkStatus = NetworkStatus.ready;\n          result.loading = false;\n        }\n      } else {\n        result.partial = true;\n      }\n\n      if (\n        __DEV__ &&\n        !diff.complete &&\n        !this.options.partialRefetch &&\n        !result.loading &&\n        !result.data &&\n        !result.error\n      ) {\n        logMissingFieldErrors(diff.missing);\n      }\n    }\n\n    if (saveAsLastResult) {\n      this.updateLastResult(result);\n    }\n\n    return result;\n  }\n\n  // Compares newResult to the snapshot we took of this.lastResult when it was\n  // first received.\n  public isDifferentFromLastResult(newResult: ApolloQueryResult<TData>) {\n    return !this.last || !equal(this.last.result, newResult);\n  }\n\n  private getLast<K extends keyof Last<TData, TVariables>>(\n    key: K,\n    variablesMustMatch?: boolean,\n  ) {\n    const last = this.last;\n    if (\n      last &&\n      last[key] &&\n      (!variablesMustMatch || equal(last.variables, this.variables))\n    ) {\n      return last[key];\n    }\n  }\n\n  public getLastResult(variablesMustMatch?: boolean): ApolloQueryResult<TData> | undefined {\n    return this.getLast(\"result\", variablesMustMatch);\n  }\n\n  public getLastError(variablesMustMatch?: boolean): ApolloError | undefined {\n    return this.getLast(\"error\", variablesMustMatch);\n  }\n\n  public resetLastResults(): void {\n    delete this.last;\n    this.isTornDown = false;\n  }\n\n  public resetQueryStoreErrors() {\n    this.queryManager.resetErrors(this.queryId);\n  }\n\n  /**\n   * Update the variables of this observable query, and fetch the new results.\n   * This method should be preferred over `setVariables` in most use cases.\n   *\n   * @param variables: The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   */\n  public refetch(variables?: Partial<TVariables>): Promise<ApolloQueryResult<TData>> {\n    const reobserveOptions: Partial<WatchQueryOptions<TVariables, TData>> = {\n      // Always disable polling for refetches.\n      pollInterval: 0,\n    };\n\n    // Unless the provided fetchPolicy always consults the network\n    // (no-cache, network-only, or cache-and-network), override it with\n    // network-only to force the refetch for this fetchQuery call.\n    const { fetchPolicy } = this.options;\n    if (fetchPolicy === 'cache-and-network') {\n      reobserveOptions.fetchPolicy = fetchPolicy;\n    } else if (fetchPolicy === 'no-cache') {\n      reobserveOptions.fetchPolicy = 'no-cache';\n    } else {\n      reobserveOptions.fetchPolicy = 'network-only';\n    }\n\n    if (__DEV__ && variables && hasOwnProperty.call(variables, \"variables\")) {\n      const queryDef = getQueryDefinition(this.options.query);\n      const vars = queryDef.variableDefinitions;\n      if (!vars || !vars.some(v => v.variable.name.value === \"variables\")) {\n        invariant.warn(`Called refetch(${\n          JSON.stringify(variables)\n        }) for query ${\n          queryDef.name?.value || JSON.stringify(queryDef)\n        }, which does not declare a $variables variable.\nDid you mean to call refetch(variables) instead of refetch({ variables })?`);\n      }\n    }\n\n    if (variables && !equal(this.options.variables, variables)) {\n      // Update the existing options with new variables\n      reobserveOptions.variables = this.options.variables = {\n        ...this.options.variables,\n        ...variables,\n      } as TVariables;\n    }\n\n    this.queryInfo.resetLastWrite();\n    return this.reobserve(reobserveOptions, NetworkStatus.refetch);\n  }\n\n  public fetchMore(\n    fetchMoreOptions: FetchMoreQueryOptions<TVariables, TData> &\n      FetchMoreOptions<TData, TVariables>,\n  ): Promise<ApolloQueryResult<TData>> {\n    const combinedOptions = {\n      ...(fetchMoreOptions.query ? fetchMoreOptions : {\n        ...this.options,\n        ...fetchMoreOptions,\n        variables: {\n          ...this.options.variables,\n          ...fetchMoreOptions.variables,\n        },\n      }),\n      // The fetchMore request goes immediately to the network and does\n      // not automatically write its result to the cache (hence no-cache\n      // instead of network-only), because we allow the caller of\n      // fetchMore to provide an updateQuery callback that determines how\n      // the data gets written to the cache.\n      fetchPolicy: \"no-cache\",\n    } as WatchQueryOptions;\n\n    const qid = this.queryManager.generateQueryId();\n\n    // Simulate a loading result for the original query with\n    // result.networkStatus === NetworkStatus.fetchMore.\n    if (combinedOptions.notifyOnNetworkStatusChange) {\n      this.queryInfo.networkStatus = NetworkStatus.fetchMore;\n      this.observe();\n    }\n\n    return this.queryManager.fetchQuery(\n      qid,\n      combinedOptions,\n      NetworkStatus.fetchMore,\n    ).then(fetchMoreResult => {\n      const data = fetchMoreResult.data as TData;\n      const { updateQuery } = fetchMoreOptions;\n\n      if (updateQuery) {\n        if (__DEV__ &&\n            !warnedAboutUpdateQuery) {\n          invariant.warn(\n`The updateQuery callback for fetchMore is deprecated, and will be removed\nin the next major version of Apollo Client.\n\nPlease convert updateQuery functions to field policies with appropriate\nread and merge functions, or use/adapt a helper function (such as\nconcatPagination, offsetLimitPagination, or relayStylePagination) from\n@apollo/client/utilities.\n\nThe field policy system handles pagination more effectively than a\nhand-written updateQuery function, and you only need to define the policy\nonce, rather than every time you call fetchMore.`);\n          warnedAboutUpdateQuery = true;\n        }\n        this.updateQuery(previous => updateQuery(previous, {\n          fetchMoreResult: data,\n          variables: combinedOptions.variables as TVariables,\n        }));\n      } else {\n        // If we're using a field policy instead of updateQuery, the only\n        // thing we need to do is write the new data to the cache using\n        // combinedOptions.variables (instead of this.variables, which is\n        // what this.updateQuery uses, because it works by abusing the\n        // original field value, keyed by the original variables).\n        this.queryManager.cache.writeQuery({\n          query: combinedOptions.query,\n          variables: combinedOptions.variables,\n          data,\n        });\n      }\n\n      return fetchMoreResult as ApolloQueryResult<TData>;\n\n    }).finally(() => {\n      this.queryManager.stopQuery(qid);\n      this.reobserve();\n    });\n  }\n\n  // XXX the subscription variables are separate from the query variables.\n  // if you want to update subscription variables, right now you have to do that separately,\n  // and you can only do it by stopping the subscription and then subscribing again with new variables.\n  public subscribeToMore<\n    TSubscriptionData = TData,\n    TSubscriptionVariables = TVariables\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >,\n  ) {\n    const subscription = this.queryManager\n      .startGraphQLSubscription({\n        query: options.document,\n        variables: options.variables,\n        context: options.context,\n      })\n      .subscribe({\n        next: (subscriptionData: { data: TSubscriptionData }) => {\n          const { updateQuery } = options;\n          if (updateQuery) {\n            this.updateQuery<TSubscriptionVariables>(\n              (previous, { variables }) =>\n                updateQuery(previous, {\n                  subscriptionData,\n                  variables,\n                }),\n            );\n          }\n        },\n        error: (err: any) => {\n          if (options.onError) {\n            options.onError(err);\n            return;\n          }\n          invariant.error('Unhandled GraphQL subscription error', err);\n        },\n      });\n\n    this.subscriptions.add(subscription);\n\n    return () => {\n      if (this.subscriptions.delete(subscription)) {\n        subscription.unsubscribe();\n      }\n    };\n  }\n\n  public setOptions(\n    newOptions: Partial<WatchQueryOptions<TVariables, TData>>,\n  ): Promise<ApolloQueryResult<TData>> {\n    return this.reobserve(newOptions);\n  }\n\n  /**\n   * This is for *internal* use only. Most users should instead use `refetch`\n   * in order to be properly notified of results even when they come from cache.\n   *\n   * Update the variables of this observable query, and fetch the new results\n   * if they've changed. If you want to force new results, use `refetch`.\n   *\n   * Note: the `next` callback will *not* fire if the variables have not changed\n   * or if the result is coming from cache.\n   *\n   * Note: the promise will return the old results immediately if the variables\n   * have not changed.\n   *\n   * Note: the promise will return null immediately if the query is not active\n   * (there are no subscribers).\n   *\n   * @private\n   *\n   * @param variables: The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   */\n  public setVariables(\n    variables: TVariables,\n  ): Promise<ApolloQueryResult<TData> | void> {\n    if (equal(this.variables, variables)) {\n      // If we have no observers, then we don't actually want to make a network\n      // request. As soon as someone observes the query, the request will kick\n      // off. For now, we just store any changes. (See #1077)\n      return this.observers.size\n        ? this.result()\n        : Promise.resolve();\n    }\n\n    this.options.variables = variables;\n\n    // See comment above\n    if (!this.observers.size) {\n      return Promise.resolve();\n    }\n\n    return this.reobserve({\n      // Reset options.fetchPolicy to its original value.\n      fetchPolicy: this.initialFetchPolicy,\n      variables,\n    }, NetworkStatus.setVariables);\n  }\n\n  public updateQuery<TVars = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: Pick<WatchQueryOptions<TVars, TData>, \"variables\">,\n    ) => TData,\n  ): void {\n    const { queryManager } = this;\n    const { result } = queryManager.cache.diff<TData>({\n      query: this.options.query,\n      variables: this.variables,\n      returnPartialData: true,\n      optimistic: false,\n    });\n\n    const newResult = mapFn(result!, {\n      variables: (this as any).variables,\n    });\n\n    if (newResult) {\n      queryManager.cache.writeQuery({\n        query: this.options.query,\n        data: newResult,\n        variables: this.variables,\n      });\n\n      queryManager.broadcastQueries();\n    }\n  }\n\n  public startPolling(pollInterval: number) {\n    this.options.pollInterval = pollInterval;\n    this.updatePolling();\n  }\n\n  public stopPolling() {\n    this.options.pollInterval = 0;\n    this.updatePolling();\n  }\n\n  private fetch(\n    options: WatchQueryOptions<TVariables, TData>,\n    newNetworkStatus?: NetworkStatus,\n  ): Concast<ApolloQueryResult<TData>> {\n    this.queryManager.setObservableQuery(this);\n    return this.queryManager.fetchQueryObservable(\n      this.queryId,\n      options,\n      newNetworkStatus,\n    );\n  }\n\n  // Turns polling on or off based on this.options.pollInterval.\n  private updatePolling() {\n    // Avoid polling in SSR mode\n    if (this.queryManager.ssrMode) {\n      return;\n    }\n\n    const {\n      pollingInfo,\n      options: {\n        pollInterval,\n      },\n    } = this;\n\n    if (!pollInterval) {\n      if (pollingInfo) {\n        clearTimeout(pollingInfo.timeout);\n        delete this.pollingInfo;\n      }\n      return;\n    }\n\n    if (pollingInfo &&\n        pollingInfo.interval === pollInterval) {\n      return;\n    }\n\n    invariant(\n      pollInterval,\n      'Attempted to start a polling query without a polling interval.',\n    );\n\n    const info = pollingInfo || (this.pollingInfo = {} as any);\n    info.interval = pollInterval;\n\n    const maybeFetch = () => {\n      if (this.pollingInfo) {\n        if (!isNetworkRequestInFlight(this.queryInfo.networkStatus)) {\n          this.reobserve({\n            fetchPolicy: \"network-only\",\n          }, NetworkStatus.poll).then(poll, poll);\n        } else {\n          poll();\n        }\n      };\n    };\n\n    const poll = () => {\n      const info = this.pollingInfo;\n      if (info) {\n        clearTimeout(info.timeout);\n        info.timeout = setTimeout(maybeFetch, info.interval);\n      }\n    };\n\n    poll();\n  }\n\n  private updateLastResult(\n    newResult: ApolloQueryResult<TData>,\n    variables = this.variables,\n  ) {\n    this.last = {\n      ...this.last,\n      result: this.queryManager.assumeImmutableResults\n        ? newResult\n        : cloneDeep(newResult),\n      variables,\n    };\n    if (!isNonEmptyArray(newResult.errors)) {\n      delete this.last.error;\n    }\n    return this.last;\n  }\n\n  public reobserve(\n    newOptions?: Partial<WatchQueryOptions<TVariables, TData>>,\n    newNetworkStatus?: NetworkStatus,\n  ): Promise<ApolloQueryResult<TData>> {\n    this.isTornDown = false;\n\n    const useDisposableConcast =\n      // Refetching uses a disposable Concast to allow refetches using different\n      // options/variables, without permanently altering the options of the\n      // original ObservableQuery.\n      newNetworkStatus === NetworkStatus.refetch ||\n      // The fetchMore method does not actually call the reobserve method, but,\n      // if it did, it would definitely use a disposable Concast.\n      newNetworkStatus === NetworkStatus.fetchMore ||\n      // Polling uses a disposable Concast so the polling options (which force\n      // fetchPolicy to be \"network-only\") won't override the original options.\n      newNetworkStatus === NetworkStatus.poll;\n\n    // Save the old variables, since Object.assign may modify them below.\n    const oldVariables = this.options.variables;\n\n    const options = useDisposableConcast\n      // Disposable Concast fetches receive a shallow copy of this.options\n      // (merged with newOptions), leaving this.options unmodified.\n      ? compact(this.options, newOptions)\n      : assign(this.options, compact(newOptions));\n\n    if (!useDisposableConcast) {\n      // We can skip calling updatePolling if we're not changing this.options.\n      this.updatePolling();\n\n      // Reset options.fetchPolicy to its original value when variables change,\n      // unless a new fetchPolicy was provided by newOptions.\n      if (\n        newOptions &&\n        newOptions.variables &&\n        !newOptions.fetchPolicy &&\n        !equal(newOptions.variables, oldVariables)\n      ) {\n        options.fetchPolicy = this.initialFetchPolicy;\n        if (newNetworkStatus === void 0) {\n          newNetworkStatus = NetworkStatus.setVariables;\n        }\n      }\n    }\n\n    const variables = options.variables && { ...options.variables };\n    const concast = this.fetch(options, newNetworkStatus);\n    const observer: Observer<ApolloQueryResult<TData>> = {\n      next: result => {\n        this.reportResult(result, variables);\n      },\n      error: error => {\n        this.reportError(error, variables);\n      },\n    };\n\n    if (!useDisposableConcast) {\n      // We use the {add,remove}Observer methods directly to avoid wrapping\n      // observer with an unnecessary SubscriptionObserver object, in part so\n      // that we can remove it here without triggering any unsubscriptions,\n      // because we just want to ignore the old observable, not prematurely shut\n      // it down, since other consumers may be awaiting this.concast.promise.\n      if (this.concast && this.observer) {\n        this.concast.removeObserver(this.observer, true);\n      }\n\n      this.concast = concast;\n      this.observer = observer;\n    }\n\n    concast.addObserver(observer);\n\n    return concast.promise;\n  }\n\n  // Pass the current result to this.observer.next without applying any\n  // fetch policies.\n  private observe() {\n    // Passing false is important so that this.getCurrentResult doesn't\n    // save the fetchMore result as this.lastResult, causing it to be\n    // ignored due to the this.isDifferentFromLastResult check in\n    // this.observer.next.\n    this.reportResult(\n      this.getCurrentResult(false),\n      this.variables,\n    );\n  }\n\n  private reportResult(\n    result: ApolloQueryResult<TData>,\n    variables: TVariables | undefined,\n  ) {\n    const lastError = this.getLastError();\n    if (lastError || this.isDifferentFromLastResult(result)) {\n      if (lastError || !result.partial || this.options.returnPartialData) {\n        this.updateLastResult(result, variables);\n      }\n\n      iterateObserversSafely(this.observers, 'next', result);\n    }\n  }\n\n  private reportError(\n    error: ApolloError,\n    variables: TVariables | undefined,\n  ) {\n    // Since we don't get the current result on errors, only the error, we\n    // must mirror the updates that occur in QueryStore.markQueryError here\n    const errorResult = {\n      ...this.getLastResult(),\n      error,\n      errors: error.graphQLErrors,\n      networkStatus: NetworkStatus.error,\n      loading: false,\n    } as ApolloQueryResult<TData>;\n\n    this.updateLastResult(errorResult, variables);\n\n    iterateObserversSafely(this.observers, 'error', this.last!.error = error);\n  }\n\n  public hasObservers() {\n    return this.observers.size > 0;\n  }\n\n  private tearDownQuery() {\n    if (this.isTornDown) return;\n    if (this.concast && this.observer) {\n      this.concast.removeObserver(this.observer);\n      delete this.concast;\n      delete this.observer;\n    }\n\n    this.stopPolling();\n    // stop all active GraphQL subscriptions\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.subscriptions.clear();\n    this.queryManager.stopQuery(this.queryId);\n    this.observers.clear();\n    this.isTornDown = true;\n  }\n}\n\n// Necessary because the ObservableQuery constructor has a different\n// signature than the Observable constructor.\nfixObservableSubclass(ObservableQuery);\n\nfunction defaultSubscriptionObserverErrorCallback(error: ApolloError) {\n  invariant.error('Unhandled error', error.message, error.stack);\n}\n\nexport function logMissingFieldErrors(\n  missing: MissingFieldError[] | MissingTree | undefined,\n) {\n  if (__DEV__ && missing) {\n    invariant.debug(`Missing cache result fields: ${\n      JSON.stringify(missing)\n    }`, missing);\n  }\n}\n\n// Adopt options.nextFetchPolicy (if defined) as a replacement for\n// options.fetchPolicy. Since this method also removes options.nextFetchPolicy\n// from options, the adoption tends to be idempotent, unless nextFetchPolicy\n// is a function that keeps setting options.nextFetchPolicy (uncommon).\nexport function applyNextFetchPolicy<TData, TVars>(\n  options: Pick<\n    WatchQueryOptions<TVars, TData>,\n    | \"fetchPolicy\"\n    | \"nextFetchPolicy\"\n  >,\n) {\n  const {\n    fetchPolicy = \"cache-first\",\n    nextFetchPolicy,\n  } = options;\n\n  if (nextFetchPolicy) {\n    // When someone chooses \"cache-and-network\" or \"network-only\" as their\n    // initial FetchPolicy, they often do not want future cache updates to\n    // trigger unconditional network requests, which is what repeatedly\n    // applying the \"cache-and-network\" or \"network-only\" policies would seem\n    // to imply. Instead, when the cache reports an update after the initial\n    // network request, it may be desirable for subsequent network requests to\n    // be triggered only if the cache result is incomplete. To that end, the\n    // options.nextFetchPolicy option provides an easy way to update\n    // options.fetchPolicy after the initial network request, without having to\n    // call observableQuery.setOptions.\n    options.fetchPolicy = typeof nextFetchPolicy === \"function\"\n      ? nextFetchPolicy.call(options, fetchPolicy)\n      : nextFetchPolicy;\n  }\n}\n","import { invariant } from '../utilities/globals';\n\nimport {\n  DocumentNode,\n  OperationDefinitionNode,\n  SelectionSetNode,\n  SelectionNode,\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n  FieldNode,\n  ASTNode,\n  visit,\n  BREAK,\n} from 'graphql';\n\nimport { ApolloCache } from '../cache';\nimport {\n  FragmentMap,\n  StoreObject,\n  argumentsObjectFromField,\n  buildQueryFromSelectionSet,\n  createFragmentMap,\n  getFragmentDefinitions,\n  getMainDefinition,\n  hasDirectives,\n  isField,\n  isInlineFragment,\n  mergeDeep,\n  mergeDeepArray,\n  removeClientSetsFromDocument,\n  resultKeyNameFromField,\n  shouldInclude,\n} from '../utilities';\nimport { ApolloClient } from './ApolloClient';\nimport { Resolvers, OperationVariables } from './types';\nimport { FetchResult } from '../link/core';\nimport { cacheSlot } from '../cache';\n\nexport type Resolver = (\n  rootValue?: any,\n  args?: any,\n  context?: any,\n  info?: {\n    field: FieldNode;\n    fragmentMap: FragmentMap;\n  },\n) => any;\n\nexport type VariableMap = { [name: string]: any };\n\nexport type FragmentMatcher = (\n  rootValue: any,\n  typeCondition: string,\n  context: any,\n) => boolean;\n\nexport type ExecContext = {\n  fragmentMap: FragmentMap;\n  context: any;\n  variables: VariableMap;\n  fragmentMatcher: FragmentMatcher;\n  defaultOperationType: string;\n  exportedVariables: Record<string, any>;\n  onlyRunForcedResolvers: boolean;\n};\n\nexport type LocalStateOptions<TCacheShape> = {\n  cache: ApolloCache<TCacheShape>;\n  client?: ApolloClient<TCacheShape>;\n  resolvers?: Resolvers | Resolvers[];\n  fragmentMatcher?: FragmentMatcher;\n};\n\nexport class LocalState<TCacheShape> {\n  private cache: ApolloCache<TCacheShape>;\n  private client: ApolloClient<TCacheShape>;\n  private resolvers?: Resolvers;\n  private fragmentMatcher: FragmentMatcher;\n\n  constructor({\n    cache,\n    client,\n    resolvers,\n    fragmentMatcher,\n  }: LocalStateOptions<TCacheShape>) {\n    this.cache = cache;\n\n    if (client) {\n      this.client = client;\n    }\n\n    if (resolvers) {\n      this.addResolvers(resolvers);\n    }\n\n    if (fragmentMatcher) {\n      this.setFragmentMatcher(fragmentMatcher);\n    }\n  }\n\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = this.resolvers || {};\n    if (Array.isArray(resolvers)) {\n      resolvers.forEach(resolverGroup => {\n        this.resolvers = mergeDeep(this.resolvers, resolverGroup);\n      });\n    } else {\n      this.resolvers = mergeDeep(this.resolvers, resolvers);\n    }\n  }\n\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = {};\n    this.addResolvers(resolvers);\n  }\n\n  public getResolvers() {\n    return this.resolvers || {};\n  }\n\n  // Run local client resolvers against the incoming query and remote data.\n  // Locally resolved field values are merged with the incoming remote data,\n  // and returned. Note that locally resolved fields will overwrite\n  // remote data using the same field name.\n  public async runResolvers<TData>({\n    document,\n    remoteResult,\n    context,\n    variables,\n    onlyRunForcedResolvers = false,\n  }: {\n    document: DocumentNode | null;\n    remoteResult: FetchResult<TData>;\n    context?: Record<string, any>;\n    variables?: Record<string, any>;\n    onlyRunForcedResolvers?: boolean;\n  }): Promise<FetchResult<TData>> {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        remoteResult.data,\n        context,\n        variables,\n        this.fragmentMatcher,\n        onlyRunForcedResolvers,\n      ).then(localResult => ({\n        ...remoteResult,\n        data: localResult.result,\n      }));\n    }\n\n    return remoteResult;\n  }\n\n  public setFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.fragmentMatcher = fragmentMatcher;\n  }\n\n  public getFragmentMatcher(): FragmentMatcher {\n    return this.fragmentMatcher;\n  }\n\n  // Client queries contain everything in the incoming document (if a @client\n  // directive is found).\n  public clientQuery(document: DocumentNode) {\n    if (hasDirectives(['client'], document)) {\n      if (this.resolvers) {\n        return document;\n      }\n    }\n    return null;\n  }\n\n  // Server queries are stripped of all @client based selection sets.\n  public serverQuery(document: DocumentNode) {\n    return removeClientSetsFromDocument(document);\n  }\n\n  public prepareContext(context?: Record<string, any>) {\n    const { cache } = this;\n    return {\n      ...context,\n      cache,\n      // Getting an entry's cache key is useful for local state resolvers.\n      getCacheKey(obj: StoreObject) {\n        return cache.identify(obj);\n      },\n    };\n  }\n\n  // To support `@client @export(as: \"someVar\")` syntax, we'll first resolve\n  // @client @export fields locally, then pass the resolved values back to be\n  // used alongside the original operation variables.\n  public async addExportedVariables(\n    document: DocumentNode,\n    variables: OperationVariables = {},\n    context = {},\n  ) {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        this.buildRootValueFromCache(document, variables) || {},\n        this.prepareContext(context),\n        variables,\n      ).then(data => ({\n        ...variables,\n        ...data.exportedVariables,\n      }));\n    }\n\n    return {\n      ...variables,\n    };\n  }\n\n  public shouldForceResolvers(document: ASTNode) {\n    let forceResolvers = false;\n    visit(document, {\n      Directive: {\n        enter(node) {\n          if (node.name.value === 'client' && node.arguments) {\n            forceResolvers = node.arguments.some(\n              arg =>\n                arg.name.value === 'always' &&\n                arg.value.kind === 'BooleanValue' &&\n                arg.value.value === true,\n            );\n            if (forceResolvers) {\n              return BREAK;\n            }\n          }\n        },\n      },\n    });\n    return forceResolvers;\n  }\n\n  // Query the cache and return matching data.\n  private buildRootValueFromCache(\n    document: DocumentNode,\n    variables?: Record<string, any>,\n  ) {\n    return this.cache.diff({\n      query: buildQueryFromSelectionSet(document),\n      variables,\n      returnPartialData: true,\n      optimistic: false,\n    }).result;\n  }\n\n  private async resolveDocument<TData>(\n    document: DocumentNode,\n    rootValue: TData,\n    context: any = {},\n    variables: VariableMap = {},\n    fragmentMatcher: FragmentMatcher = () => true,\n    onlyRunForcedResolvers: boolean = false,\n  ) {\n    const mainDefinition = getMainDefinition(document);\n    const fragments = getFragmentDefinitions(document);\n    const fragmentMap = createFragmentMap(fragments);\n\n    const definitionOperation = (mainDefinition as OperationDefinitionNode)\n      .operation;\n\n    const defaultOperationType = definitionOperation\n      ? definitionOperation.charAt(0).toUpperCase() +\n        definitionOperation.slice(1)\n      : 'Query';\n\n    const { cache, client } = this;\n    const execContext: ExecContext = {\n      fragmentMap,\n      context: {\n        ...context,\n        cache,\n        client,\n      },\n      variables,\n      fragmentMatcher,\n      defaultOperationType,\n      exportedVariables: {},\n      onlyRunForcedResolvers,\n    };\n\n    return this.resolveSelectionSet(\n      mainDefinition.selectionSet,\n      rootValue,\n      execContext,\n    ).then(result => ({\n      result,\n      exportedVariables: execContext.exportedVariables,\n    }));\n  }\n\n  private async resolveSelectionSet<TData>(\n    selectionSet: SelectionSetNode,\n    rootValue: TData,\n    execContext: ExecContext,\n  ) {\n    const { fragmentMap, context, variables } = execContext;\n    const resultsToMerge: TData[] = [rootValue];\n\n    const execute = async (selection: SelectionNode): Promise<void> => {\n      if (!shouldInclude(selection, variables)) {\n        // Skip this entirely.\n        return;\n      }\n\n      if (isField(selection)) {\n        return this.resolveField(selection, rootValue, execContext).then(\n          fieldResult => {\n            if (typeof fieldResult !== 'undefined') {\n              resultsToMerge.push({\n                [resultKeyNameFromField(selection)]: fieldResult,\n              } as TData);\n            }\n          },\n        );\n      }\n\n      let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n      if (isInlineFragment(selection)) {\n        fragment = selection;\n      } else {\n        // This is a named fragment.\n        fragment = fragmentMap[selection.name.value];\n        invariant(fragment, `No fragment named ${selection.name.value}`);\n      }\n\n      if (fragment && fragment.typeCondition) {\n        const typeCondition = fragment.typeCondition.name.value;\n        if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n          return this.resolveSelectionSet(\n            fragment.selectionSet,\n            rootValue,\n            execContext,\n          ).then(fragmentResult => {\n            resultsToMerge.push(fragmentResult);\n          });\n        }\n      }\n    };\n\n    return Promise.all(selectionSet.selections.map(execute)).then(function() {\n      return mergeDeepArray(resultsToMerge);\n    });\n  }\n\n  private async resolveField(\n    field: FieldNode,\n    rootValue: any,\n    execContext: ExecContext,\n  ): Promise<any> {\n    const { variables } = execContext;\n    const fieldName = field.name.value;\n    const aliasedFieldName = resultKeyNameFromField(field);\n    const aliasUsed = fieldName !== aliasedFieldName;\n    const defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n    let resultPromise = Promise.resolve(defaultResult);\n\n    // Usually all local resolvers are run when passing through here, but\n    // if we've specifically identified that we only want to run forced\n    // resolvers (that is, resolvers for fields marked with\n    // `@client(always: true)`), then we'll skip running non-forced resolvers.\n    if (\n      !execContext.onlyRunForcedResolvers ||\n      this.shouldForceResolvers(field)\n    ) {\n      const resolverType =\n        rootValue.__typename || execContext.defaultOperationType;\n      const resolverMap = this.resolvers && this.resolvers[resolverType];\n      if (resolverMap) {\n        const resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n        if (resolve) {\n          resultPromise = Promise.resolve(\n            // In case the resolve function accesses reactive variables,\n            // set cacheSlot to the current cache instance.\n            cacheSlot.withValue(this.cache, resolve, [\n              rootValue,\n              argumentsObjectFromField(field, variables),\n              execContext.context,\n              { field, fragmentMap: execContext.fragmentMap },\n            ])\n          );\n        }\n      }\n    }\n\n    return resultPromise.then((result = defaultResult) => {\n      // If an @export directive is associated with the current field, store\n      // the `as` export variable name and current result for later use.\n      if (field.directives) {\n        field.directives.forEach(directive => {\n          if (directive.name.value === 'export' && directive.arguments) {\n            directive.arguments.forEach(arg => {\n              if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                execContext.exportedVariables[arg.value.value] = result;\n              }\n            });\n          }\n        });\n      }\n\n      // Handle all scalar types here.\n      if (!field.selectionSet) {\n        return result;\n      }\n\n      // From here down, the field has a selection set, which means it's trying\n      // to query a GraphQLObjectType.\n      if (result == null) {\n        // Basically any field in a GraphQL response can be null, or missing\n        return result;\n      }\n\n      if (Array.isArray(result)) {\n        return this.resolveSubSelectedArray(field, result, execContext);\n      }\n\n      // Returned value is an object, and the query has a sub-selection. Recurse.\n      if (field.selectionSet) {\n        return this.resolveSelectionSet(\n          field.selectionSet,\n          result,\n          execContext,\n        );\n      }\n    });\n  }\n\n  private resolveSubSelectedArray(\n    field: FieldNode,\n    result: any[],\n    execContext: ExecContext,\n  ): any {\n    return Promise.all(\n      result.map(item => {\n        if (item === null) {\n          return null;\n        }\n\n        // This is a nested array, recurse.\n        if (Array.isArray(item)) {\n          return this.resolveSubSelectedArray(field, item, execContext);\n        }\n\n        // This is an object, run the selection set on it.\n        if (field.selectionSet) {\n          return this.resolveSelectionSet(field.selectionSet, item, execContext);\n        }\n      }),\n    );\n  }\n}\n","import { DocumentNode, GraphQLError } from 'graphql';\nimport { equal } from \"@wry/equality\";\n\nimport { Cache, ApolloCache } from '../cache';\nimport { WatchQueryOptions, ErrorPolicy } from './watchQueryOptions';\nimport { ObservableQuery } from './ObservableQuery';\nimport { QueryListener } from './types';\nimport { FetchResult } from '../link/core';\nimport {\n  ObservableSubscription,\n  isNonEmptyArray,\n  graphQLResultHasError,\n  canUseWeakMap,\n} from '../utilities';\nimport {\n  NetworkStatus,\n  isNetworkRequestInFlight,\n} from './networkStatus';\nimport { ApolloError } from '../errors';\nimport { QueryManager } from './QueryManager';\n\nexport type QueryStoreValue = Pick<QueryInfo,\n  | \"variables\"\n  | \"networkStatus\"\n  | \"networkError\"\n  | \"graphQLErrors\"\n  >;\n\nexport const enum CacheWriteBehavior {\n  FORBID,\n  OVERWRITE,\n  MERGE,\n};\n\nconst destructiveMethodCounts = new (\n  canUseWeakMap ? WeakMap : Map\n)<ApolloCache<any>, number>();\n\nfunction wrapDestructiveCacheMethod(\n  cache: ApolloCache<any>,\n  methodName: keyof ApolloCache<any>,\n) {\n  const original = cache[methodName];\n  if (typeof original === \"function\") {\n    cache[methodName] = function () {\n      destructiveMethodCounts.set(\n        cache,\n        // The %1e15 allows the count to wrap around to 0 safely every\n        // quadrillion evictions, so there's no risk of overflow. To be\n        // clear, this is more of a pedantic principle than something\n        // that matters in any conceivable practical scenario.\n        (destructiveMethodCounts.get(cache)! + 1) % 1e15,\n      );\n      return original.apply(this, arguments);\n    };\n  }\n}\n\nfunction cancelNotifyTimeout(info: QueryInfo) {\n  if (info[\"notifyTimeout\"]) {\n    clearTimeout(info[\"notifyTimeout\"]);\n    info[\"notifyTimeout\"] = void 0;\n  }\n}\n\n// A QueryInfo object represents a single query managed by the\n// QueryManager, which tracks all QueryInfo objects by queryId in its\n// this.queries Map. QueryInfo objects store the latest results and errors\n// for the given query, and are responsible for reporting those results to\n// the corresponding ObservableQuery, via the QueryInfo.notify method.\n// Results are reported asynchronously whenever setDiff marks the\n// QueryInfo object as dirty, though a call to the QueryManager's\n// broadcastQueries method may trigger the notification before it happens\n// automatically. This class used to be a simple interface type without\n// any field privacy or meaningful methods, which is why it still has so\n// many public fields. The effort to lock down and simplify the QueryInfo\n// interface is ongoing, and further improvements are welcome.\nexport class QueryInfo {\n  listeners = new Set<QueryListener>();\n  document: DocumentNode | null = null;\n  lastRequestId = 1;\n  subscriptions = new Set<ObservableSubscription>();\n  variables?: Record<string, any>;\n  networkStatus?: NetworkStatus;\n  networkError?: Error | null;\n  graphQLErrors?: ReadonlyArray<GraphQLError>;\n  stopped = false;\n\n  private cache: ApolloCache<any>;\n\n  constructor(\n    queryManager: QueryManager<any>,\n    public readonly queryId = queryManager.generateQueryId(),\n  ) {\n    const cache = this.cache = queryManager.cache;\n\n    // Track how often cache.evict is called, since we want eviction to\n    // override the feud-stopping logic in the markResult method, by\n    // causing shouldWrite to return true. Wrapping the cache.evict method\n    // is a bit of a hack, but it saves us from having to make eviction\n    // counting an official part of the ApolloCache API.\n    if (!destructiveMethodCounts.has(cache)) {\n      destructiveMethodCounts.set(cache, 0);\n      wrapDestructiveCacheMethod(cache, \"evict\");\n      wrapDestructiveCacheMethod(cache, \"modify\");\n      wrapDestructiveCacheMethod(cache, \"reset\");\n    }\n  }\n\n  public init(query: {\n    document: DocumentNode;\n    variables: Record<string, any> | undefined,\n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus?: NetworkStatus,\n    observableQuery?: ObservableQuery<any>;\n    lastRequestId?: number;\n  }): this {\n    let networkStatus = query.networkStatus || NetworkStatus.loading;\n    if (this.variables &&\n        this.networkStatus !== NetworkStatus.loading &&\n        !equal(this.variables, query.variables)) {\n      networkStatus = NetworkStatus.setVariables;\n    }\n\n    if (!equal(query.variables, this.variables)) {\n      this.lastDiff = void 0;\n    }\n\n    Object.assign(this, {\n      document: query.document,\n      variables: query.variables,\n      networkError: null,\n      graphQLErrors: this.graphQLErrors || [],\n      networkStatus,\n    });\n\n    if (query.observableQuery) {\n      this.setObservableQuery(query.observableQuery);\n    }\n\n    if (query.lastRequestId) {\n      this.lastRequestId = query.lastRequestId;\n    }\n\n    return this;\n  }\n\n  private dirty: boolean = false;\n\n  private notifyTimeout?: ReturnType<typeof setTimeout>;\n\n  reset() {\n    cancelNotifyTimeout(this);\n    this.lastDiff = void 0;\n    this.dirty = false;\n  }\n\n  getDiff(variables = this.variables): Cache.DiffResult<any> {\n    const options = this.getDiffOptions(variables);\n\n    if (this.lastDiff && equal(options, this.lastDiff.options)) {\n      return this.lastDiff.diff;\n    }\n\n    this.updateWatch(this.variables = variables);\n\n    const oq = this.observableQuery;\n    if (oq && oq.options.fetchPolicy === \"no-cache\") {\n      return { complete: false };\n    }\n\n    const diff = this.cache.diff(options);\n    this.updateLastDiff(diff, options);\n    return diff;\n  }\n\n  private lastDiff?: {\n    diff: Cache.DiffResult<any>,\n    options: Cache.DiffOptions,\n  };\n\n  private updateLastDiff(\n    diff: Cache.DiffResult<any> | null,\n    options?: Cache.DiffOptions,\n  ) {\n    this.lastDiff = diff ? {\n      diff,\n      options: options || this.getDiffOptions(),\n    } : void 0;\n  }\n\n  private getDiffOptions(variables = this.variables): Cache.DiffOptions {\n    return {\n      query: this.document!,\n      variables,\n      returnPartialData: true,\n      optimistic: true,\n      canonizeResults: this.observableQuery?.options.canonizeResults,\n    };\n  }\n\n  setDiff(diff: Cache.DiffResult<any> | null) {\n    const oldDiff = this.lastDiff && this.lastDiff.diff;\n    this.updateLastDiff(diff);\n    if (!this.dirty &&\n        !equal(oldDiff && oldDiff.result,\n               diff && diff.result)) {\n      this.dirty = true;\n      if (!this.notifyTimeout) {\n        this.notifyTimeout = setTimeout(() => this.notify(), 0);\n      }\n    }\n  }\n\n  public readonly observableQuery: ObservableQuery<any> | null = null;\n  private oqListener?: QueryListener;\n\n  setObservableQuery(oq: ObservableQuery<any> | null) {\n    if (oq === this.observableQuery) return;\n\n    if (this.oqListener) {\n      this.listeners.delete(this.oqListener);\n    }\n\n    (this as any).observableQuery = oq;\n\n    if (oq) {\n      oq[\"queryInfo\"] = this;\n      this.listeners.add(this.oqListener = () => {\n        // If this.diff came from an optimistic transaction, deliver the\n        // current cache data to the ObservableQuery, but don't perform a\n        // full reobservation, since oq.reobserve might make a network\n        // request, and we don't want to trigger network requests for\n        // optimistic updates.\n        if (this.getDiff().fromOptimisticTransaction) {\n          oq[\"observe\"]();\n        } else {\n          oq.reobserve();\n        }\n      });\n    } else {\n      delete this.oqListener;\n    }\n  }\n\n  notify() {\n    cancelNotifyTimeout(this);\n\n    if (this.shouldNotify()) {\n      this.listeners.forEach(listener => listener(this));\n    }\n\n    this.dirty = false;\n  }\n\n  private shouldNotify() {\n    if (!this.dirty || !this.listeners.size) {\n      return false;\n    }\n\n    if (isNetworkRequestInFlight(this.networkStatus) &&\n        this.observableQuery) {\n      const { fetchPolicy } = this.observableQuery.options;\n      if (fetchPolicy !== \"cache-only\" &&\n          fetchPolicy !== \"cache-and-network\") {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  public stop() {\n    if (!this.stopped) {\n      this.stopped = true;\n\n      // Cancel the pending notify timeout\n      this.reset();\n\n      this.cancel();\n      // Revert back to the no-op version of cancel inherited from\n      // QueryInfo.prototype.\n      this.cancel = QueryInfo.prototype.cancel;\n\n      this.subscriptions.forEach(sub => sub.unsubscribe());\n\n      const oq = this.observableQuery;\n      if (oq) oq.stopPolling();\n    }\n  }\n\n  // This method is a no-op by default, until/unless overridden by the\n  // updateWatch method.\n  private cancel() {}\n\n  private lastWatch?: Cache.WatchOptions;\n\n  private updateWatch(variables = this.variables) {\n    const oq = this.observableQuery;\n    if (oq && oq.options.fetchPolicy === \"no-cache\") {\n      return;\n    }\n\n    const watchOptions: Cache.WatchOptions = {\n      // Although this.getDiffOptions returns Cache.DiffOptions instead of\n      // Cache.WatchOptions, all the overlapping options should be the same, so\n      // we can reuse getDiffOptions here, for consistency.\n      ...this.getDiffOptions(variables),\n      watcher: this,\n      callback: diff => this.setDiff(diff),\n    };\n\n    if (!this.lastWatch ||\n        !equal(watchOptions, this.lastWatch)) {\n      this.cancel();\n      this.cancel = this.cache.watch(this.lastWatch = watchOptions);\n    }\n  }\n\n  private lastWrite?: {\n    result: FetchResult<any>;\n    variables: WatchQueryOptions[\"variables\"];\n    dmCount: number | undefined;\n  };\n\n  public resetLastWrite() {\n    this.lastWrite = void 0;\n  }\n\n  private shouldWrite(\n    result: FetchResult<any>,\n    variables: WatchQueryOptions[\"variables\"],\n  ) {\n    const { lastWrite } = this;\n    return !(\n      lastWrite &&\n      // If cache.evict has been called since the last time we wrote this\n      // data into the cache, there's a chance writing this result into\n      // the cache will repair what was evicted.\n      lastWrite.dmCount === destructiveMethodCounts.get(this.cache) &&\n      equal(variables, lastWrite.variables) &&\n      equal(result.data, lastWrite.result.data)\n    );\n  }\n\n  public markResult<T>(\n    result: FetchResult<T>,\n    options: Pick<WatchQueryOptions,\n      | \"variables\"\n      | \"fetchPolicy\"\n      | \"errorPolicy\">,\n    cacheWriteBehavior: CacheWriteBehavior,\n  ) {\n    this.graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];\n\n    // Cancel the pending notify timeout (if it exists) to prevent extraneous network\n    // requests. To allow future notify timeouts, diff and dirty are reset as well.\n    this.reset();\n\n    if (options.fetchPolicy === 'no-cache') {\n      this.updateLastDiff(\n        { result: result.data, complete: true },\n        this.getDiffOptions(options.variables),\n      );\n\n    } else if (cacheWriteBehavior !== CacheWriteBehavior.FORBID) {\n      if (shouldWriteResult(result, options.errorPolicy)) {\n        // Using a transaction here so we have a chance to read the result\n        // back from the cache before the watch callback fires as a result\n        // of writeQuery, so we can store the new diff quietly and ignore\n        // it when we receive it redundantly from the watch callback.\n        this.cache.performTransaction(cache => {\n          if (this.shouldWrite(result, options.variables)) {\n            cache.writeQuery({\n              query: this.document!,\n              data: result.data as T,\n              variables: options.variables,\n              overwrite: cacheWriteBehavior === CacheWriteBehavior.OVERWRITE,\n            });\n\n            this.lastWrite = {\n              result,\n              variables: options.variables,\n              dmCount: destructiveMethodCounts.get(this.cache),\n            };\n          } else {\n            // If result is the same as the last result we received from\n            // the network (and the variables match too), avoid writing\n            // result into the cache again. The wisdom of skipping this\n            // cache write is far from obvious, since any cache write\n            // could be the one that puts the cache back into a desired\n            // state, fixing corruption or missing data. However, if we\n            // always write every network result into the cache, we enable\n            // feuds between queries competing to update the same data in\n            // incompatible ways, which can lead to an endless cycle of\n            // cache broadcasts and useless network requests. As with any\n            // feud, eventually one side must step back from the brink,\n            // letting the other side(s) have the last word(s). There may\n            // be other points where we could break this cycle, such as\n            // silencing the broadcast for cache.writeQuery (not a good\n            // idea, since it just delays the feud a bit) or somehow\n            // avoiding the network request that just happened (also bad,\n            // because the server could return useful new data). All\n            // options considered, skipping this cache write seems to be\n            // the least damaging place to break the cycle, because it\n            // reflects the intuition that we recently wrote this exact\n            // result into the cache, so the cache *should* already/still\n            // contain this data. If some other query has clobbered that\n            // data in the meantime, that's too bad, but there will be no\n            // winners if every query blindly reverts to its own version\n            // of the data. This approach also gives the network a chance\n            // to return new data, which will be written into the cache as\n            // usual, notifying only those queries that are directly\n            // affected by the cache updates, as usual. In the future, an\n            // even more sophisticated cache could perhaps prevent or\n            // mitigate the clobbering somehow, but that would make this\n            // particular cache write even less important, and thus\n            // skipping it would be even safer than it is today.\n            if (this.lastDiff &&\n                this.lastDiff.diff.complete) {\n              // Reuse data from the last good (complete) diff that we\n              // received, when possible.\n              result.data = this.lastDiff.diff.result;\n              return;\n            }\n            // If the previous this.diff was incomplete, fall through to\n            // re-reading the latest data with cache.diff, below.\n          }\n\n          const diffOptions = this.getDiffOptions(options.variables);\n          const diff = cache.diff<T>(diffOptions);\n\n          // In case the QueryManager stops this QueryInfo before its\n          // results are delivered, it's important to avoid restarting the\n          // cache watch when markResult is called.\n          if (!this.stopped) {\n            // Any time we're about to update this.diff, we need to make\n            // sure we've started watching the cache.\n            this.updateWatch(options.variables);\n          }\n\n          // If we're allowed to write to the cache, and we can read a\n          // complete result from the cache, update result.data to be the\n          // result from the cache, rather than the raw network result.\n          // Set without setDiff to avoid triggering a notify call, since\n          // we have other ways of notifying for this result.\n          this.updateLastDiff(diff, diffOptions);\n          if (diff.complete) {\n            result.data = diff.result;\n          }\n        });\n      } else {\n        this.lastWrite = void 0;\n      }\n    }\n  }\n\n  public markReady() {\n    this.networkError = null;\n    return this.networkStatus = NetworkStatus.ready;\n  }\n\n  public markError(error: ApolloError) {\n    this.networkStatus = NetworkStatus.error;\n    this.lastWrite = void 0;\n\n    this.reset();\n\n    if (error.graphQLErrors) {\n      this.graphQLErrors = error.graphQLErrors;\n    }\n\n    if (error.networkError) {\n      this.networkError = error.networkError;\n    }\n\n    return error;\n  }\n}\n\nexport function shouldWriteResult<T>(\n  result: FetchResult<T>,\n  errorPolicy: ErrorPolicy = \"none\",\n) {\n  const ignoreErrors =\n    errorPolicy === \"ignore\" ||\n    errorPolicy === \"all\";\n  let writeWithErrors = !graphQLResultHasError(result);\n  if (!writeWithErrors && ignoreErrors && result.data) {\n    writeWithErrors = true;\n  }\n  return writeWithErrors;\n}\n","import { invariant, InvariantError } from '../utilities/globals';\n\nimport { DocumentNode } from 'graphql';\n// TODO(brian): A hack until this issue is resolved (https://github.com/graphql/graphql-js/issues/3356)\ntype OperationTypeNode = any;\nimport { equal } from '@wry/equality';\n\nimport { ApolloLink, execute, FetchResult } from '../link/core';\nimport { Cache, ApolloCache, canonicalStringify } from '../cache';\n\nimport {\n  getDefaultValues,\n  getOperationDefinition,\n  getOperationName,\n  hasClientExports,\n  graphQLResultHasError,\n  removeConnectionDirectiveFromDocument,\n  canUseWeakMap,\n  ObservableSubscription,\n  Observable,\n  asyncMap,\n  isNonEmptyArray,\n  Concast,\n  ConcastSourcesIterable,\n  makeUniqueId,\n  isDocumentNode,\n  isNonNullObject,\n} from '../utilities';\nimport { ApolloError, isApolloError } from '../errors';\nimport {\n  QueryOptions,\n  WatchQueryOptions,\n  SubscriptionOptions,\n  MutationOptions,\n  WatchQueryFetchPolicy,\n  ErrorPolicy,\n  MutationFetchPolicy,\n} from './watchQueryOptions';\nimport { ObservableQuery, applyNextFetchPolicy, logMissingFieldErrors } from './ObservableQuery';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport {\n  ApolloQueryResult,\n  OperationVariables,\n  MutationUpdaterFunction,\n  OnQueryUpdated,\n  InternalRefetchQueriesInclude,\n  InternalRefetchQueriesOptions,\n  InternalRefetchQueriesResult,\n  InternalRefetchQueriesMap,\n} from './types';\nimport { LocalState } from './LocalState';\n\nimport {\n  QueryInfo,\n  QueryStoreValue,\n  shouldWriteResult,\n  CacheWriteBehavior,\n} from './QueryInfo';\n\nconst { hasOwnProperty } = Object.prototype;\n\ninterface MutationStoreValue {\n  mutation: DocumentNode;\n  variables: Record<string, any>;\n  loading: boolean;\n  error: Error | null;\n}\n\ntype UpdateQueries<TData> = MutationOptions<TData, any, any>[\"updateQueries\"];\n\ninterface TransformCacheEntry {\n  document: DocumentNode;\n  hasClientExports: boolean;\n  hasForcedResolvers: boolean;\n  clientQuery: DocumentNode | null;\n  serverQuery: DocumentNode | null;\n  defaultVars: OperationVariables;\n  asQuery: DocumentNode;\n}\n\nexport class QueryManager<TStore> {\n  public cache: ApolloCache<TStore>;\n  public link: ApolloLink;\n  public readonly assumeImmutableResults: boolean;\n  public readonly ssrMode: boolean;\n\n  private queryDeduplication: boolean;\n  private clientAwareness: Record<string, string> = {};\n  private localState: LocalState<TStore>;\n\n  private onBroadcast?: () => void;\n  public mutationStore?: {\n    [mutationId: string]: MutationStoreValue;\n  };\n\n  // All the queries that the QueryManager is currently managing (not\n  // including mutations and subscriptions).\n  private queries = new Map<string, QueryInfo>();\n\n  // Maps from queryId strings to Promise rejection functions for\n  // currently active queries and fetches.\n  private fetchCancelFns = new Map<string, (error: any) => any>();\n\n  constructor({\n    cache,\n    link,\n    queryDeduplication = false,\n    onBroadcast,\n    ssrMode = false,\n    clientAwareness = {},\n    localState,\n    assumeImmutableResults,\n  }: {\n    cache: ApolloCache<TStore>;\n    link: ApolloLink;\n    queryDeduplication?: boolean;\n    onBroadcast?: () => void;\n    ssrMode?: boolean;\n    clientAwareness?: Record<string, string>;\n    localState?: LocalState<TStore>;\n    assumeImmutableResults?: boolean;\n  }) {\n    this.cache = cache;\n    this.link = link;\n    this.queryDeduplication = queryDeduplication;\n    this.clientAwareness = clientAwareness;\n    this.localState = localState || new LocalState({ cache });\n    this.ssrMode = ssrMode;\n    this.assumeImmutableResults = !!assumeImmutableResults;\n    if ((this.onBroadcast = onBroadcast)) {\n      this.mutationStore = Object.create(null);\n    }\n  }\n\n  /**\n   * Call this method to terminate any active query processes, making it safe\n   * to dispose of this QueryManager instance.\n   */\n  public stop() {\n    this.queries.forEach((_info, queryId) => {\n      this.stopQueryNoBroadcast(queryId);\n    });\n\n    this.cancelPendingFetches(\n      new InvariantError('QueryManager stopped while query was in flight'),\n    );\n  }\n\n  private cancelPendingFetches(error: Error) {\n    this.fetchCancelFns.forEach(cancel => cancel(error));\n    this.fetchCancelFns.clear();\n  }\n\n  public async mutate<\n    TData,\n    TVariables,\n    TContext,\n    TCache extends ApolloCache<any>\n  >({\n    mutation,\n    variables,\n    optimisticResponse,\n    updateQueries,\n    refetchQueries = [],\n    awaitRefetchQueries = false,\n    update: updateWithProxyFn,\n    onQueryUpdated,\n    errorPolicy = 'none',\n    fetchPolicy = 'network-only',\n    keepRootFields,\n    context,\n  }: MutationOptions<TData, TVariables, TContext>): Promise<FetchResult<TData>> {\n    invariant(\n      mutation,\n      'mutation option is required. You must specify your GraphQL document in the mutation option.',\n    );\n\n    invariant(\n      fetchPolicy === 'network-only' ||\n      fetchPolicy === 'no-cache',\n      \"Mutations support only 'network-only' or 'no-cache' fetchPolicy strings. The default `network-only` behavior automatically writes mutation results to the cache. Passing `no-cache` skips the cache write.\"\n    );\n\n    const mutationId = this.generateMutationId();\n    mutation = this.transform(mutation).document;\n\n    variables = this.getVariables(mutation, variables) as TVariables;\n\n    if (this.transform(mutation).hasClientExports) {\n      variables = await this.localState.addExportedVariables(mutation, variables, context) as TVariables;\n    }\n\n    const mutationStoreValue =\n      this.mutationStore &&\n      (this.mutationStore[mutationId] = {\n        mutation,\n        variables,\n        loading: true,\n        error: null,\n      } as MutationStoreValue);\n\n    if (optimisticResponse) {\n      this.markMutationOptimistic<\n        TData,\n        TVariables,\n        TContext,\n        TCache\n      >(optimisticResponse, {\n        mutationId,\n        document: mutation,\n        variables,\n        fetchPolicy,\n        errorPolicy,\n        context,\n        updateQueries,\n        update: updateWithProxyFn,\n        keepRootFields,\n      });\n    }\n\n    this.broadcastQueries();\n\n    const self = this;\n\n    return new Promise((resolve, reject) => {\n      return asyncMap(\n        self.getObservableFromLink(\n          mutation,\n          {\n            ...context,\n            optimisticResponse,\n          },\n          variables,\n          false,\n        ),\n\n        (result: FetchResult<TData>) => {\n          if (graphQLResultHasError(result) && errorPolicy === 'none') {\n            throw new ApolloError({\n              graphQLErrors: result.errors,\n            });\n          }\n\n          if (mutationStoreValue) {\n            mutationStoreValue.loading = false;\n            mutationStoreValue.error = null;\n          }\n\n          const storeResult: typeof result = { ...result };\n\n          if (typeof refetchQueries === \"function\") {\n            refetchQueries = refetchQueries(storeResult);\n          }\n\n          if (errorPolicy === 'ignore' &&\n              graphQLResultHasError(storeResult)) {\n            delete storeResult.errors;\n          }\n\n          return self.markMutationResult<\n            TData,\n            TVariables,\n            TContext,\n            TCache\n          >({\n            mutationId,\n            result: storeResult,\n            document: mutation,\n            variables,\n            fetchPolicy,\n            errorPolicy,\n            context,\n            update: updateWithProxyFn,\n            updateQueries,\n            awaitRefetchQueries,\n            refetchQueries,\n            removeOptimistic: optimisticResponse ? mutationId : void 0,\n            onQueryUpdated,\n            keepRootFields,\n          });\n        },\n\n      ).subscribe({\n        next(storeResult) {\n          self.broadcastQueries();\n\n          // At the moment, a mutation can have only one result, so we can\n          // immediately resolve upon receiving the first result. In the future,\n          // mutations containing @defer or @stream directives might receive\n          // multiple FetchResult payloads from the ApolloLink chain, so we will\n          // probably need to collect those results in this next method and call\n          // resolve only later, in an observer.complete function.\n          resolve(storeResult);\n        },\n\n        error(err: Error) {\n          if (mutationStoreValue) {\n            mutationStoreValue.loading = false;\n            mutationStoreValue.error = err;\n          }\n\n          if (optimisticResponse) {\n            self.cache.removeOptimistic(mutationId);\n          }\n\n          self.broadcastQueries();\n\n          reject(\n            err instanceof ApolloError ? err : new ApolloError({\n              networkError: err,\n            }),\n          );\n        },\n      });\n    });\n  }\n\n  public markMutationResult<\n    TData,\n    TVariables,\n    TContext,\n    TCache extends ApolloCache<any>\n  >(\n    mutation: {\n      mutationId: string;\n      result: FetchResult<TData>;\n      document: DocumentNode;\n      variables?: TVariables;\n      fetchPolicy?: MutationFetchPolicy;\n      errorPolicy: ErrorPolicy;\n      context?: TContext;\n      updateQueries: UpdateQueries<TData>;\n      update?: MutationUpdaterFunction<TData, TVariables, TContext, TCache>;\n      awaitRefetchQueries?: boolean;\n      refetchQueries?: InternalRefetchQueriesInclude;\n      removeOptimistic?: string;\n      onQueryUpdated?: OnQueryUpdated<any>;\n      keepRootFields?: boolean;\n    },\n    cache = this.cache,\n  ): Promise<FetchResult<TData>> {\n    let { result } = mutation;\n    const cacheWrites: Cache.WriteOptions[] = [];\n    const skipCache = mutation.fetchPolicy === \"no-cache\";\n\n    if (!skipCache && shouldWriteResult(result, mutation.errorPolicy)) {\n      cacheWrites.push({\n        result: result.data,\n        dataId: 'ROOT_MUTATION',\n        query: mutation.document,\n        variables: mutation.variables,\n      });\n\n      const { updateQueries } = mutation;\n      if (updateQueries) {\n        this.queries.forEach(({ observableQuery }, queryId) => {\n          const queryName = observableQuery && observableQuery.queryName;\n          if (!queryName || !hasOwnProperty.call(updateQueries, queryName)) {\n            return;\n          }\n          const updater = updateQueries[queryName];\n          const { document, variables } = this.queries.get(queryId)!;\n\n          // Read the current query result from the store.\n          const { result: currentQueryResult, complete } = cache.diff<TData>({\n            query: document!,\n            variables,\n            returnPartialData: true,\n            optimistic: false,\n          });\n\n          if (complete && currentQueryResult) {\n            // Run our reducer using the current query result and the mutation result.\n            const nextQueryResult = updater(currentQueryResult, {\n              mutationResult: result,\n              queryName: document && getOperationName(document) || void 0,\n              queryVariables: variables!,\n            });\n\n            // Write the modified result back into the store if we got a new result.\n            if (nextQueryResult) {\n              cacheWrites.push({\n                result: nextQueryResult,\n                dataId: 'ROOT_QUERY',\n                query: document!,\n                variables,\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      cacheWrites.length > 0 ||\n      mutation.refetchQueries ||\n      mutation.update ||\n      mutation.onQueryUpdated ||\n      mutation.removeOptimistic\n    ) {\n      const results: any[] = [];\n\n      this.refetchQueries({\n        updateCache: (cache: TCache) => {\n          if (!skipCache) {\n            cacheWrites.forEach(write => cache.write(write));\n          }\n\n          // If the mutation has some writes associated with it then we need to\n          // apply those writes to the store by running this reducer again with\n          // a write action.\n          const { update } = mutation;\n          if (update) {\n            if (!skipCache) {\n              // Re-read the ROOT_MUTATION data we just wrote into the cache\n              // (the first cache.write call in the cacheWrites.forEach loop\n              // above), so field read functions have a chance to run for\n              // fields within mutation result objects.\n              const diff = cache.diff<TData>({\n                id: \"ROOT_MUTATION\",\n                // The cache complains if passed a mutation where it expects a\n                // query, so we transform mutations and subscriptions to queries\n                // (only once, thanks to this.transformCache).\n                query: this.transform(mutation.document).asQuery,\n                variables: mutation.variables,\n                optimistic: false,\n                returnPartialData: true,\n              });\n\n              if (diff.complete) {\n                result = { ...result, data: diff.result };\n              }\n            }\n\n            update(cache, result, {\n              context: mutation.context,\n              variables: mutation.variables,\n            });\n          }\n\n          // TODO Do this with cache.evict({ id: 'ROOT_MUTATION' }) but make it\n          // shallow to allow rolling back optimistic evictions.\n          if (!skipCache && !mutation.keepRootFields) {\n            cache.modify({\n              id: 'ROOT_MUTATION',\n              fields(value, { fieldName, DELETE }) {\n                return fieldName === \"__typename\" ? value : DELETE;\n              },\n            });\n          }\n        },\n\n        include: mutation.refetchQueries,\n\n        // Write the final mutation.result to the root layer of the cache.\n        optimistic: false,\n\n        // Remove the corresponding optimistic layer at the same time as we\n        // write the final non-optimistic result.\n        removeOptimistic: mutation.removeOptimistic,\n\n        // Let the caller of client.mutate optionally determine the refetching\n        // behavior for watched queries after the mutation.update function runs.\n        // If no onQueryUpdated function was provided for this mutation, pass\n        // null instead of undefined to disable the default refetching behavior.\n        onQueryUpdated: mutation.onQueryUpdated || null,\n\n      }).forEach(result => results.push(result));\n\n      if (mutation.awaitRefetchQueries || mutation.onQueryUpdated) {\n        // Returning a promise here makes the mutation await that promise, so we\n        // include results in that promise's work if awaitRefetchQueries or an\n        // onQueryUpdated function was specified.\n        return Promise.all(results).then(() => result);\n      }\n    }\n\n    return Promise.resolve(result);\n  }\n\n  public markMutationOptimistic<TData, TVariables, TContext, TCache extends ApolloCache<any>>(\n    optimisticResponse: any,\n    mutation: {\n      mutationId: string;\n      document: DocumentNode;\n      variables?: TVariables;\n      fetchPolicy?: MutationFetchPolicy;\n      errorPolicy: ErrorPolicy;\n      context?: TContext;\n      updateQueries: UpdateQueries<TData>,\n      update?: MutationUpdaterFunction<TData, TVariables, TContext, TCache>;\n      keepRootFields?: boolean,\n    },\n  ) {\n    const data = typeof optimisticResponse === \"function\"\n      ? optimisticResponse(mutation.variables)\n      : optimisticResponse;\n\n    return this.cache.recordOptimisticTransaction(cache => {\n      try {\n        this.markMutationResult<TData, TVariables, TContext, TCache>({\n          ...mutation,\n          result: { data },\n        }, cache);\n      } catch (error) {\n        invariant.error(error);\n      }\n    }, mutation.mutationId);\n  }\n\n  public fetchQuery<TData, TVars>(\n    queryId: string,\n    options: WatchQueryOptions<TVars, TData>,\n    networkStatus?: NetworkStatus,\n  ): Promise<ApolloQueryResult<TData>> {\n    return this.fetchQueryObservable<TData, TVars>(\n      queryId,\n      options,\n      networkStatus,\n    ).promise;\n  }\n\n  public getQueryStore() {\n    const store: Record<string, QueryStoreValue> = Object.create(null);\n    this.queries.forEach((info, queryId) => {\n      store[queryId] = {\n        variables: info.variables,\n        networkStatus: info.networkStatus,\n        networkError: info.networkError,\n        graphQLErrors: info.graphQLErrors,\n      };\n    });\n    return store;\n  }\n\n  public resetErrors(queryId: string) {\n    const queryInfo = this.queries.get(queryId);\n    if (queryInfo) {\n      queryInfo.networkError = undefined;\n      queryInfo.graphQLErrors = [];\n    }\n  }\n\n  private transformCache = new (\n    canUseWeakMap ? WeakMap : Map\n  )<DocumentNode, TransformCacheEntry>();\n\n  public transform(document: DocumentNode) {\n    const { transformCache } = this;\n\n    if (!transformCache.has(document)) {\n      const transformed = this.cache.transformDocument(document);\n      const forLink = removeConnectionDirectiveFromDocument(\n        this.cache.transformForLink(transformed));\n\n      const clientQuery = this.localState.clientQuery(transformed);\n      const serverQuery = forLink && this.localState.serverQuery(forLink);\n\n      const cacheEntry: TransformCacheEntry = {\n        document: transformed,\n        // TODO These two calls (hasClientExports and shouldForceResolvers)\n        // could probably be merged into a single traversal.\n        hasClientExports: hasClientExports(transformed),\n        hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\n        clientQuery,\n        serverQuery,\n        defaultVars: getDefaultValues(\n          getOperationDefinition(transformed)\n        ) as OperationVariables,\n        // Transform any mutation or subscription operations to query operations\n        // so we can read/write them from/to the cache.\n        asQuery: {\n          ...transformed,\n          definitions: transformed.definitions.map(def => {\n            if (def.kind === \"OperationDefinition\" &&\n                def.operation !== \"query\") {\n              return { ...def, operation: \"query\" as OperationTypeNode };\n            }\n            return def;\n          }),\n        }\n      };\n\n      const add = (doc: DocumentNode | null) => {\n        if (doc && !transformCache.has(doc)) {\n          transformCache.set(doc, cacheEntry);\n        }\n      }\n      // Add cacheEntry to the transformCache using several different keys,\n      // since any one of these documents could end up getting passed to the\n      // transform method again in the future.\n      add(document);\n      add(transformed);\n      add(clientQuery);\n      add(serverQuery);\n    }\n\n    return transformCache.get(document)!;\n  }\n\n  private getVariables<TVariables>(\n    document: DocumentNode,\n    variables?: TVariables,\n  ): OperationVariables {\n    return {\n      ...this.transform(document).defaultVars,\n      ...variables,\n    };\n  }\n\n  public watchQuery<T, TVariables = OperationVariables>(\n    options: WatchQueryOptions<TVariables, T>,\n  ): ObservableQuery<T, TVariables> {\n    // assign variable default values if supplied\n    options = {\n      ...options,\n      variables: this.getVariables(\n        options.query,\n        options.variables,\n      ) as TVariables,\n    };\n\n    if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n      options.notifyOnNetworkStatusChange = false;\n    }\n\n    const queryInfo = new QueryInfo(this);\n    const observable = new ObservableQuery<T, TVariables>({\n      queryManager: this,\n      queryInfo,\n      options,\n    });\n\n    this.queries.set(observable.queryId, queryInfo);\n\n    queryInfo.init({\n      document: options.query,\n      observableQuery: observable,\n      variables: options.variables,\n    });\n\n    return observable;\n  }\n\n  public query<TData, TVars = OperationVariables>(\n    options: QueryOptions<TVars, TData>,\n    queryId = this.generateQueryId(),\n  ): Promise<ApolloQueryResult<TData>> {\n    invariant(\n      options.query,\n      'query option is required. You must specify your GraphQL document ' +\n        'in the query option.',\n    );\n\n    invariant(\n      options.query.kind === 'Document',\n      'You must wrap the query string in a \"gql\" tag.',\n    );\n\n    invariant(\n      !(options as any).returnPartialData,\n      'returnPartialData option only supported on watchQuery.',\n    );\n\n    invariant(\n      !(options as any).pollInterval,\n      'pollInterval option only supported on watchQuery.',\n    );\n\n    return this.fetchQuery<TData, TVars>(\n      queryId,\n      options,\n    ).finally(() => this.stopQuery(queryId));\n  }\n\n  private queryIdCounter = 1;\n  public generateQueryId() {\n    return String(this.queryIdCounter++);\n  }\n\n  private requestIdCounter = 1;\n  public generateRequestId() {\n    return this.requestIdCounter++;\n  }\n\n  private mutationIdCounter = 1;\n  public generateMutationId() {\n    return String(this.mutationIdCounter++);\n  }\n\n  public stopQueryInStore(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryInStoreNoBroadcast(queryId: string) {\n    const queryInfo = this.queries.get(queryId);\n    if (queryInfo) queryInfo.stop();\n  }\n\n  public clearStore(options: Cache.ResetOptions = {\n    discardWatches: true,\n  }): Promise<void> {\n    // Before we have sent the reset action to the store, we can no longer\n    // rely on the results returned by in-flight requests since these may\n    // depend on values that previously existed in the data portion of the\n    // store. So, we cancel the promises and observers that we have issued\n    // so far and not yet resolved (in the case of queries).\n    this.cancelPendingFetches(new InvariantError(\n      'Store reset while query was in flight (not completed in link chain)',\n    ));\n\n    this.queries.forEach(queryInfo => {\n      if (queryInfo.observableQuery) {\n        // Set loading to true so listeners don't trigger unless they want\n        // results with partial data.\n        queryInfo.networkStatus = NetworkStatus.loading;\n      } else {\n        queryInfo.stop();\n      }\n    });\n\n    if (this.mutationStore) {\n      this.mutationStore = Object.create(null);\n    }\n\n    // begin removing data from the store\n    return this.cache.reset(options);\n  }\n\n  public getObservableQueries(\n    include: InternalRefetchQueriesInclude = \"active\",\n  ) {\n    const queries = new Map<string, ObservableQuery<any>>();\n    const queryNamesAndDocs = new Map<string | DocumentNode, boolean>();\n    const legacyQueryOptions = new Set<QueryOptions>();\n\n    if (Array.isArray(include)) {\n      include.forEach(desc => {\n        if (typeof desc === \"string\") {\n          queryNamesAndDocs.set(desc, false);\n        } else if (isDocumentNode(desc)) {\n          queryNamesAndDocs.set(this.transform(desc).document, false);\n        } else if (isNonNullObject(desc) && desc.query) {\n          legacyQueryOptions.add(desc);\n        }\n      });\n    }\n\n    this.queries.forEach(({ observableQuery: oq, document }, queryId) => {\n      if (oq) {\n        if (include === \"all\") {\n          queries.set(queryId, oq);\n          return;\n        }\n\n        const {\n          queryName,\n          options: { fetchPolicy },\n        } = oq;\n\n        if (\n          fetchPolicy === \"standby\" ||\n          (include === \"active\" && !oq.hasObservers())\n        ) {\n          return;\n        }\n\n        if (\n          include === \"active\" ||\n          (queryName && queryNamesAndDocs.has(queryName)) ||\n          (document && queryNamesAndDocs.has(document))\n        ) {\n          queries.set(queryId, oq);\n          if (queryName) queryNamesAndDocs.set(queryName, true);\n          if (document) queryNamesAndDocs.set(document, true);\n        }\n      }\n    });\n\n    if (legacyQueryOptions.size) {\n      legacyQueryOptions.forEach((options: QueryOptions) => {\n        // We will be issuing a fresh network request for this query, so we\n        // pre-allocate a new query ID here, using a special prefix to enable\n        // cleaning up these temporary queries later, after fetching.\n        const queryId = makeUniqueId(\"legacyOneTimeQuery\");\n        const queryInfo = this.getQuery(queryId).init({\n          document: options.query,\n          variables: options.variables,\n        });\n        const oq = new ObservableQuery({\n          queryManager: this,\n          queryInfo,\n          options: {\n            ...options,\n            fetchPolicy: \"network-only\",\n          },\n        });\n        invariant(oq.queryId === queryId);\n        queryInfo.setObservableQuery(oq);\n        queries.set(queryId, oq);\n      });\n    }\n\n    if (__DEV__ && queryNamesAndDocs.size) {\n      queryNamesAndDocs.forEach((included, nameOrDoc) => {\n        if (!included) {\n          invariant.warn(`Unknown query ${\n            typeof nameOrDoc === \"string\" ? \"named \" : \"\"\n          }${\n            JSON.stringify(nameOrDoc, null, 2)\n          } requested in refetchQueries options.include array`);\n        }\n      });\n    }\n\n    return queries;\n  }\n\n  public reFetchObservableQueries(\n    includeStandby: boolean = false,\n  ): Promise<ApolloQueryResult<any>[]> {\n    const observableQueryPromises: Promise<ApolloQueryResult<any>>[] = [];\n\n    this.getObservableQueries(\n      includeStandby ? \"all\" : \"active\"\n    ).forEach((observableQuery, queryId) => {\n      const { fetchPolicy } = observableQuery.options;\n      observableQuery.resetLastResults();\n      if (includeStandby ||\n          (fetchPolicy !== \"standby\" &&\n           fetchPolicy !== \"cache-only\")) {\n        observableQueryPromises.push(observableQuery.refetch());\n      }\n      this.getQuery(queryId).setDiff(null);\n    });\n\n    this.broadcastQueries();\n\n    return Promise.all(observableQueryPromises);\n  }\n\n  public setObservableQuery(observableQuery: ObservableQuery<any, any>) {\n    this.getQuery(observableQuery.queryId).setObservableQuery(observableQuery);\n  }\n\n  public startGraphQLSubscription<T = any>({\n    query,\n    fetchPolicy,\n    errorPolicy,\n    variables,\n    context = {},\n  }: SubscriptionOptions): Observable<FetchResult<T>> {\n    query = this.transform(query).document;\n    variables = this.getVariables(query, variables);\n\n    const makeObservable = (variables: OperationVariables) =>\n      this.getObservableFromLink<T>(\n        query,\n        context,\n        variables,\n      ).map(result => {\n        if (fetchPolicy !== 'no-cache') {\n          // the subscription interface should handle not sending us results we no longer subscribe to.\n          // XXX I don't think we ever send in an object with errors, but we might in the future...\n          if (shouldWriteResult(result, errorPolicy)) {\n            this.cache.write({\n              query,\n              result: result.data,\n              dataId: 'ROOT_SUBSCRIPTION',\n              variables: variables,\n            });\n          }\n\n          this.broadcastQueries();\n        }\n\n        if (graphQLResultHasError(result)) {\n          throw new ApolloError({\n            graphQLErrors: result.errors,\n          });\n        }\n\n        return result;\n      });\n\n    if (this.transform(query).hasClientExports) {\n      const observablePromise = this.localState.addExportedVariables(\n        query,\n        variables,\n        context,\n      ).then(makeObservable);\n\n      return new Observable<FetchResult<T>>(observer => {\n        let sub: ObservableSubscription | null = null;\n        observablePromise.then(\n          observable => sub = observable.subscribe(observer),\n          observer.error,\n        );\n        return () => sub && sub.unsubscribe();\n      });\n    }\n\n    return makeObservable(variables);\n  }\n\n  public stopQuery(queryId: string) {\n    this.stopQueryNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryNoBroadcast(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.removeQuery(queryId);\n  }\n\n  public removeQuery(queryId: string) {\n    // teardown all links\n    // Both `QueryManager.fetchRequest` and `QueryManager.query` create separate promises\n    // that each add their reject functions to fetchCancelFns.\n    // A query created with `QueryManager.query()` could trigger a `QueryManager.fetchRequest`.\n    // The same queryId could have two rejection fns for two promises\n    this.fetchCancelFns.delete(queryId);\n    this.getQuery(queryId).stop();\n    this.queries.delete(queryId);\n  }\n\n  public broadcastQueries() {\n    if (this.onBroadcast) this.onBroadcast();\n    this.queries.forEach(info => info.notify());\n  }\n\n  public getLocalState(): LocalState<TStore> {\n    return this.localState;\n  }\n\n  private inFlightLinkObservables = new Map<\n    DocumentNode,\n    Map<string, Observable<FetchResult>>\n  >();\n\n  private getObservableFromLink<T = any>(\n    query: DocumentNode,\n    context: any,\n    variables?: OperationVariables,\n    deduplication: boolean =\n      // Prefer context.queryDeduplication if specified.\n      context?.queryDeduplication ??\n      this.queryDeduplication,\n  ): Observable<FetchResult<T>> {\n    let observable: Observable<FetchResult<T>>;\n\n    const { serverQuery } = this.transform(query);\n    if (serverQuery) {\n      const { inFlightLinkObservables, link } = this;\n\n      const operation = {\n        query: serverQuery,\n        variables,\n        operationName: getOperationName(serverQuery) || void 0,\n        context: this.prepareContext({\n          ...context,\n          forceFetch: !deduplication\n        }),\n      };\n\n      context = operation.context;\n\n      if (deduplication) {\n        const byVariables = inFlightLinkObservables.get(serverQuery) || new Map();\n        inFlightLinkObservables.set(serverQuery, byVariables);\n\n        const varJson = canonicalStringify(variables);\n        observable = byVariables.get(varJson);\n\n        if (!observable) {\n          const concast = new Concast([\n            execute(link, operation) as Observable<FetchResult<T>>\n          ]);\n\n          byVariables.set(varJson, observable = concast);\n\n          concast.cleanup(() => {\n            if (byVariables.delete(varJson) &&\n                byVariables.size < 1) {\n              inFlightLinkObservables.delete(serverQuery);\n            }\n          });\n        }\n\n      } else {\n        observable = new Concast([\n          execute(link, operation) as Observable<FetchResult<T>>\n        ]);\n      }\n    } else {\n      observable = new Concast([\n        Observable.of({ data: {} } as FetchResult<T>)\n      ]);\n      context = this.prepareContext(context);\n    }\n\n    const { clientQuery } = this.transform(query);\n    if (clientQuery) {\n      observable = asyncMap(observable, result => {\n        return this.localState.runResolvers({\n          document: clientQuery,\n          remoteResult: result,\n          context,\n          variables,\n        });\n      });\n    }\n\n    return observable;\n  }\n\n  private getResultsFromLink<TData, TVars>(\n    queryInfo: QueryInfo,\n    cacheWriteBehavior: CacheWriteBehavior,\n    options: Pick<WatchQueryOptions<TVars, TData>,\n      | \"variables\"\n      | \"context\"\n      | \"fetchPolicy\"\n      | \"errorPolicy\">,\n  ): Observable<ApolloQueryResult<TData>> {\n    const requestId = queryInfo.lastRequestId = this.generateRequestId();\n\n    return asyncMap(\n      this.getObservableFromLink(\n        queryInfo.document!,\n        options.context,\n        options.variables,\n      ),\n\n      result => {\n        const hasErrors = isNonEmptyArray(result.errors);\n\n        // If we interrupted this request by calling getResultsFromLink again\n        // with the same QueryInfo object, we ignore the old results.\n        if (requestId >= queryInfo.lastRequestId) {\n          if (hasErrors && options.errorPolicy === \"none\") {\n            // Throwing here effectively calls observer.error.\n            throw queryInfo.markError(new ApolloError({\n              graphQLErrors: result.errors,\n            }));\n          }\n          queryInfo.markResult(result, options, cacheWriteBehavior);\n          queryInfo.markReady();\n        }\n\n        const aqr: ApolloQueryResult<TData> = {\n          data: result.data,\n          loading: false,\n          networkStatus: queryInfo.networkStatus || NetworkStatus.ready,\n        };\n\n        if (hasErrors && options.errorPolicy !== \"ignore\") {\n          aqr.errors = result.errors;\n        }\n\n        return aqr;\n      },\n\n      networkError => {\n        const error = isApolloError(networkError)\n          ? networkError\n          : new ApolloError({ networkError });\n\n        // Avoid storing errors from older interrupted queries.\n        if (requestId >= queryInfo.lastRequestId) {\n          queryInfo.markError(error);\n        }\n\n        throw error;\n      },\n    );\n  }\n\n  public fetchQueryObservable<TData, TVars>(\n    queryId: string,\n    options: WatchQueryOptions<TVars, TData>,\n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus = NetworkStatus.loading,\n  ): Concast<ApolloQueryResult<TData>> {\n    const query = this.transform(options.query).document;\n    const variables = this.getVariables(query, options.variables) as TVars;\n    const queryInfo = this.getQuery(queryId);\n\n    let {\n      fetchPolicy = \"cache-first\" as WatchQueryFetchPolicy,\n      errorPolicy = \"none\" as ErrorPolicy,\n      returnPartialData = false,\n      notifyOnNetworkStatusChange = false,\n      context = {},\n    } = options;\n\n    const normalized = Object.assign({}, options, {\n      query,\n      variables,\n      fetchPolicy,\n      errorPolicy,\n      returnPartialData,\n      notifyOnNetworkStatusChange,\n      context,\n    });\n\n    const fromVariables = (variables: TVars) => {\n      // Since normalized is always a fresh copy of options, it's safe to\n      // modify its properties here, rather than creating yet another new\n      // WatchQueryOptions object.\n      normalized.variables = variables;\n      return this.fetchQueryByPolicy<TData, TVars>(\n        queryInfo,\n        normalized,\n        networkStatus,\n      );\n    };\n\n    // This cancel function needs to be set before the concast is created,\n    // in case concast creation synchronously cancels the request.\n    this.fetchCancelFns.set(queryId, reason => {\n      // This delay ensures the concast variable has been initialized.\n      setTimeout(() => concast.cancel(reason));\n    });\n\n    // A Concast<T> can be created either from an Iterable<Observable<T>>\n    // or from a PromiseLike<Iterable<Observable<T>>>, where T in this\n    // case is ApolloQueryResult<TData>.\n    const concast = new Concast(\n      // If the query has @export(as: ...) directives, then we need to\n      // process those directives asynchronously. When there are no\n      // @export directives (the common case), we deliberately avoid\n      // wrapping the result of this.fetchQueryByPolicy in a Promise,\n      // since the timing of result delivery is (unfortunately) important\n      // for backwards compatibility. TODO This code could be simpler if\n      // we deprecated and removed LocalState.\n      this.transform(normalized.query).hasClientExports\n        ? this.localState.addExportedVariables(\n          normalized.query,\n          normalized.variables,\n          normalized.context,\n        ).then(fromVariables)\n        : fromVariables(normalized.variables!)\n    );\n\n    concast.cleanup(() => {\n      this.fetchCancelFns.delete(queryId);\n      applyNextFetchPolicy(options);\n    });\n\n    return concast;\n  }\n\n  public refetchQueries<TResult>({\n    updateCache,\n    include,\n    optimistic = false,\n    removeOptimistic = optimistic ? makeUniqueId(\"refetchQueries\") : void 0,\n    onQueryUpdated,\n  }: InternalRefetchQueriesOptions<ApolloCache<TStore>, TResult>\n  ): InternalRefetchQueriesMap<TResult> {\n    const includedQueriesById = new Map<string, {\n      oq: ObservableQuery<any>;\n      lastDiff?: Cache.DiffResult<any>;\n      diff?: Cache.DiffResult<any>;\n    }>();\n\n    if (include) {\n      this.getObservableQueries(include).forEach((oq, queryId) => {\n        includedQueriesById.set(queryId, {\n          oq,\n          lastDiff: this.getQuery(queryId).getDiff(),\n        });\n      });\n    }\n\n    const results: InternalRefetchQueriesMap<TResult> = new Map;\n\n    if (updateCache) {\n      this.cache.batch({\n        update: updateCache,\n\n        // Since you can perform any combination of cache reads and/or writes in\n        // the cache.batch update function, its optimistic option can be either\n        // a boolean or a string, representing three distinct modes of\n        // operation:\n        //\n        // * false: read/write only the root layer\n        // * true: read/write the topmost layer\n        // * string: read/write a fresh optimistic layer with that ID string\n        //\n        // When typeof optimistic === \"string\", a new optimistic layer will be\n        // temporarily created within cache.batch with that string as its ID. If\n        // we then pass that same string as the removeOptimistic option, we can\n        // make cache.batch immediately remove the optimistic layer after\n        // running the updateCache function, triggering only one broadcast.\n        //\n        // However, the refetchQueries method accepts only true or false for its\n        // optimistic option (not string). We interpret true to mean a temporary\n        // optimistic layer should be created, to allow efficiently rolling back\n        // the effect of the updateCache function, which involves passing a\n        // string instead of true as the optimistic option to cache.batch, when\n        // refetchQueries receives optimistic: true.\n        //\n        // In other words, we are deliberately not supporting the use case of\n        // writing to an *existing* optimistic layer (using the refetchQueries\n        // updateCache function), since that would potentially interfere with\n        // other optimistic updates in progress. Instead, you can read/write\n        // only the root layer by passing optimistic: false to refetchQueries,\n        // or you can read/write a brand new optimistic layer that will be\n        // automatically removed by passing optimistic: true.\n        optimistic: optimistic && removeOptimistic || false,\n\n        // The removeOptimistic option can also be provided by itself, even if\n        // optimistic === false, to remove some previously-added optimistic\n        // layer safely and efficiently, like we do in markMutationResult.\n        //\n        // If an explicit removeOptimistic string is provided with optimistic:\n        // true, the removeOptimistic string will determine the ID of the\n        // temporary optimistic layer, in case that ever matters.\n        removeOptimistic,\n\n        onWatchUpdated(watch, diff, lastDiff) {\n          const oq =\n            watch.watcher instanceof QueryInfo &&\n            watch.watcher.observableQuery;\n\n          if (oq) {\n            if (onQueryUpdated) {\n              // Since we're about to handle this query now, remove it from\n              // includedQueriesById, in case it was added earlier because of\n              // options.include.\n              includedQueriesById.delete(oq.queryId);\n\n              let result: TResult | boolean | Promise<ApolloQueryResult<any>> =\n                onQueryUpdated(oq, diff, lastDiff);\n\n              if (result === true) {\n                // The onQueryUpdated function requested the default refetching\n                // behavior by returning true.\n                result = oq.refetch();\n              }\n\n              // Record the result in the results Map, as long as onQueryUpdated\n              // did not return false to skip/ignore this result.\n              if (result !== false) {\n                results.set(oq, result as InternalRefetchQueriesResult<TResult>);\n              }\n\n              // Allow the default cache broadcast to happen, except when\n              // onQueryUpdated returns false.\n              return result;\n            }\n\n            if (onQueryUpdated !== null) {\n              // If we don't have an onQueryUpdated function, and onQueryUpdated\n              // was not disabled by passing null, make sure this query is\n              // \"included\" like any other options.include-specified query.\n              includedQueriesById.set(oq.queryId, { oq, lastDiff, diff });\n            }\n          }\n        },\n      });\n    }\n\n    if (includedQueriesById.size) {\n      includedQueriesById.forEach(({ oq, lastDiff, diff }, queryId) => {\n        let result: TResult | boolean | Promise<ApolloQueryResult<any>> | undefined;\n\n        // If onQueryUpdated is provided, we want to use it for all included\n        // queries, even the QueryOptions ones.\n        if (onQueryUpdated) {\n          if (!diff) {\n            const info = oq[\"queryInfo\"];\n            info.reset(); // Force info.getDiff() to read from cache.\n            diff = info.getDiff();\n          }\n          result = onQueryUpdated(oq, diff, lastDiff);\n        }\n\n        // Otherwise, we fall back to refetching.\n        if (!onQueryUpdated || result === true) {\n          result = oq.refetch();\n        }\n\n        if (result !== false) {\n          results.set(oq, result as InternalRefetchQueriesResult<TResult>);\n        }\n\n        if (queryId.indexOf(\"legacyOneTimeQuery\") >= 0) {\n          this.stopQueryNoBroadcast(queryId);\n        }\n      });\n    }\n\n    if (removeOptimistic) {\n      // In case no updateCache callback was provided (so cache.batch was not\n      // called above, and thus did not already remove the optimistic layer),\n      // remove it here. Since this is a no-op when the layer has already been\n      // removed, we do it even if we called cache.batch above, since it's\n      // possible this.cache is an instance of some ApolloCache subclass other\n      // than InMemoryCache, and does not fully support the removeOptimistic\n      // option for cache.batch.\n      this.cache.removeOptimistic(removeOptimistic);\n    }\n\n    return results;\n  }\n\n  private fetchQueryByPolicy<TData, TVars>(\n    queryInfo: QueryInfo,\n    { query,\n      variables,\n      fetchPolicy,\n      refetchWritePolicy,\n      errorPolicy,\n      returnPartialData,\n      context,\n      notifyOnNetworkStatusChange,\n    }: WatchQueryOptions<TVars, TData>,\n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus: NetworkStatus,\n  ): ConcastSourcesIterable<ApolloQueryResult<TData>> {\n    const oldNetworkStatus = queryInfo.networkStatus;\n\n    queryInfo.init({\n      document: query,\n      variables,\n      networkStatus,\n    });\n\n    const readCache = () => queryInfo.getDiff(variables);\n\n    const resultsFromCache = (\n      diff: Cache.DiffResult<TData>,\n      networkStatus = queryInfo.networkStatus || NetworkStatus.loading,\n    ) => {\n      const data = diff.result;\n\n      if (__DEV__ &&\n          !returnPartialData &&\n          !equal(data, {})) {\n        logMissingFieldErrors(diff.missing);\n      }\n\n      const fromData = (data: TData | undefined) => Observable.of({\n        data,\n        loading: isNetworkRequestInFlight(networkStatus),\n        networkStatus,\n        ...(diff.complete ? null : { partial: true }),\n      } as ApolloQueryResult<TData>);\n\n      if (data && this.transform(query).hasForcedResolvers) {\n        return this.localState.runResolvers({\n          document: query,\n          remoteResult: { data },\n          context,\n          variables,\n          onlyRunForcedResolvers: true,\n        }).then(resolved => fromData(resolved.data || void 0));\n      }\n\n      return fromData(data);\n    };\n\n    const cacheWriteBehavior =\n      fetchPolicy === \"no-cache\" ? CacheWriteBehavior.FORBID :\n      ( // Watched queries must opt into overwriting existing data on refetch,\n        // by passing refetchWritePolicy: \"overwrite\" in their WatchQueryOptions.\n        networkStatus === NetworkStatus.refetch &&\n        refetchWritePolicy !== \"merge\"\n      ) ? CacheWriteBehavior.OVERWRITE\n        : CacheWriteBehavior.MERGE;\n\n    const resultsFromLink = () =>\n      this.getResultsFromLink<TData, TVars>(queryInfo, cacheWriteBehavior, {\n        variables,\n        context,\n        fetchPolicy,\n        errorPolicy,\n      });\n\n    const shouldNotify =\n      notifyOnNetworkStatusChange &&\n      typeof oldNetworkStatus === \"number\" &&\n      oldNetworkStatus !== networkStatus &&\n      isNetworkRequestInFlight(networkStatus);\n\n    switch (fetchPolicy) {\n    default: case \"cache-first\": {\n      const diff = readCache();\n\n      if (diff.complete) {\n        return [\n          resultsFromCache(diff, queryInfo.markReady()),\n        ];\n      }\n\n      if (returnPartialData || shouldNotify) {\n        return [\n          resultsFromCache(diff),\n          resultsFromLink(),\n        ];\n      }\n\n      return [\n        resultsFromLink(),\n      ];\n    }\n\n    case \"cache-and-network\": {\n      const diff = readCache();\n\n      if (diff.complete || returnPartialData || shouldNotify) {\n        return [\n          resultsFromCache(diff),\n          resultsFromLink(),\n        ];\n      }\n\n      return [\n        resultsFromLink(),\n      ];\n    }\n\n    case \"cache-only\":\n      return [\n        resultsFromCache(readCache(), queryInfo.markReady()),\n      ];\n\n    case \"network-only\":\n      if (shouldNotify) {\n        return [\n          resultsFromCache(readCache()),\n          resultsFromLink(),\n        ];\n      }\n\n      return [resultsFromLink()];\n\n    case \"no-cache\":\n      if (shouldNotify) {\n        return [\n          // Note that queryInfo.getDiff() for no-cache queries does not call\n          // cache.diff, but instead returns a { complete: false } stub result\n          // when there is no queryInfo.diff already defined.\n          resultsFromCache(queryInfo.getDiff()),\n          resultsFromLink(),\n        ];\n      }\n\n      return [resultsFromLink()];\n\n    case \"standby\":\n      return [];\n    }\n  }\n\n  private getQuery(queryId: string): QueryInfo {\n    if (queryId && !this.queries.has(queryId)) {\n      this.queries.set(queryId, new QueryInfo(this, queryId));\n    }\n    return this.queries.get(queryId)!;\n  }\n\n  private prepareContext(context = {}) {\n    const newContext = this.localState.prepareContext(context);\n    return {\n      ...newContext,\n      clientAwareness: this.clientAwareness,\n    };\n  }\n}\n","import { invariant, InvariantError } from '../utilities/globals';\n\nimport { ExecutionResult, DocumentNode } from 'graphql';\n\nimport { ApolloLink, FetchResult, GraphQLRequest, execute } from '../link/core';\nimport { ApolloCache, DataProxy } from '../cache';\nimport { Observable, compact } from '../utilities';\nimport { version } from '../version';\nimport { HttpLink, UriFunction } from '../link/http';\n\nimport { QueryManager } from './QueryManager';\nimport { ObservableQuery } from './ObservableQuery';\n\nimport {\n  ApolloQueryResult,\n  DefaultContext,\n  OperationVariables,\n  Resolvers,\n  RefetchQueriesOptions,\n  RefetchQueriesResult,\n  InternalRefetchQueriesResult,\n  RefetchQueriesInclude,\n} from './types';\n\nimport {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n  SubscriptionOptions,\n  WatchQueryFetchPolicy,\n} from './watchQueryOptions';\n\nimport {\n  LocalState,\n  FragmentMatcher,\n} from './LocalState';\n\nexport interface DefaultOptions {\n  watchQuery?: Partial<WatchQueryOptions<any, any>>;\n  query?: Partial<QueryOptions<any, any>>;\n  mutate?: Partial<MutationOptions<any, any, any>>;\n}\n\nlet hasSuggestedDevtools = false;\n\nexport type ApolloClientOptions<TCacheShape> = {\n  uri?: string | UriFunction;\n  credentials?: string;\n  headers?: Record<string, string>;\n  link?: ApolloLink;\n  cache: ApolloCache<TCacheShape>;\n  ssrForceFetchDelay?: number;\n  ssrMode?: boolean;\n  connectToDevTools?: boolean;\n  queryDeduplication?: boolean;\n  defaultOptions?: DefaultOptions;\n  assumeImmutableResults?: boolean;\n  resolvers?: Resolvers | Resolvers[];\n  typeDefs?: string | string[] | DocumentNode | DocumentNode[];\n  fragmentMatcher?: FragmentMatcher;\n  name?: string;\n  version?: string;\n};\n\ntype OptionsUnion<TData, TVariables, TContext> =\n  | WatchQueryOptions<TVariables, TData>\n  | QueryOptions<TVariables, TData>\n  | MutationOptions<TData, TVariables, TContext>;\n\nexport function mergeOptions<\n  TOptions extends OptionsUnion<any, any, any>\n>(\n  defaults: Partial<TOptions>,\n  options: TOptions,\n): TOptions {\n  return compact(defaults, options, options.variables && {\n    variables: {\n      ...defaults.variables,\n      ...options.variables,\n    },\n  });\n}\n\n/**\n * This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\n * and mutations) to a GraphQL spec-compliant server over a {@link NetworkInterface} instance,\n * receive results from the server and cache the results in a store. It also delivers updates\n * to GraphQL queries through {@link Observable} instances.\n */\nexport class ApolloClient<TCacheShape> implements DataProxy {\n  public link: ApolloLink;\n  public cache: ApolloCache<TCacheShape>;\n  public disableNetworkFetches: boolean;\n  public version: string;\n  public queryDeduplication: boolean;\n  public defaultOptions: DefaultOptions = {};\n  public readonly typeDefs: ApolloClientOptions<TCacheShape>['typeDefs'];\n\n  private queryManager: QueryManager<TCacheShape>;\n  private devToolsHookCb: Function;\n  private resetStoreCallbacks: Array<() => Promise<any>> = [];\n  private clearStoreCallbacks: Array<() => Promise<any>> = [];\n  private localState: LocalState<TCacheShape>;\n\n  /**\n   * Constructs an instance of {@link ApolloClient}.\n   *\n   * @param uri The GraphQL endpoint that Apollo Client will connect to. If\n   *            `link` is configured, this option is ignored.\n   * @param link The {@link ApolloLink} over which GraphQL documents will be resolved into a response.\n   *\n   * @param cache The initial cache to use in the data store.\n   *\n   * @param ssrMode Determines whether this is being run in Server Side Rendering (SSR) mode.\n   *\n   * @param ssrForceFetchDelay Determines the time interval before we force fetch queries for a\n   * server side render.\n   *\n   * @param queryDeduplication If set to false, a query will still be sent to the server even if a query\n   * with identical parameters (query, variables, operationName) is already in flight.\n   *\n   * @param defaultOptions Used to set application wide defaults for the\n   *                       options supplied to `watchQuery`, `query`, or\n   *                       `mutate`.\n   *\n   * @param assumeImmutableResults When this option is true, the client will assume results\n   *                               read from the cache are never mutated by application code,\n   *                               which enables substantial performance optimizations. Passing\n   *                               `{ freezeResults: true }` to the `InMemoryCache` constructor\n   *                               can help enforce this immutability.\n   *\n   * @param name A custom name that can be used to identify this client, when\n   *             using Apollo client awareness features. E.g. \"iOS\".\n   *\n   * @param version A custom version that can be used to identify this client,\n   *                when using Apollo client awareness features. This is the\n   *                version of your client, which you may want to increment on\n   *                new builds. This is NOT the version of Apollo Client that\n   *                you are using.\n   */\n  constructor(options: ApolloClientOptions<TCacheShape>) {\n    const {\n      uri,\n      credentials,\n      headers,\n      cache,\n      ssrMode = false,\n      ssrForceFetchDelay = 0,\n      connectToDevTools =\n        // Expose the client instance as window.__APOLLO_CLIENT__ and call\n        // onBroadcast in queryManager.broadcastQueries to enable browser\n        // devtools, but disable them by default in production.\n        typeof window === 'object' &&\n        !(window as any).__APOLLO_CLIENT__ &&\n        __DEV__,\n      queryDeduplication = true,\n      defaultOptions,\n      assumeImmutableResults = false,\n      resolvers,\n      typeDefs,\n      fragmentMatcher,\n      name: clientAwarenessName,\n      version: clientAwarenessVersion,\n    } = options;\n\n    let { link } = options;\n\n    if (!link) {\n      link = uri\n        ? new HttpLink({ uri, credentials, headers })\n        : ApolloLink.empty();\n    }\n\n    if (!cache) {\n      throw new InvariantError(\n        \"To initialize Apollo Client, you must specify a 'cache' property \" +\n        \"in the options object. \\n\" +\n        \"For more information, please visit: https://go.apollo.dev/c/docs\"\n      );\n    }\n\n    this.link = link;\n    this.cache = cache;\n    this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n    this.queryDeduplication = queryDeduplication;\n    this.defaultOptions = defaultOptions || {};\n    this.typeDefs = typeDefs;\n\n    if (ssrForceFetchDelay) {\n      setTimeout(\n        () => (this.disableNetworkFetches = false),\n        ssrForceFetchDelay,\n      );\n    }\n\n    this.watchQuery = this.watchQuery.bind(this);\n    this.query = this.query.bind(this);\n    this.mutate = this.mutate.bind(this);\n    this.resetStore = this.resetStore.bind(this);\n    this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n\n    if (connectToDevTools && typeof window === 'object') {\n      (window as any).__APOLLO_CLIENT__ = this;\n    }\n\n    /**\n     * Suggest installing the devtools for developers who don't have them\n     */\n    if (!hasSuggestedDevtools && __DEV__) {\n      hasSuggestedDevtools = true;\n      if (\n        typeof window !== 'undefined' &&\n        window.document &&\n        window.top === window.self &&\n        !(window as any).__APOLLO_DEVTOOLS_GLOBAL_HOOK__\n      ) {\n        const nav = window.navigator;\n        const ua = nav && nav.userAgent;\n        let url: string | undefined;\n        if (typeof ua === \"string\") {\n          if (ua.indexOf(\"Chrome/\") > -1) {\n            url = \"https://chrome.google.com/webstore/detail/\" +\n              \"apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm\";\n          } else if (ua.indexOf(\"Firefox/\") > -1) {\n            url = \"https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/\";\n          }\n        }\n        if (url) {\n          invariant.log(\n            \"Download the Apollo DevTools for a better development \" +\n              \"experience: \" + url\n          );\n        }\n      }\n    }\n\n    this.version = version;\n\n    this.localState = new LocalState({\n      cache,\n      client: this,\n      resolvers,\n      fragmentMatcher,\n    });\n\n    this.queryManager = new QueryManager({\n      cache: this.cache,\n      link: this.link,\n      queryDeduplication,\n      ssrMode,\n      clientAwareness: {\n        name: clientAwarenessName!,\n        version: clientAwarenessVersion!,\n      },\n      localState: this.localState,\n      assumeImmutableResults,\n      onBroadcast: connectToDevTools ? () => {\n        if (this.devToolsHookCb) {\n          this.devToolsHookCb({\n            action: {},\n            state: {\n              queries: this.queryManager.getQueryStore(),\n              mutations: this.queryManager.mutationStore || {},\n            },\n            dataWithOptimisticResults: this.cache.extract(true),\n          });\n        }\n      } : void 0,\n    });\n  }\n\n  /**\n   * Call this method to terminate any active client processes, making it safe\n   * to dispose of this `ApolloClient` instance.\n   */\n  public stop() {\n    this.queryManager.stop();\n  }\n\n  /**\n   * This watches the cache store of the query according to the options specified and\n   * returns an {@link ObservableQuery}. We can subscribe to this {@link ObservableQuery} and\n   * receive updated results through a GraphQL observer when the cache store changes.\n   * <p /><p />\n   * Note that this method is not an implementation of GraphQL subscriptions. Rather,\n   * it uses Apollo's store in order to reactively deliver updates to your query results.\n   * <p /><p />\n   * For example, suppose you call watchQuery on a GraphQL query that fetches a person's\n   * first and last name and this person has a particular object identifier, provided by\n   * dataIdFromObject. Later, a different query fetches that same person's\n   * first and last name and the first name has now changed. Then, any observers associated\n   * with the results of the first query will be updated with a new result object.\n   * <p /><p />\n   * Note that if the cache does not change, the subscriber will *not* be notified.\n   * <p /><p />\n   * See [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\n   * a description of store reactivity.\n   */\n  public watchQuery<T = any, TVariables = OperationVariables>(\n    options: WatchQueryOptions<TVariables, T>,\n  ): ObservableQuery<T, TVariables> {\n    if (this.defaultOptions.watchQuery) {\n      options = mergeOptions(this.defaultOptions.watchQuery, options);\n    }\n\n    // XXX Overwriting options is probably not the best way to do this long term...\n    if (\n      this.disableNetworkFetches &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options = { ...options, fetchPolicy: 'cache-first' };\n    }\n\n    return this.queryManager.watchQuery<T, TVariables>(options);\n  }\n\n  /**\n   * This resolves a single query according to the options specified and\n   * returns a {@link Promise} which is either resolved with the resulting data\n   * or rejected with an error.\n   *\n   * @param options An object of type {@link QueryOptions} that allows us to\n   * describe how this query should be treated e.g. whether it should hit the\n   * server at all or just resolve from the cache, etc.\n   */\n  public query<T = any, TVariables = OperationVariables>(\n    options: QueryOptions<TVariables, T>,\n  ): Promise<ApolloQueryResult<T>> {\n    if (this.defaultOptions.query) {\n      options = mergeOptions(this.defaultOptions.query, options);\n    }\n\n    invariant(\n      (options.fetchPolicy as WatchQueryFetchPolicy) !== 'cache-and-network',\n      'The cache-and-network fetchPolicy does not work with client.query, because ' +\n      'client.query can only return a single result. Please use client.watchQuery ' +\n      'to receive multiple results from the cache and the network, or consider ' +\n      'using a different fetchPolicy, such as cache-first or network-only.'\n    );\n\n    if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n      options = { ...options, fetchPolicy: 'cache-first' };\n    }\n\n    return this.queryManager.query<T, TVariables>(options);\n  }\n\n  /**\n   * This resolves a single mutation according to the options specified and returns a\n   * {@link Promise} which is either resolved with the resulting data or rejected with an\n   * error.\n   *\n   * It takes options as an object with the following keys and values:\n   */\n  public mutate<\n    TData = any,\n    TVariables = OperationVariables,\n    TContext = DefaultContext,\n    TCache extends ApolloCache<any> = ApolloCache<any>\n  >(\n    options: MutationOptions<TData, TVariables, TContext>,\n  ): Promise<FetchResult<TData>> {\n    if (this.defaultOptions.mutate) {\n      options = mergeOptions(this.defaultOptions.mutate, options);\n    }\n    return this.queryManager.mutate<TData, TVariables, TContext, TCache>(options);\n  }\n\n  /**\n   * This subscribes to a graphql subscription according to the options specified and returns an\n   * {@link Observable} which either emits received data or an error.\n   */\n  public subscribe<T = any, TVariables = OperationVariables>(\n    options: SubscriptionOptions<TVariables, T>,\n  ): Observable<FetchResult<T>> {\n    return this.queryManager.startGraphQLSubscription<T>(options);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL query without making a network request. This method will start at\n   * the root query. To start at a specific id returned by `dataIdFromObject`\n   * use `readFragment`.\n   *\n   * @param optimistic Set to `true` to allow `readQuery` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readQuery<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Query<TVariables, T>,\n    optimistic: boolean = false,\n  ): T | null {\n    return this.cache.readQuery<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL fragment without making a network request. This method will read a\n   * GraphQL fragment from any arbitrary id that is currently cached, unlike\n   * `readQuery` which will only read from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are reading. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   *\n   * @param optimistic Set to `true` to allow `readFragment` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readFragment<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Fragment<TVariables, T>,\n    optimistic: boolean = false,\n  ): T | null {\n    return this.cache.readFragment<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL query directly to\n   * the store. This method will start at the root query. To start at a\n   * specific id returned by `dataIdFromObject` then use `writeFragment`.\n   */\n  public writeQuery<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteQueryOptions<TData, TVariables>,\n  ): void {\n    this.cache.writeQuery<TData, TVariables>(options);\n    this.queryManager.broadcastQueries();\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL fragment directly to\n   * the store. This method will write to a GraphQL fragment from any arbitrary\n   * id that is currently cached, unlike `writeQuery` which will only write\n   * from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are writing. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   */\n  public writeFragment<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteFragmentOptions<TData, TVariables>,\n  ): void {\n    this.cache.writeFragment<TData, TVariables>(options);\n    this.queryManager.broadcastQueries();\n  }\n\n  public __actionHookForDevTools(cb: () => any) {\n    this.devToolsHookCb = cb;\n  }\n\n  public __requestRaw(payload: GraphQLRequest): Observable<ExecutionResult> {\n    return execute(this.link, payload);\n  }\n\n  /**\n   * Resets your entire store by clearing out your cache and then re-executing\n   * all of your active queries. This makes it so that you may guarantee that\n   * there is no data left in your store from a time before you called this\n   * method.\n   *\n   * `resetStore()` is useful when your user just logged out. You’ve removed the\n   * user session, and you now want to make sure that any references to data you\n   * might have fetched while the user session was active is gone.\n   *\n   * It is important to remember that `resetStore()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   */\n  public resetStore(): Promise<ApolloQueryResult<any>[] | null> {\n    return Promise.resolve()\n      .then(() => this.queryManager.clearStore({\n        discardWatches: false,\n      }))\n      .then(() => Promise.all(this.resetStoreCallbacks.map(fn => fn())))\n      .then(() => this.reFetchObservableQueries());\n  }\n\n  /**\n   * Remove all data from the store. Unlike `resetStore`, `clearStore` will\n   * not refetch any active queries.\n   */\n  public clearStore(): Promise<any[]> {\n    return Promise.resolve()\n      .then(() => this.queryManager.clearStore({\n        discardWatches: true,\n      }))\n      .then(() => Promise.all(this.clearStoreCallbacks.map(fn => fn())));\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * reset. `onResetStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onResetStore(cb: () => Promise<any>): () => void {\n    this.resetStoreCallbacks.push(cb);\n    return () => {\n      this.resetStoreCallbacks = this.resetStoreCallbacks.filter(c => c !== cb);\n    };\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * cleared. `onClearStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onClearStore(cb: () => Promise<any>): () => void {\n    this.clearStoreCallbacks.push(cb);\n    return () => {\n      this.clearStoreCallbacks = this.clearStoreCallbacks.filter(c => c !== cb);\n    };\n  }\n\n  /**\n   * Refetches all of your active queries.\n   *\n   * `reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n   *\n   * It is important to remember that `reFetchObservableQueries()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   * Takes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n   */\n  public reFetchObservableQueries(\n    includeStandby?: boolean,\n  ): Promise<ApolloQueryResult<any>[]> {\n    return this.queryManager.reFetchObservableQueries(includeStandby);\n  }\n\n  /**\n   * Refetches specified active queries. Similar to \"reFetchObservableQueries()\" but with a specific list of queries.\n   *\n   * `refetchQueries()` is useful for use cases to imperatively refresh a selection of queries.\n   *\n   * It is important to remember that `refetchQueries()` *will* refetch specified active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   */\n  public refetchQueries<\n    TCache extends ApolloCache<any> = ApolloCache<TCacheShape>,\n    TResult = Promise<ApolloQueryResult<any>>,\n  >(\n    options: RefetchQueriesOptions<TCache, TResult>,\n  ): RefetchQueriesResult<TResult> {\n    const map = this.queryManager.refetchQueries(options);\n    const queries: ObservableQuery<any>[] = [];\n    const results: InternalRefetchQueriesResult<TResult>[] = [];\n\n    map.forEach((result, obsQuery) => {\n      queries.push(obsQuery);\n      results.push(result);\n    });\n\n    const result = Promise.all<TResult>(\n      results as TResult[]\n    ) as RefetchQueriesResult<TResult>;\n\n    // In case you need the raw results immediately, without awaiting\n    // Promise.all(results):\n    result.queries = queries;\n    result.results = results;\n\n    // If you decide to ignore the result Promise because you're using\n    // result.queries and result.results instead, you shouldn't have to worry\n    // about preventing uncaught rejections for the Promise.all result.\n    result.catch(error => {\n      invariant.debug(`In client.refetchQueries, Promise.all promise rejected with error ${error}`);\n    });\n\n    return result;\n  }\n\n  /**\n   * Get all currently active `ObservableQuery` objects, in a `Map` keyed by\n   * query ID strings. An \"active\" query is one that has observers and a\n   * `fetchPolicy` other than \"standby\" or \"cache-only\". You can include all\n   * `ObservableQuery` objects (including the inactive ones) by passing \"all\"\n   * instead of \"active\", or you can include just a subset of active queries by\n   * passing an array of query names or DocumentNode objects.\n   */\n  public getObservableQueries(\n    include: RefetchQueriesInclude = \"active\",\n  ): Map<string, ObservableQuery<any>> {\n    return this.queryManager.getObservableQueries(include);\n  }\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public extract(optimistic?: boolean): TCacheShape {\n    return this.cache.extract(optimistic);\n  }\n\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public restore(serializedState: TCacheShape): ApolloCache<TCacheShape> {\n    return this.cache.restore(serializedState);\n  }\n\n  /**\n   * Add additional local resolvers.\n   */\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.addResolvers(resolvers);\n  }\n\n  /**\n   * Set (override existing) local resolvers.\n   */\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.setResolvers(resolvers);\n  }\n\n  /**\n   * Get all registered local resolvers.\n   */\n  public getResolvers() {\n    return this.localState.getResolvers();\n  }\n\n  /**\n   * Set a custom local state fragment matcher.\n   */\n  public setLocalStateFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.localState.setFragmentMatcher(fragmentMatcher);\n  }\n\n  /**\n   * Define a new ApolloLink (or link chain) that Apollo Client will use.\n   */\n  public setLink(newLink: ApolloLink) {\n    this.link = this.queryManager.link = newLink;\n  }\n}\n","import { getCurrentInstance, inject } from 'vue-demi'\nimport { ApolloClient } from '@apollo/client/core'\n\nexport const DefaultApolloClient = Symbol('default-apollo-client')\nexport const ApolloClients = Symbol('apollo-clients')\n\ntype ClientId = string\ntype ClientDict<T> = Record<ClientId, ApolloClient<T>>\n\ntype ResolveClient<TCacheShape, TReturn = ApolloClient<TCacheShape>> = (clientId?: ClientId) => TReturn\ntype NullableApolloClient<TCacheShape> = ApolloClient<TCacheShape> | undefined\n\nexport interface UseApolloClientReturn<TCacheShape> {\n  resolveClient: ResolveClient<TCacheShape>\n  readonly client: ApolloClient<TCacheShape>\n}\n\nfunction resolveDefaultClient<T> (providedApolloClients: ClientDict<T> | null, providedApolloClient: ApolloClient<T> | null): NullableApolloClient<T> {\n  const resolvedClient = providedApolloClients\n    ? providedApolloClients.default\n    : (providedApolloClient ?? undefined)\n  return resolvedClient\n}\n\nfunction resolveClientWithId<T> (providedApolloClients: ClientDict<T> | null, clientId: ClientId): NullableApolloClient<T> {\n  if (!providedApolloClients) {\n    throw new Error(`No apolloClients injection found, tried to resolve '${clientId}' clientId`)\n  }\n  return providedApolloClients[clientId]\n}\n\nexport function useApolloClient<TCacheShape = any> (clientId?: ClientId): UseApolloClientReturn<TCacheShape> {\n  let resolveImpl: ResolveClient<TCacheShape, NullableApolloClient<TCacheShape>>\n\n  // Save current client in current closure scope\n  const savedCurrentClient = currentApolloClient\n\n  if (!getCurrentInstance()) {\n    resolveImpl = () => savedCurrentClient\n  } else {\n    const providedApolloClients: ClientDict<TCacheShape> | null = inject(ApolloClients, null)\n    const providedApolloClient: ApolloClient<TCacheShape> | null = inject(DefaultApolloClient, null)\n\n    resolveImpl = (id?: ClientId) => {\n      if (savedCurrentClient) {\n        return savedCurrentClient\n      } else if (id) {\n        return resolveClientWithId(providedApolloClients, id)\n      }\n      return resolveDefaultClient(providedApolloClients, providedApolloClient)\n    }\n  }\n\n  function resolveClient (id: ClientId | undefined = clientId) {\n    const client = resolveImpl(id)\n    if (!client) {\n      throw new Error(`Apollo client with id ${id ?? 'default'} not found. Use provideApolloClient() if you are outside of a component setup.`)\n    }\n    return client\n  }\n\n  return {\n    resolveClient,\n    get client () {\n      return resolveClient()\n    },\n  }\n}\n\nlet currentApolloClient: NullableApolloClient<any>\n\nexport function provideApolloClient<TCacheShape = any> (client: ApolloClient<TCacheShape>) {\n  currentApolloClient = client\n  return function <TFnResult = any> (fn: () => TFnResult) {\n    const result = fn()\n    currentApolloClient = undefined\n    return result\n  }\n}\n","export const version = 'local';\n","import { Ref, isRef, computed, ref } from 'vue-demi'\nimport { ReactiveFunction } from './ReactiveFunction'\n\nexport function paramToRef<T> (param: T | Ref<T> | ReactiveFunction<T>): Ref<T> {\n  if (isRef(param)) {\n    return param\n  } else if (typeof param === 'function') {\n    return computed(param as ReactiveFunction<T>)\n  } else {\n    return ref(param) as Ref<T>\n  }\n}\n","import { Ref, isRef, reactive, computed } from 'vue-demi'\nimport { ReactiveFunction } from './ReactiveFunction'\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype TObject = object\n\nexport function paramToReactive<T extends TObject> (param: T | Ref<T> | ReactiveFunction<T>): T | Ref<T> {\n  if (isRef(param)) {\n    return param\n  } else if (typeof param === 'function') {\n    return computed(param as ReactiveFunction<T>)\n  } else if (param) {\n    return reactive(param) as T\n  } else {\n    return param\n  }\n}\n","export function useEventHook<TParam = any> () {\n  const fns: Array<(param: TParam) => void> = []\n\n  function on (fn: (param: TParam) => void) {\n    fns.push(fn)\n    return {\n      off: () => off(fn),\n    }\n  }\n\n  function off (fn: (param: TParam) => void) {\n    const index = fns.indexOf(fn)\n    if (index !== -1) {\n      fns.splice(index, 1)\n    }\n  }\n\n  function trigger (param: TParam) {\n    for (const fn of fns) {\n      fn(param)\n    }\n  }\n\n  function getCount () {\n    return fns.length\n  }\n\n  return {\n    on,\n    off,\n    trigger,\n    getCount,\n  }\n}\n","import { Ref, watch, onUnmounted, ref, getCurrentInstance, onBeforeUnmount } from 'vue-demi'\nimport type { CurrentInstance } from './types'\n\nexport interface LoadingTracking {\n  queries: Ref<number>\n  mutations: Ref<number>\n  subscriptions: Ref<number>\n}\n\nexport interface AppLoadingTracking extends LoadingTracking {\n  components: Map<any, LoadingTracking>\n}\n\nexport function getAppTracking () {\n  const vm = getCurrentInstance() as CurrentInstance | null\n  const root = vm?.$root ?? vm?.root\n  if (!root) {\n    throw new Error('Instance $root not found')\n  }\n\n  let appTracking: AppLoadingTracking\n\n  if (!root._apolloAppTracking) {\n    // Add per Vue tracking\n    appTracking = root._apolloAppTracking = {\n      queries: ref(0),\n      mutations: ref(0),\n      subscriptions: ref(0),\n      components: new Map(),\n    }\n  } else {\n    appTracking = root._apolloAppTracking\n  }\n\n  return {\n    appTracking,\n  }\n}\n\nexport function getCurrentTracking () {\n  const vm = getCurrentInstance()\n  if (!vm) {\n    throw new Error('getCurrentTracking must be used during a component setup')\n  }\n\n  const { appTracking } = getAppTracking()\n\n  let tracking: LoadingTracking\n\n  if (!appTracking.components.has(vm)) {\n    // Add per-component tracking\n    appTracking.components.set(vm, tracking = {\n      queries: ref(0),\n      mutations: ref(0),\n      subscriptions: ref(0),\n    })\n    // Cleanup\n    onUnmounted(() => {\n      appTracking.components.delete(vm)\n    })\n  } else {\n    tracking = appTracking.components.get(vm) as LoadingTracking\n  }\n\n  return {\n    appTracking,\n    tracking,\n  }\n}\n\nfunction track (loading: Ref<boolean>, type: keyof LoadingTracking) {\n  const { appTracking, tracking } = getCurrentTracking()\n\n  watch(loading, (value, oldValue) => {\n    if (oldValue != null && value !== oldValue) {\n      const mod = value ? 1 : -1\n      tracking[type].value += mod\n      appTracking[type].value += mod\n    }\n  }, {\n    immediate: true,\n  })\n\n  onBeforeUnmount(() => {\n    if (loading.value) {\n      tracking[type].value--\n      appTracking[type].value--\n    }\n  })\n}\n\nexport function trackQuery (loading: Ref<boolean>) {\n  track(loading, 'queries')\n}\n\nexport function trackMutation (loading: Ref<boolean>) {\n  track(loading, 'mutations')\n}\n\nexport function trackSubscription (loading: Ref<boolean>) {\n  track(loading, 'subscriptions')\n}\n","import { ApolloError, isApolloError } from '@apollo/client/core'\nimport { GraphQLErrors } from '@apollo/client/errors'\n\nexport function toApolloError (error: unknown): ApolloError {\n  if (!(error instanceof Error)) {\n    return new ApolloError({\n      networkError: Object.assign(new Error(), { originalError: error }),\n      errorMessage: String(error),\n    })\n  }\n\n  if (isApolloError(error)) {\n    return error\n  }\n\n  return new ApolloError({ networkError: error, errorMessage: error.message })\n}\n\nexport function resultErrorsToApolloError (errors: GraphQLErrors): ApolloError {\n  return new ApolloError({\n    graphQLErrors: errors,\n    errorMessage: `GraphQL response contains errors: ${errors.map((e: any) => e.message).join(' | ')}`,\n  })\n}\n","export const isServer = typeof window === 'undefined'\n","import {\n  ref,\n  Ref,\n  isRef,\n  computed,\n  watch,\n  onServerPrefetch,\n  getCurrentInstance,\n  onBeforeUnmount,\n  nextTick,\n} from 'vue-demi'\nimport { DocumentNode } from 'graphql'\nimport {\n  OperationVariables,\n  WatchQueryOptions,\n  ObservableQuery,\n  ApolloQueryResult,\n  SubscribeToMoreOptions,\n  FetchMoreQueryOptions,\n  FetchMoreOptions,\n  ObservableSubscription,\n  TypedDocumentNode,\n  ApolloError,\n} from '@apollo/client/core'\nimport { throttle, debounce } from 'throttle-debounce'\nimport { useApolloClient } from './useApolloClient'\nimport { ReactiveFunction } from './util/ReactiveFunction'\nimport { paramToRef } from './util/paramToRef'\nimport { paramToReactive } from './util/paramToReactive'\nimport { useEventHook } from './util/useEventHook'\nimport { trackQuery } from './util/loadingTracking'\nimport { resultErrorsToApolloError, toApolloError } from './util/toApolloError'\nimport { isServer } from './util/env'\n\nimport type { CurrentInstance } from './util/types'\n\nexport interface UseQueryOptions<\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  TResult = any,\n  TVariables = OperationVariables\n> extends Omit<WatchQueryOptions<TVariables>, 'query' | 'variables'> {\n  clientId?: string\n  enabled?: boolean\n  throttle?: number\n  debounce?: number\n  prefetch?: boolean\n}\n\ninterface SubscribeToMoreItem {\n  options: any\n  unsubscribeFns: (() => void)[]\n}\n\n// Parameters\nexport type DocumentParameter<TResult, TVariables = undefined> = DocumentNode | Ref<DocumentNode> | ReactiveFunction<DocumentNode> | TypedDocumentNode<TResult, TVariables> | Ref<TypedDocumentNode<TResult, TVariables>> | ReactiveFunction<TypedDocumentNode<TResult, TVariables>>\nexport type VariablesParameter<TVariables> = TVariables | Ref<TVariables> | ReactiveFunction<TVariables>\nexport type OptionsParameter<TResult, TVariables> = UseQueryOptions<TResult, TVariables> | Ref<UseQueryOptions<TResult, TVariables>> | ReactiveFunction<UseQueryOptions<TResult, TVariables>>\n\n// Return\nexport interface UseQueryReturn<TResult, TVariables> {\n  result: Ref<TResult | undefined>\n  loading: Ref<boolean>\n  networkStatus: Ref<number | undefined>\n  error: Ref<ApolloError | null>\n  start: () => void\n  stop: () => void\n  restart: () => void\n  forceDisabled: Ref<boolean>\n  document: Ref<DocumentNode>\n  variables: Ref<TVariables | undefined>\n  options: UseQueryOptions<TResult, TVariables> | Ref<UseQueryOptions<TResult, TVariables>>\n  query: Ref<ObservableQuery<TResult, TVariables> | null | undefined>\n  refetch: (variables?: TVariables) => Promise<ApolloQueryResult<TResult>> | undefined\n  fetchMore: (options: FetchMoreQueryOptions<TVariables, TResult> & FetchMoreOptions<TResult, TVariables>) => Promise<ApolloQueryResult<TResult>> | undefined\n  subscribeToMore: <TSubscriptionVariables = OperationVariables, TSubscriptionData = TResult>(options: SubscribeToMoreOptions<TResult, TSubscriptionVariables, TSubscriptionData> | Ref<SubscribeToMoreOptions<TResult, TSubscriptionVariables, TSubscriptionData>> | ReactiveFunction<SubscribeToMoreOptions<TResult, TSubscriptionVariables, TSubscriptionData>>) => void\n  onResult: (fn: (param: ApolloQueryResult<TResult>) => void) => {\n    off: () => void\n  }\n  onError: (fn: (param: ApolloError) => void) => {\n    off: () => void\n  }\n}\n\n/**\n * Use a query that does not require variables or options.\n * */\nexport function useQuery<TResult = any> (\n  document: DocumentParameter<TResult, undefined>\n): UseQueryReturn<TResult, undefined>\n\n/**\n * Use a query that has optional variables but not options\n */\nexport function useQuery<TResult = any, TVariables extends OperationVariables = OperationVariables> (\n  document: DocumentParameter<TResult, TVariables>\n): UseQueryReturn<TResult, TVariables>\n\n/**\n * Use a query that has required variables but not options\n */\nexport function useQuery<TResult = any, TVariables extends OperationVariables = OperationVariables> (\n  document: DocumentParameter<TResult, TVariables>,\n  variables: VariablesParameter<TVariables>\n): UseQueryReturn<TResult, TVariables>\n\n/**\n * Use a query that requires options but not variables.\n */\nexport function useQuery<TResult = any> (\n  document: DocumentParameter<TResult, undefined>,\n  variables: undefined | null,\n  options: OptionsParameter<TResult, null>,\n): UseQueryReturn<TResult, null>\n\n/**\n * Use a query that requires variables and options.\n */\nexport function useQuery<TResult = any, TVariables extends OperationVariables = OperationVariables> (\n  document: DocumentParameter<TResult, TVariables>,\n  variables: VariablesParameter<TVariables>,\n  options: OptionsParameter<TResult, TVariables>,\n): UseQueryReturn<TResult, TVariables>\n\nexport function useQuery<\n  TResult,\n  TVariables extends OperationVariables\n> (\n  document: DocumentParameter<TResult, TVariables>,\n  variables?: VariablesParameter<TVariables>,\n  options?: OptionsParameter<TResult, TVariables>,\n): UseQueryReturn<TResult, TVariables> {\n  return useQueryImpl<TResult, TVariables>(document, variables, options)\n}\n\nexport function useQueryImpl<\n  TResult,\n  TVariables extends OperationVariables\n> (\n  document: DocumentParameter<TResult, TVariables>,\n  variables?: VariablesParameter<TVariables>,\n  options: OptionsParameter<TResult, TVariables> = {},\n  lazy = false,\n): UseQueryReturn<TResult, TVariables> {\n  // Is on server?\n  const vm = getCurrentInstance() as CurrentInstance | null\n\n  const currentOptions = ref<UseQueryOptions<TResult, TVariables>>()\n\n  const documentRef = paramToRef(document)\n  const variablesRef = paramToRef(variables)\n  const optionsRef = paramToReactive(options)\n\n  // Result\n  /**\n   * Result from the query\n   */\n  const result = ref<TResult | undefined>()\n  const resultEvent = useEventHook<ApolloQueryResult<TResult>>()\n  const error = ref<ApolloError | null>(null)\n  const errorEvent = useEventHook<ApolloError>()\n\n  // Loading\n\n  /**\n   * Indicates if a network request is pending\n   */\n  const loading = ref(false)\n  vm && trackQuery(loading)\n  const networkStatus = ref<number>()\n\n  // SSR\n  let firstResolve: (() => void) | undefined\n  let firstReject: ((apolloError: ApolloError) => void) | undefined\n  onServerPrefetch?.(() => {\n    if (!isEnabled.value || (isServer && currentOptions.value?.prefetch === false)) return\n\n    return new Promise<void>((resolve, reject) => {\n      firstResolve = () => {\n        resolve()\n        firstResolve = undefined\n        firstReject = undefined\n      }\n      firstReject = (apolloError: ApolloError) => {\n        reject(apolloError)\n        firstResolve = undefined\n        firstReject = undefined\n      }\n    }).then(stop).catch(stop)\n  })\n\n  // Apollo Client\n  const { resolveClient } = useApolloClient()\n\n  // Query\n\n  const query: Ref<ObservableQuery<TResult, TVariables> | null | undefined> = ref()\n  let observer: ObservableSubscription | undefined\n  let started = false\n\n  /**\n   * Starts watching the query\n   */\n  function start () {\n    if (\n      started || !isEnabled.value ||\n      (isServer && currentOptions.value?.prefetch === false)\n    ) {\n      if (firstResolve) firstResolve()\n      return\n    }\n\n    started = true\n    error.value = null\n    loading.value = true\n\n    const client = resolveClient(currentOptions.value?.clientId)\n\n    query.value = client.watchQuery<TResult, TVariables>({\n      query: currentDocument,\n      variables: currentVariables,\n      ...currentOptions.value,\n      ...isServer\n        ? {\n          fetchPolicy: 'network-only',\n        }\n        : {},\n    })\n\n    startQuerySubscription()\n\n    if (!isServer && (currentOptions.value?.fetchPolicy !== 'no-cache' || currentOptions.value.notifyOnNetworkStatusChange)) {\n      const currentResult = query.value.getCurrentResult()\n\n      if (!currentResult.loading || currentResult.partial || currentOptions.value?.notifyOnNetworkStatusChange) {\n        onNextResult(currentResult)\n      }\n    }\n\n    if (!isServer) {\n      for (const item of subscribeToMoreItems) {\n        addSubscribeToMore(item)\n      }\n    }\n  }\n\n  function startQuerySubscription () {\n    if (observer && !observer.closed) return\n    if (!query.value) return\n\n    // Create subscription\n    observer = query.value.subscribe({\n      next: onNextResult,\n      error: onError,\n    })\n  }\n\n  function onNextResult (queryResult: ApolloQueryResult<TResult>) {\n    // Remove any previous error that may still be present from the last fetch (so result handlers\n    // don't receive old errors that may not even be applicable anymore).\n    error.value = null\n\n    processNextResult(queryResult)\n\n    // When `errorPolicy` is `all`, `onError` will not get called and\n    // ApolloQueryResult.errors may be set at the same time as we get a result\n    if (!queryResult.error && queryResult.errors?.length) {\n      processError(resultErrorsToApolloError(queryResult.errors))\n    }\n\n    if (firstResolve) {\n      firstResolve()\n      stop()\n    }\n  }\n\n  function processNextResult (queryResult: ApolloQueryResult<TResult>) {\n    result.value = queryResult.data && Object.keys(queryResult.data).length === 0 ? undefined : queryResult.data\n    loading.value = queryResult.loading\n    networkStatus.value = queryResult.networkStatus\n    resultEvent.trigger(queryResult)\n  }\n\n  function onError (queryError: unknown) {\n    // any error should already be an ApolloError, but we make sure\n    const apolloError = toApolloError(queryError)\n\n    if (currentOptions.value?.errorPolicy !== 'none') {\n      processNextResult((query.value as ObservableQuery<TResult, TVariables>).getCurrentResult())\n    }\n    processError(apolloError)\n    if (firstReject) {\n      firstReject(apolloError)\n      stop()\n    }\n    // The observable closes the sub if an error occurs\n    resubscribeToQuery()\n  }\n\n  function processError (apolloError: ApolloError) {\n    error.value = apolloError\n    loading.value = false\n    networkStatus.value = 8\n    errorEvent.trigger(apolloError)\n  }\n\n  function resubscribeToQuery () {\n    if (!query.value) return\n    const lastError = query.value.getLastError()\n    const lastResult = query.value.getLastResult()\n    query.value.resetLastResults()\n    startQuerySubscription()\n    Object.assign(query.value, { lastError, lastResult })\n  }\n\n  let onStopHandlers: Array<() => void> = []\n\n  /**\n   * Stop watching the query\n   */\n  function stop () {\n    if (firstResolve) firstResolve()\n    if (!started) return\n    started = false\n    loading.value = false\n\n    onStopHandlers.forEach(handler => handler())\n    onStopHandlers = []\n\n    if (query.value) {\n      query.value.stopPolling()\n      query.value = null\n    }\n\n    if (observer) {\n      observer.unsubscribe()\n      observer = undefined\n    }\n  }\n\n  // Restart\n  let restarting = false\n  /**\n   * Queue a restart of the query (on next tick) if it is already active\n   */\n  function baseRestart () {\n    if (!started || restarting) return\n    restarting = true\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    nextTick(() => {\n      if (started) {\n        stop()\n        start()\n      }\n      restarting = false\n    })\n  }\n\n  let debouncedRestart: typeof baseRestart\n  let isRestartDebounceSetup = false\n  function updateRestartFn () {\n    // On server, will be called before currentOptions is initialized\n    // @TODO investigate\n    if (!currentOptions) {\n      debouncedRestart = baseRestart\n    } else {\n      if (currentOptions.value?.throttle) {\n        debouncedRestart = throttle(currentOptions.value.throttle, baseRestart)\n      } else if (currentOptions.value?.debounce) {\n        debouncedRestart = debounce(currentOptions.value.debounce, baseRestart)\n      } else {\n        debouncedRestart = baseRestart\n      }\n      isRestartDebounceSetup = true\n    }\n  }\n\n  function restart () {\n    if (!isRestartDebounceSetup) updateRestartFn()\n    debouncedRestart()\n  }\n\n  // Applying document\n  let currentDocument: DocumentNode\n  watch(documentRef, value => {\n    currentDocument = value\n    restart()\n  }, {\n    immediate: true,\n  })\n\n  // Applying variables\n  let currentVariables: TVariables | undefined\n  let currentVariablesSerialized: string\n  watch(variablesRef, (value, oldValue) => {\n    const serialized = JSON.stringify(value)\n    if (serialized !== currentVariablesSerialized) {\n      currentVariables = value\n      restart()\n    }\n    currentVariablesSerialized = serialized\n  }, {\n    deep: true,\n    immediate: true,\n  })\n\n  // Applying options\n  watch(() => isRef(optionsRef) ? optionsRef.value : optionsRef, value => {\n    if (currentOptions.value && (\n      currentOptions.value.throttle !== value.throttle ||\n      currentOptions.value.debounce !== value.debounce\n    )) {\n      updateRestartFn()\n    }\n    currentOptions.value = value\n    restart()\n  }, {\n    deep: true,\n    immediate: true,\n  })\n\n  // Fefetch\n\n  function refetch (variables: TVariables | undefined = undefined) {\n    if (query.value) {\n      if (variables) {\n        currentVariables = variables\n      }\n      error.value = null\n      return query.value.refetch(variables)\n    }\n  }\n\n  // Fetch more\n\n  function fetchMore (options: FetchMoreQueryOptions<TVariables, TResult> & FetchMoreOptions<TResult, TVariables>) {\n    if (query.value) {\n      error.value = null\n      return query.value.fetchMore(options)\n    }\n  }\n\n  // Subscribe to more\n\n  const subscribeToMoreItems: SubscribeToMoreItem[] = []\n\n  function subscribeToMore<\n    TSubscriptionVariables = OperationVariables,\n    TSubscriptionData = TResult\n  > (\n    options: SubscribeToMoreOptions<TResult, TSubscriptionVariables, TSubscriptionData> |\n    Ref<SubscribeToMoreOptions<TResult, TSubscriptionVariables, TSubscriptionData>> |\n    ReactiveFunction<SubscribeToMoreOptions<TResult, TSubscriptionVariables, TSubscriptionData>>,\n  ) {\n    if (isServer) return\n    const optionsRef = paramToRef(options)\n    watch(optionsRef, (value, oldValue, onCleanup) => {\n      const index = subscribeToMoreItems.findIndex(item => item.options === oldValue)\n      if (index !== -1) {\n        subscribeToMoreItems.splice(index, 1)\n      }\n      const item: SubscribeToMoreItem = {\n        options: value,\n        unsubscribeFns: [],\n      }\n      subscribeToMoreItems.push(item)\n\n      addSubscribeToMore(item)\n\n      onCleanup(() => {\n        item.unsubscribeFns.forEach(fn => fn())\n        item.unsubscribeFns = []\n      })\n    }, {\n      immediate: true,\n    })\n  }\n\n  function addSubscribeToMore (item: SubscribeToMoreItem) {\n    if (!started) return\n    if (!query.value) {\n      throw new Error('Query is not defined')\n    }\n    const unsubscribe = query.value.subscribeToMore(item.options)\n    onStopHandlers.push(unsubscribe)\n    item.unsubscribeFns.push(unsubscribe)\n  }\n\n  // Enabled state\n\n  const forceDisabled = ref(lazy)\n  const enabledOption = computed(() => !currentOptions.value || currentOptions.value.enabled == null || currentOptions.value.enabled)\n  const isEnabled = computed(() => enabledOption.value && !forceDisabled.value)\n\n  // Auto start & stop\n  watch(isEnabled, value => {\n    if (value) {\n      start()\n    } else {\n      stop()\n    }\n  }, {\n    immediate: true,\n  })\n\n  // Teardown\n  vm && onBeforeUnmount(() => {\n    stop()\n    subscribeToMoreItems.length = 0\n  })\n\n  return {\n    result,\n    loading,\n    networkStatus,\n    error,\n    start,\n    stop,\n    restart,\n    forceDisabled,\n    document: documentRef,\n    variables: variablesRef,\n    options: optionsRef,\n    query,\n    refetch,\n    fetchMore,\n    subscribeToMore,\n    onResult: resultEvent.on,\n    onError: errorEvent.on,\n  }\n}\n","import { Ref, computed } from 'vue-demi'\nimport { ExtractSingleKey } from './util/ExtractSingleKey'\nimport type { DeepNonNullable, DeepRequired } from 'ts-essentials'\n\nexport type UseResultReturn<T> = Readonly<Ref<Readonly<T>>>\n\n/**\n * Resolve a `result`, returning either the first key of the `result` if there\n * is only one, or the `result` itself. The `value` of the ref will be\n * `undefined` until it is resolved.\n *\n * @example\n * const { result } = useQuery(...)\n * const user = useResult(result)\n * // user is `undefined` until the query resolves\n *\n * @param  {Ref<TResult>} result A `result` returned from `useQuery` to resolve.\n * @returns Readonly ref with `undefined` or the resolved `result`.\n */\nexport function useResult<TResult, TResultKey extends keyof NonNullable<TResult> = keyof NonNullable<TResult>> (\n  result: Ref<TResult>\n): UseResultReturn<undefined | ExtractSingleKey<NonNullable<TResult>, TResultKey>>\n\n/**\n * Resolve a `result`, returning either the first key of the `result` if there\n * is only one, or the `result` itself. The `value` of the ref will be\n * `defaultValue` until it is resolved.\n *\n * @example\n * const { result } = useQuery(...)\n * const profile = useResult(result, {})\n * // profile is `{}` until the query resolves\n *\n * @param  {Ref<TResult>} result A `result` returned from `useQuery` to resolve.\n * @param  {TDefaultValue} defaultValue The default return value before `result` is resolved.\n * @returns Readonly ref with the `defaultValue` or the resolved `result`.\n */\nexport function useResult<TResult, TDefaultValue, TResultKey extends keyof NonNullable<TResult> = keyof NonNullable<TResult>> (\n  result: Ref<TResult>,\n  defaultValue: TDefaultValue\n): UseResultReturn<TDefaultValue | ExtractSingleKey<NonNullable<TResult>, TResultKey>>\n\n/**\n * Resolve a `result`, returning the `result` mapped with the `pick` function.\n * The `value` of the ref will be `defaultValue` until it is resolved.\n *\n * @example\n * const { result } = useQuery(...)\n * const comments = useResult(result, undefined, (data) => data.comments)\n * // user is `undefined`, then resolves to the result's `comments`\n *\n * @param  {Ref<TResult>} result A `result` returned from `useQuery` to resolve.\n * @param  {TDefaultValue} defaultValue The default return value before `result` is resolved.\n * @param  {(data:TResult)=>TReturnValue} pick The function that receives `result` and maps a return value from it.\n * @returns Readonly ref with the `defaultValue` or the resolved and `pick`-mapped `result`\n */\nexport function useResult<\n  TResult,\n  TDefaultValue,\n  TReturnValue,\n> (\n  result: Ref<TResult>,\n  defaultValue: TDefaultValue | undefined,\n  pick: (data: DeepRequired<DeepNonNullable<TResult>>) => TReturnValue\n): UseResultReturn<TDefaultValue | TReturnValue>\n\nexport function useResult<\n  TResult,\n  TDefaultValue,\n  TReturnValue,\n> (\n  result: Ref<TResult>,\n  defaultValue?: TDefaultValue,\n  pick?: (data: DeepRequired<DeepNonNullable<TResult>>) => TReturnValue,\n): UseResultReturn<TResult | TResult[keyof TResult] | TDefaultValue | TReturnValue | undefined> {\n  return computed(() => {\n    const value = result.value\n    if (value) {\n      if (pick) {\n        try {\n          return pick(value as DeepRequired<DeepNonNullable<TResult>>)\n        } catch (e) {\n          // Silent error\n        }\n      } else {\n        const keys = Object.keys(value)\n        if (keys.length === 1) {\n          // Automatically take the only key in result data\n          return value[keys[0] as keyof TResult]\n        } else {\n          // Return entire result data\n          return value\n        }\n      }\n    }\n    return defaultValue\n  })\n}\n","export function getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nexport function getTarget() {\n    // @ts-ignore\n    return (typeof navigator !== 'undefined' && typeof window !== 'undefined')\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\nexport const isProxyAvailable = typeof Proxy === 'function';\n","import { parse } from 'graphql';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  Location,\n} from 'graphql/language/ast';\n\n// A map docString -> graphql document\nconst docCache = new Map<string, DocumentNode>();\n\n// A map fragmentName -> [normalized source]\nconst fragmentSourceMap = new Map<string, Set<string>>();\n\nlet printFragmentWarnings = true;\nlet experimentalFragmentVariables = false;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string: string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\nfunction cacheKeyFromLoc(loc: Location) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nfunction processFragments(ast: DocumentNode) {\n  const seenKeys = new Set<string>();\n  const definitions: DefinitionNode[] = [];\n\n  ast.definitions.forEach(fragmentDefinition => {\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc!);\n\n      // We know something about this fragment\n      let sourceKeySet = fragmentSourceMap.get(fragmentName)!;\n      if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n      } else if (!sourceKeySet) {\n        fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n      }\n\n      sourceKeySet.add(sourceKey);\n\n      if (!seenKeys.has(sourceKey)) {\n        seenKeys.add(sourceKey);\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  });\n\n  return {\n    ...ast,\n    definitions,\n  };\n}\n\nfunction stripLoc(doc: DocumentNode) {\n  const workSet = new Set<Record<string, any>>(doc.definitions);\n\n  workSet.forEach(node => {\n    if (node.loc) delete node.loc;\n    Object.keys(node).forEach(key => {\n      const value = node[key];\n      if (value && typeof value === 'object') {\n        workSet.add(value);\n      }\n    });\n  });\n\n  const loc = doc.loc as Record<string, any>;\n  if (loc) {\n    delete loc.startToken;\n    delete loc.endToken;\n  }\n\n  return doc;\n}\n\nfunction parseDocument(source: string) {\n  var cacheKey = normalize(source);\n  if (!docCache.has(cacheKey)) {\n    const parsed = parse(source, {\n      experimentalFragmentVariables,\n      allowLegacyFragmentVariables: experimentalFragmentVariables,\n    } as any);\n    if (!parsed || parsed.kind !== 'Document') {\n      throw new Error('Not a valid GraphQL document.');\n    }\n    docCache.set(\n      cacheKey,\n      // check that all \"new\" fragments inside the documents are consistent with\n      // existing fragments of the same name\n      stripLoc(processFragments(parsed)),\n    );\n  }\n  return docCache.get(cacheKey)!;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nexport function gql(\n  literals: string | readonly string[],\n  ...args: any[]\n) {\n\n  if (typeof literals === 'string') {\n    literals = [literals];\n  }\n\n  let result = literals[0];\n\n  args.forEach((arg, i) => {\n    if (arg && arg.kind === 'Document') {\n      result += arg.loc.source.body;\n    } else {\n      result += arg;\n    }\n    result += literals[i + 1];\n  });\n\n  return parseDocument(result);\n}\n\nexport function resetCaches() {\n  docCache.clear();\n  fragmentSourceMap.clear();\n}\n\nexport function disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nexport function enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nexport function disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\nconst extras = {\n  gql,\n  resetCaches,\n  disableFragmentWarnings,\n  enableExperimentalFragmentVariables,\n  disableExperimentalFragmentVariables,\n};\n\nexport namespace gql {\n  export const {\n    gql,\n    resetCaches,\n    disableFragmentWarnings,\n    enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables,\n  } = extras;\n}\n\ngql.default = gql;\n\nexport default gql;\n","<template>\n    <template v-if=\"!loading\">\n        <div>\n            <a class=\"anchor\" id=\"inicio\" ref=\"inicio\" />\n            <Section id=\"banners\" class=\"fill gray borderless\">\n                <Carousel>\n                    <template v-for=\"banner in data.banners\" :key=\"banner.image\">\n                        <router-link :to=\"banner.uri\">\n                            <div class=\"banner\" :style=\"`background-image: url('${banner.image}')`\" />\n                        </router-link>\n                    </template>\n                </Carousel>\n            </Section>\n\n            <Section id=\"intro\" class=\"alternate spacing center\">\n                <div id=\"items\">\n                    <div id=\"message\">\n                        <span id=\"tagline\">{{ data.welcome.title }}</span>\n                        <span id=\"subscript\">{{ data.welcome.subtitle }}</span>\n                    </div>\n                    <div id=\"video\">\n                        <video controls :src=\"data.welcome.video\">\n                            <source :src=\"data.welcome.video\" type=\"video/mp4\" />\n                        </video>\n                    </div>\n                </div>\n            </Section>\n\n            <a class=\"anchor\" id=\"sobre-nos\" ref=\"sobre-nos\" />\n            <Section id=\"about-us\" class=\"spacing\" flow=\"column\" title=\"Sobre Nós\">\n                <ul>\n                    <template v-for=\"(section, index) in data.aboutUs\" :key=\"section.title\">\n                        <li :class=\"{ alternate: index % 2, border: index < data.aboutUs.length - 1 }\">\n                            <div class=\"card\" :style=\"`background-image: url('${section.image}')`\" />\n                            <div class=\"content\">\n                                <h1>{{ section.title }}</h1>\n                                <div v-html=\"section.content\" />\n                                <div class=\"buttons\">\n                                    <template v-for=\"button in section.buttons\" :key=\"button.uri\">\n                                        <Button :link=\"button.uri\">{{ button.text }}</Button>\n                                    </template>\n                                </div>\n                            </div>\n                        </li>\n                    </template>\n                </ul>\n            </Section>\n\n            <a class=\"anchor\" id=\"sermoes\" ref=\"sermoes\" />\n            <Section id=\"sermon-series\" class=\"spacing alternate\" flow=\"column\" title=\"Séries de Sermões\">\n                <div id=\"cards\">\n                    <template v-for=\"series in data.sermons.slice(0, SERMONS_LENGTH)\" :key=\"series.slug\">\n                        <a id=\"card\" :href=\"`/sermoes/series/${series.slug}`\">\n                            <div class=\"image-wrapper\">\n                                <img :src=\"series.image\" />\n                            </div>\n                            <span>{{ series.name }}</span>\n                        </a>\n                    </template>\n                </div>\n                <Button v-if=\"data.sermons.length > SERMONS_LENGTH\" link=\"/sermoes/series\" class=\"see-more\">Ver Todos</Button>\n            </Section>\n\n            <a class=\"anchor\" id=\"ministerios\" ref=\"ministerios\" />\n            <Section id=\"groups\" class=\"fill spacing-top\" flow=\"column\" title=\"Ministérios\">\n                <div id=\"cards\">\n                    <template v-for=\"group in data.groups\" :key=\"group.uri\">\n                        <div class=\"card\">\n                            <router-link :to=\"`/ministerio${group.uri}`\">\n                                <img :src=\"group.image\" />\n                                <span>{{group.name}}</span>\n                            </router-link>\n                        </div>\n                    </template>\n                </div>\n            </Section>\n\n            <a class=\"anchor\" id=\"contato\" ref=\"contato\" />\n            <Section id=\"contact\" class=\"spacing alternate\" flow=\"column\" title=\"Entre em Contato\">\n                <div id=\"contact-row\">\n                    <div id=\"contact-info\">\n                        <a :href=\"whatsappLink\" target=\"_blank\">\n                            <i class=\"fab icon-large fa-whatsapp\"></i>\n                            <p>\n                                <span class=\"title\">Whatsapp</span>\n                                <span class=\"subtitle\">{{ data.contact.whatsapp }}</span>\n                            </p>\n                        </a>\n                        <a :href=\"phoneLink\" target=\"_blank\">\n                            <i class=\"fas icon-large fa-mobile-alt\"></i>\n                            <p>\n                                <span class=\"title\">Telefone</span>\n                                <span class=\"subtitle\">{{ data.contact.phone }}</span>\n                            </p>\n                        </a>\n                        <a :href=\"locationLink\" target=\"_blank\">\n                            <i class=\"fas icon-medium fa-map-marked-alt\"></i>\n                            <p>\n                                <span class=\"title\">Localização</span>\n                                <span class=\"subtitle\">{{ data.contact.location }}</span>\n                            </p>\n                        </a>\n                        <a :href=\"emailLink\" target=\"_blank\">\n                            <i class=\"fas icon-medium fa-envelope-open-text\"></i>\n                            <p>\n                                <span class=\"title\">Email</span>\n                                <span class=\"subtitle\">{{ data.contact.email }}</span>\n                            </p>\n                        </a>\n                    </div>\n                    <form id=\"contact-form\" ref=\"contact\">\n                        <input type=\"text\" id=\"contact-name\" placeholder=\"Nome\" />\n                        <textarea type=\"text\" id=\"contact-message\" placeholder=\"Mensagem\" rows=\"6\"></textarea>\n                        <input type=\"submit\" value=\"Enviar pelo Whatsapp\" />\n                    </form>\n                </div>\n            </Section>\n        </div>\n    </template>\n</template>\n\n<script>\nimport Section from './Section.vue'\nimport Carousel from './Carousel.vue'\nimport Button from './Button.vue'\n\nimport { ref, watchEffect } from 'vue'\nimport Querier from '../querier.js'\n\nexport default {\n    components: {\n        Section,\n        Carousel,\n        Button,\n    },\n    emits: ['pageLoaded', 'scrolledToSection'],\n    setup() {\n        const { loading, data } = Querier.home()\n\n        return {\n            // anchors\n            inicio: ref(null),\n            'sobre-nos': ref(null),\n            sermoes: ref(null),\n            ministerios: ref(null),\n            contato: ref(null),\n\n            SERMONS_LENGTH: 10,\n\n            contact: ref(null),\n\n            loading,\n            data\n        }\n    },\n    mounted() {\n        watchEffect(() => this.loading || this.onDataMounted(), { flush: 'post' })\n    },\n    unmounted() {\n        window.removeEventListener('scroll', this.onScroll)\n        this.$emit('scrolledToSection', null)\n    },\n    computed: {\n        anchors() {\n            return {\n                inicio: this.$refs.inicio,\n                'sobre-nos': this.$refs['sobre-nos'],\n                sermoes: this.$refs.sermoes,\n                ministerios: this.$refs.ministerios,\n                contato: this.$refs.contato,\n            }\n        },\n        whatsappNumber() {\n            if (this.data.contact.whatsapp) {\n                return this.data.contact.whatsapp.replaceAll(/[^0-9]+/g, '')\n            }\n        },\n        whatsappLink() {\n            return this.buildWhatsappLink()\n        },\n        phoneLink() {\n            if (this.data.contact.phone) {\n                const phone = this.data.contact.phone.replaceAll(/[^0-9]+/g, '')\n                return 'tel:+55' + phone\n            }\n        },\n        locationLink() {\n            if (this.data.contact.location) {\n                const location = this.data.contact.location.replaceAll(/\\s+/g, ' ')\n                return 'https://www.google.com/maps/search/?api=1&query=' + encodeURI(location)\n            }\n        },\n        emailLink() {\n            if (this.data.contact.email) {\n                const email = this.data.contact.email.trim()\n                return 'mailto:' + email\n            }\n        }\n    },\n    methods: {\n        onDataMounted() {\n            // touching current route is necessary to same-page, anchor-based links to work\n            // https://github.com/vuejs/vue-router/pull/3592 ?\n            this.$router.currentRoute.value\n\n            this.$emit('pageLoaded')\n            this.contact.addEventListener('submit', this.onContact)\n            window.addEventListener('scroll', this.onScroll)\n            this.onScroll()\n        },\n        buildWhatsappLink(message) {\n            if (this.whatsappNumber) {\n                let link = 'https://api.whatsapp.com/send?lang=pt_br&phone=+55' + this.whatsappNumber\n                if (message) {\n                    link += '&text=' + encodeURI(message)\n                }\n                return link\n            }\n        },\n        onScroll() {\n            let item = null;\n            for (let anchor in this.anchors) {\n                const rect = this.anchors[anchor].getBoundingClientRect()\n                if (rect.top < (window.innerHeight || document.documentElement.clientHeight) / 2) {\n                    item = anchor\n                }\n            }\n\n            if (item !== this.activeSection) {\n                this.$emit('scrolledToSection', item)\n            }\n\n            this.activeSection = item\n        },\n        onContact(event) {\n            event.preventDefault()\n            const name = this.contact.querySelector('input#contact-name').value\n            const message = this.contact.querySelector('textarea#contact-message').value\n            const link = this.buildWhatsappLink(`Olá, sou ${name}. ${message}`)\n            window.open(link, '_blank').focus()\n        }\n    }\n}\n</script>\n\n<style scoped lang=\"stylus\">\n.see-more\n    margin-top 30px !important\n\na.anchor\n    position relative\n    top -50px\n\na.anchor#inicio\n    top -200px\n\nSection#banners\n    height 300px\n\n    .banner\n        background-position center center\n        background-size cover\n        height 100%\n\nSection#intro\n    #items\n        align-items center\n        display grid\n        grid-gap 40px\n        grid-template-columns repeat(auto-fit, minmax(@css{min(100%, 400px)}, 1fr))\n        justify-items center\n        padding 0 40px\n        width 100%\n\n    #message\n        display flex\n        flex-flow column nowrap\n        font-family 'Montserrat'\n        text-align left\n\n        #tagline\n            font-size @css{min(26px, max(22px, 2vw))}\n            font-weight 800\n\n        #subscript\n            color #444\n            font-size 16px\n            font-weight 400\n            margin-top 20px\n\n    #video\n        aspect-ratio 16/9\n        max-width 500px\n        text-align center\n        width 100%\n\n        video\n            height 100%\n            width 100%\n\nSection#about-us ul\n    display flex\n    flex-flow column wrap\n    justify-content space-between\n    list-style none\n    margin 0\n    padding 0\n    width 100%\n\n    li\n        display flex\n        flex-flow row nowrap\n        margin-top 30px\n        width 100%\n\n        .card\n            background-position center\n            background-repeat no-repeat\n            background-size cover\n            border-radius 3px 0 0 3px\n            display flex\n            mask-image linear-gradient(to right, rgb(0, 0, 0) 75%, transparent)\n            min-width 30%\n\n        .content\n            padding 10px 20px 10px 40px\n\n            h1\n                margin: 0\n\n            div\n                line-height 25px\n                padding 10px 0\n\n            .buttons\n                display inline-flex\n                flex-flow row wrap\n                gap 20px\n\n    li.alternate\n        flex-direction row-reverse\n\n        .card\n            border-radius 0 3px 3px 0\n            mask-image linear-gradient(to left, rgb(0, 0, 0) 75%, transparent)\n\n        .content\n            padding 10px 40px 10px 20px\n\n    li.border\n        border-bottom 1px solid #ccc\n        padding-bottom 40px\n\n    @media (max-width: 800px)\n        li, li.alternate\n            flex-flow column nowrap\n\n            .card\n                border-radius 0\n                height 200px\n                margin-bottom 30px\n                mask-image linear-gradient(to bottom, transparent, rgb(0, 0, 0) 1%, rgb(0, 0, 0) 75%, transparent)\n\n        li.border\n            border-bottom none\n            margin-bottom 30px\n            padding-bottom 0\n\nSection#sermon-series\n    #cards\n        display grid\n        grid-gap 40px 50px\n        grid-template-columns repeat(auto-fit, minmax(@css{min(100%, 180px)}, 1fr))\n        justify-items center\n        padding 20px 50px\n        width 100%\n\n        #card\n            align-items center\n            display flex\n            flex-flow column nowrap\n            max-width 300px\n            width 100%\n\n            .image-wrapper\n                box-shadow 0 0 1px #000\n                overflow hidden\n                width 100%\n\n            img\n                display block\n                transition transform 0.2s\n                width 100%\n\n            span\n                font-weight 600\n                margin 20px 0 0\n                position relative\n\n        #card:hover\n            img\n                transform scale(1.1)\n\n            span::after\n                background #3069B3\n                bottom -6px\n                content ''\n                height 4px\n                left 0\n                position absolute\n                width 100%\n\n    @media (max-width: 740px)\n        #cards\n            grid-template-columns repeat(auto-fit, minmax(@css{min(100%, 140px)}, 1fr))\n            grid-gap 30px\n\nSection#groups\n    #cards\n        display grid\n        grid-auto-flow row dense\n        grid-template-columns repeat(auto-fit, minmax(@css{min(80%, 240px)}, 1fr));\n        max-width 1920px\n        width 100%\n\n        .card\n            background black\n            position relative\n\n            img\n                opacity 0.7\n                width 100%\n\n            span\n                color white\n                background rgba(0, 0, 0, 0.5)\n                bottom 0\n                left 0\n                padding 15px\n                position absolute\n                font-weight bold\n                width 100%\n\n        .card:hover\n            img\n                opacity 1\n\n    @media (max-width: 740px)\n        #cards\n            grid-template-columns repeat(auto-fit, minmax(@css{min(80%, 180px)}, 1fr));\n\nSection#contact #contact-row\n    align-items start\n    display grid\n    grid-row-gap 80px\n    grid-template-columns repeat(auto-fit, minmax(@css{min(100%, 400px)}, 1fr))\n    justify-items center\n    padding 30px 50px\n    width 100%\n\n    #contact-form\n        min-width 70%\n\n    #contact-info\n        display flex\n        flex-flow column nowrap\n        gap 40px\n\n        a\n            align-items center\n            display grid\n            grid-column-gap 30px\n            grid-template-columns 60px auto\n            width 100%\n\n            i\n                text-align center\n\n            i.icon-medium\n                font-size 2.8rem\n\n            i.icon-large\n                font-size 3.5rem\n\n            p\n                display flex\n                flex-flow column nowrap\n                margin 0\n\n                span.title\n                    font-size 18px\n\n                span.subtitle\n                    color #444\n                    font-size 16px\n                    margin-top 5px\n                    white-space pre\n\n        a:hover, a:hover span.subtitle\n            color #3069B3\n\n    #contact-form\n        background white\n        border-radius 5px\n        box-shadow 0 0 2px #aaa\n        display flex\n        flex-flow column nowrap\n        padding 25px\n\n        input, textarea\n            border 1px solid #ddd\n            border-radius 1px\n            font-size 14px\n            margin 5px 0\n            padding 15px\n\n        input[type=\"submit\"]\n            background transparent\n            border-radius 0 !important\n            border 2px solid #3069B3!important\n            color #3069B3\n            font-weight 600\n            padding 15px !important\n            text-decoration none\n\n        input[type=\"submit\"]:hover\n            color white\n            cursor pointer\n            background #3069B3\n</style>\n","<template>\n    <div id=\"wrapper\">\n        <div id=\"slides\" ref=\"slides\">\n            <slot />\n        </div>\n        <div id=\"pagination\" ref=\"pagination\" />\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\n\nexport default {\n    setup() {\n        return {\n            index: null,\n            timer: null,\n            slides: ref(null),\n            pagination: ref(null),\n            touchEventX: null,\n            touchEventY: null,\n            touchDirection: null,\n        }\n    },\n    mounted() {\n        const slides = this.$refs.slides.children\n        if (slides.length) {\n            this.setupPagination()\n            this.changeToSlide(0)\n\n            this.$refs.slides.addEventListener('mouseenter', this.stopTimer, { passive: true })\n            this.$refs.slides.addEventListener('mouseleave', this.restartTimer, { passive: true })\n            this.$refs.slides.addEventListener('touchstart', this.handleTouchStart, false)\n            this.$refs.slides.addEventListener('touchmove', this.handleTouchMove, false)\n            this.$refs.slides.addEventListener('touchend', this.handleTouchEnd, false)\n        }\n    },\n    beforeUnmount() {\n        this.stopTimer()\n        if (this.$refs.slides.children) {\n            this.$refs.slides.removeEventListener('mouseenter', this.stopTimer)\n            this.$refs.slides.removeEventListener('mouseleave', this.restartTimer)\n            this.$refs.slides.removeEventListener('touchstart', this.handleTouchStart)\n            this.$refs.slides.removeEventListener('touchmove', this.handleTouchMove)\n            this.$refs.slides.removeEventListener('touchend', this.handleTouchEnd)\n        }\n    },\n    methods: {\n        setupPagination() {\n            const slides = this.$refs.slides.children.length\n            for (let i = 0; i < slides; ++i) {\n                const button = document.createElement('button')\n                button.addEventListener('click', () => this.changeToSlide(i))\n                this.$refs.pagination.appendChild(button)\n            }\n        },\n        changeToSlide(index) {\n            this.stopTimer()\n            this.$refs.slides.querySelector('.active')?.classList.remove('active')\n            this.$refs.pagination.querySelector('.active')?.classList.remove('active')\n            this.$refs.slides.children[index].classList.add('active')\n            this.$refs.pagination.children[index].classList.add('active')\n            this.index = index\n            this.startTimer()\n        },\n        changeToNextSlide() {\n            this.changeToSlide(this.nextSlideIndex())\n        },\n        changeToPrevSlide() {\n            this.changeToSlide(this.prevSlideIndex())\n        },\n        startTimer() {\n            this.timer = setTimeout(() => this.changeToSlide(this.nextSlideIndex()), 4000)\n        },\n        nextSlideIndex() {\n            const slides = this.$refs.slides.children.length\n            return this.index < slides - 1 ? this.index + 1 : 0\n        },\n        prevSlideIndex() {\n            const slides = this.$refs.slides.children.length\n            return this.index > 0 ? this.index - 1 : slides - 1\n        },\n        stopTimer() {\n            if (this.timer)\n                clearTimeout(this.timer)\n        },\n        restartTimer() {\n            if (this.index !== null)\n                this.startTimer()\n        },\n        handleTouchStart(event) {\n            this.touchEventX = event.touches[0].clientX\n            this.touchEventY = event.touches[0].clientY\n        },\n        handleTouchMove(event) {\n            if (!this.touchEventX || !this.touchEventY)\n                return\n\n            var xUp = event.touches[0].clientX\n            var yUp = event.touches[0].clientY\n\n            var xDiff = this.touchEventX - xUp;\n            var yDiff = this.touchEventY - yUp;\n\n            if (Math.abs(xDiff) > Math.abs(yDiff)) {\n                if (xDiff > 0) {\n                    this.touchDirection = 'next'\n                } else {\n                    this.touchDirection = 'prev'\n                }\n\n                event.preventDefault()\n            }\n\n            this.touchEventX = null\n            this.touchEventY = null\n        },\n        handleTouchEnd() {\n            if (!this.touchDirection)\n                return\n\n            if (this.touchDirection == 'next') {\n                this.changeToNextSlide();\n            } else {\n                this.changeToPrevSlide();\n            }\n\n            this.touchDirection = null\n        }\n    }\n}\n</script>\n\n<style scoped lang=\"stylus\">\n#wrapper\n    height 100%\n    position relative\n    width 100%\n\n    #slides\n        display grid\n        height 100%\n\n    #slides > ::v-slotted(*)\n        display block\n        grid-column 1\n        grid-row 1\n        height 100%\n        width 100%\n\n    #slides > ::v-slotted(*)\n        opacity 0\n\n    #slides > ::v-slotted(*).active\n        animation fadein .5s linear 1 forwards\n\n    @keyframes fadein\n        0% { opacity: 0; }\n        100% { opacity: 1; }\n\n    #pagination\n        bottom 0\n        display block\n        position absolute\n        text-align center\n        width 100%\n\n    #pagination:deep(button)\n        border 0\n        border-radius 15px\n        box-shadow 0 0 5px #888\n        cursor pointer\n        height 15px\n        margin 10px 5px\n        opacity 0.9\n        width 15px\n\n    #pagination:deep(button:hover)\n        opacity 1\n\n    #pagination:deep(button:active), #pagination:deep(button.active)\n        transform scale(1.3)\n</style>\n","<template>\n    <span class=\"button\">\n        <router-link :to=\"link ?? '#'\"><slot /></router-link>\n    </span>\n</template>\n\n<script>\nexport default {\n    props: ['link'],\n} \n</script>\n\n<style scoped lang=\"stylus\">\n.button\n    display flex\n\n    a\n        background transparent\n        border-radius 0 !important\n        border 2px solid #3069B3!important\n        color #3069B3\n        font-weight 600\n        padding 12px !important\n        text-decoration none\n        white-space nowrap\n\n.button:hover a\n    color white\n    cursor pointer\n    background #3069B3\n</style>\n","<template>\n    <template v-if=\"!loading\">\n        <div>\n            <a class=\"anchor\" id=\"inicio\" ref=\"inicio\" />\n            <Section id=\"banner-wrapper\" class=\"fill gray borderless\">\n                <div id=\"banner\" :style=\"`background-image: url('${data.banner}')`\" />\n            </Section>\n\n            <Section id=\"content\" class=\"spacing center\" flow=\"column\" :title=\"data.title\">\n                <div v-html=\"data.content\" />\n            </Section>\n        </div>\n    </template>\n</template>\n\n<script>\nimport Section from './Section.vue'\n\nimport { watchEffect } from 'vue'\nimport Querier from '../querier.js'\n\nexport default {\n    components: {\n        Section,\n    },\n    props: ['uri'],\n    emits: ['pageLoaded', 'scrolledToSection'],\n    setup(props) {\n        const uri = '/' + props.uri.join('/')\n        const { loading, data } = Querier.page(uri)\n\n        return {\n            loading,\n            data\n        }\n    },\n    mounted() {\n        watchEffect(() => this.loading || this.$nextTick(() => this.onDataMounted()), { flush: 'post' })\n    },\n    methods: {\n        onDataMounted() {\n            this.$emit('pageLoaded')\n            console.log('data', this.data)\n        }\n    },\n}\n</script>\n\n<style scoped lang=\"stylus\">\n#banner-wrapper\n    height 200px\n\n    #banner\n        background-position center center\n        background-size cover\n        height 100%\n        width 100%\n\nSection#content\n    padding-left 20px\n    padding-right 20px\n</style>\n","<template>\n    <template v-if=\"!loading\">\n        <div>\n            <a class=\"anchor\" id=\"inicio\" ref=\"inicio\" />\n            <Section id=\"banner-wrapper\" class=\"fill gray borderless\">\n                <div id=\"banner\" :style=\"`background-image: url('${data.banner}')`\" />\n            </Section>\n\n            <Section id=\"content\" class=\"spacing center\" flow=\"column\" :title=\"'Série: ' + data.title\">\n                <div id=\"series\">\n                    <div id=\"metadata\">\n                        <img :src=\"data.image\" />\n                        <div v-html=\"data.description\" />\n                    </div>\n                    <div id=\"sermons\">\n                        <ul>\n                            <template v-for=\"(sermon, index) in data.sermons\" :key=\"sermon.slug\">\n                                <li>\n                                    <div class=\"header\">\n                                        <button class=\"play\" :onclick=\"play\" :data-sermon-content=\"'sermon-content-' + index\">\n                                            <span class=\"fa-stack\">\n                                                <i class=\"fas fa-circle fa-stack-1x fa-inverse\"></i>\n                                                <i class=\"fas fa-play-circle fa-stack-1x\" />\n                                            </span>\n                                        </button>\n                                        <div class=\"sermon\">\n                                            <p class=\"title\"><b>{{ sermon.title }}</b></p>\n                                            <p class=\"metadata\">\n                                                <span><b>Data:</b> {{ sermon.date.toLocaleDateString() }}</span>\n                                                <span><b>Texto:</b> {{ sermon.passage }}</span>\n                                                <span><b>Pregador:</b> {{ sermon.preacher }}</span>\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <div :id=\"'sermon-content-' + index\" class=\"content\" v-html=\"sermon.embedCode\" />\n                                </li>\n                            </template>\n                        </ul>\n                    </div>\n                </div>\n            </Section>\n        </div>\n    </template>\n</template>\n\n<script>\nimport Section from '../Section.vue'\n\nimport { watchEffect } from 'vue'\nimport Querier from '../../querier.js'\n\nexport default {\n    components: {\n        Section,\n    },\n    props: ['serie'],\n    emits: ['pageLoaded', 'scrolledToSection'],\n    setup(props) {\n        const { loading, data } = Querier.sermonSerie(props.serie)\n\n        return {\n            loading,\n            data\n        }\n    },\n    mounted() {\n        watchEffect(() => this.loading || this.$nextTick(() => this.onDataMounted()), { flush: 'post' })\n    },\n    methods: {\n        onDataMounted() {\n            this.$emit('pageLoaded')\n        },\n\n        play(event) {\n            this.$el.querySelector('#' + event.target.dataset.sermonContent).classList.toggle('active')\n        }\n    },\n}\n</script>\n\n<style scoped lang=\"stylus\">\n#banner-wrapper\n    height 200px\n\n    #banner\n        background-position center center\n        background-size cover\n        height 100%\n        width 100%\n\n#series\n    display grid\n    grid-gap 60px\n    grid-template-columns repeat(auto-fit, minmax(@css{min(100%, 250px)}, 1fr))\n    padding 0 40px\n    width 100%\n\n    #metadata\n        align-items end\n        display flex\n        flex-flow column nowrap\n        gap 30px\n        text-align end\n        white-space pre-line\n\n        img\n            width @css{min(250px, 100%)}\n\n\n    @media (max-width: 640px)\n        #metadata\n            align-items center\n            text-align start\n\n    #sermons\n        ul\n            list-style none\n            margin 0\n            padding 0\n\n            li\n                border-bottom 1px solid #ccc\n                padding 15px 0\n\n                .header\n                    display flex\n                    flex-flow row nowrap\n                    gap 15px\n\n                    .play\n                        align-self start\n                        background none\n                        border none\n                        filter drop-shadow(0 2px 0px #AAA)\n                        font-size 2em\n                        height 1em\n                        padding 10px 0 0 0\n                        width 1em\n\n                        .fa-stack\n                            height 1em\n                            pointer-events none\n                            width 1em\n\n                        i\n                            height 1em\n                            line-height 1em\n                            pointer-events none\n                            width 1em\n\n                    .play:hover\n                        cursor pointer\n\n                    .play:active\n                        filter drop-shadow(0 1px 0px #AAA)\n                        transform translateY(1px)\n\n                    .sermon\n                        display flex\n                        flex-flow column nowrap\n                        gap 10px\n                        width 100%\n\n                        p\n                            margin 0\n\n                        p.title\n                            padding-left 5px\n\n                        p.metadata\n                            display flex\n                            flex-flow row wrap\n                            gap 10px 15px\n\n                            span\n                                background #eee\n                                border-radius 15px\n                                padding 5px 10px\n                                font-size 12px\n\n                .content\n                   height 0\n                   margin 0\n                   overflow hidden\n                   padding-bottom 0\n                   position relative\n                   transition margin .2s, padding-bottom .2s\n                   width 100%\n\n                .content.active\n                   margin 15px 0\n                   padding-bottom 56.25%\n                   transition margin .1s, padding-bottom .2s\n\n                .content:deep(iframe)\n                   height 100% !important\n                   left 0\n                   position absolute\n                   top 0\n                   width 100% !important\n\n            li:first-child\n                padding-top 0\n\n            li:last-child\n                border none\n                padding-bottom 0\n</style>\n","<template>\n    <template v-if=\"!loading\">\n        <div>\n            <Section id=\"banner-wrapper\" class=\"fill gray borderless\">\n                <div id=\"banner\" :style=\"`background-image: url('${data.banner}')`\" />\n            </Section>\n\n            <Section id=\"content\" class=\"spacing center\" flow=\"column\" title=\"Séries de Sermões\">\n                <div id=\"cards\">\n                    <template v-for=\"series in data.sermons\" :key=\"series.slug\">\n                        <a id=\"card\" :href=\"`/sermoes/series/${series.slug}`\">\n                            <div class=\"image-wrapper\">\n                                <img :src=\"series.image\" />\n                            </div>\n                            <span>{{ series.name }}</span>\n                        </a>\n                    </template>\n                </div>\n            </Section>\n        </div>\n    </template>\n</template>\n\n<script>\nimport Section from '../Section.vue'\n\nimport { watchEffect } from 'vue'\nimport Querier from '../../querier.js'\n\nexport default {\n    components: {\n        Section,\n    },\n    emits: ['pageLoaded', 'scrolledToSection'],\n    setup() {\n        const { loading, data } = Querier.sermonSeries()\n\n        return {\n            loading,\n            data\n        }\n    },\n    mounted() {\n        watchEffect(() => this.loading || this.$nextTick(() => this.onDataMounted()), { flush: 'post' })\n    },\n    methods: {\n        onDataMounted() {\n            this.$emit('pageLoaded')\n            console.log(this.data)\n        },\n    },\n}\n</script>\n\n<style scoped lang=\"stylus\">\n#banner-wrapper\n    height 200px\n\n    #banner\n        background-position center center\n        background-size cover\n        height 100%\n        width 100%\n\nSection#content\n    #cards\n        display grid\n        grid-gap 50px\n        grid-template-columns repeat(auto-fit, minmax(@css{min(100%, 180px)}, 1fr))\n        justify-items center\n        padding 20px 50px\n        width 100%\n\n        #card\n            align-items center\n            display flex\n            flex-flow column nowrap\n            max-width 300px\n            width 100%\n\n        #card .image-wrapper\n            box-shadow 0 0 1px #000\n            overflow hidden\n            width 100%\n\n        #card img\n            display block\n            transition transform 0.2s\n            width 100%\n\n        #card span\n            font-weight 600\n            margin 10px 0\n            padding 10px 0\n            position relative\n\n        #card:hover img\n            transform scale(1.1)\n\n        #card:hover span::after\n            background #3069B3\n            bottom 2px\n            content ''\n            height 4px\n            left 0\n            position absolute\n            width 100%\n\n    @media (max-width: 740px)\n        #cards\n            grid-template-columns repeat(auto-fit, minmax(@css{min(100%, 140px)}, 1fr))\n            grid-gap 30px\n</style>\n","let supported;\nlet perf;\nexport function isPerformanceSupported() {\n    var _a;\n    if (supported !== undefined) {\n        return supported;\n    }\n    if (typeof window !== 'undefined' && window.performance) {\n        supported = true;\n        perf = window.performance;\n    }\n    else if (typeof global !== 'undefined' && ((_a = global.perf_hooks) === null || _a === void 0 ? void 0 : _a.performance)) {\n        supported = true;\n        perf = global.perf_hooks.performance;\n    }\n    else {\n        supported = false;\n    }\n    return supported;\n}\nexport function now() {\n    return isPerformanceSupported() ? perf.now() : Date.now();\n}\n","import { HOOK_PLUGIN_SETTINGS_SET } from './const';\nimport { now } from './time';\nexport class ApiProxy {\n    constructor(plugin, hook) {\n        this.target = null;\n        this.targetQueue = [];\n        this.onQueue = [];\n        this.plugin = plugin;\n        this.hook = hook;\n        const defaultSettings = {};\n        if (plugin.settings) {\n            for (const id in plugin.settings) {\n                const item = plugin.settings[id];\n                defaultSettings[id] = item.defaultValue;\n            }\n        }\n        const localSettingsSaveId = `__vue-devtools-plugin-settings__${plugin.id}`;\n        let currentSettings = Object.assign({}, defaultSettings);\n        try {\n            const raw = localStorage.getItem(localSettingsSaveId);\n            const data = JSON.parse(raw);\n            Object.assign(currentSettings, data);\n        }\n        catch (e) {\n            // noop\n        }\n        this.fallbacks = {\n            getSettings() {\n                return currentSettings;\n            },\n            setSettings(value) {\n                try {\n                    localStorage.setItem(localSettingsSaveId, JSON.stringify(value));\n                }\n                catch (e) {\n                    // noop\n                }\n                currentSettings = value;\n            },\n            now() {\n                return now();\n            },\n        };\n        if (hook) {\n            hook.on(HOOK_PLUGIN_SETTINGS_SET, (pluginId, value) => {\n                if (pluginId === this.plugin.id) {\n                    this.fallbacks.setSettings(value);\n                }\n            });\n        }\n        this.proxiedOn = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target.on[prop];\n                }\n                else {\n                    return (...args) => {\n                        this.onQueue.push({\n                            method: prop,\n                            args,\n                        });\n                    };\n                }\n            },\n        });\n        this.proxiedTarget = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target[prop];\n                }\n                else if (prop === 'on') {\n                    return this.proxiedOn;\n                }\n                else if (Object.keys(this.fallbacks).includes(prop)) {\n                    return (...args) => {\n                        this.targetQueue.push({\n                            method: prop,\n                            args,\n                            resolve: () => { },\n                        });\n                        return this.fallbacks[prop](...args);\n                    };\n                }\n                else {\n                    return (...args) => {\n                        return new Promise(resolve => {\n                            this.targetQueue.push({\n                                method: prop,\n                                args,\n                                resolve,\n                            });\n                        });\n                    };\n                }\n            },\n        });\n    }\n    async setRealTarget(target) {\n        this.target = target;\n        for (const item of this.onQueue) {\n            this.target.on[item.method](...item.args);\n        }\n        for (const item of this.targetQueue) {\n            item.resolve(await this.target[item.method](...item.args));\n        }\n    }\n}\n","export const HOOK_SETUP = 'devtools-plugin:setup';\nexport const HOOK_PLUGIN_SETTINGS_SET = 'plugin:settings:set';\n","import { getTarget, getDevtoolsGlobalHook, isProxyAvailable } from './env';\nimport { HOOK_SETUP } from './const';\nimport { ApiProxy } from './proxy';\nexport * from './api';\nexport * from './plugin';\nexport * from './time';\nexport function setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const descriptor = pluginDescriptor;\n    const target = getTarget();\n    const hook = getDevtoolsGlobalHook();\n    const enableProxy = isProxyAvailable && descriptor.enableEarlyProxy;\n    if (hook && (target.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__ || !enableProxy)) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const proxy = enableProxy ? new ApiProxy(descriptor, hook) : null;\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor: descriptor,\n            setupFn,\n            proxy,\n        });\n        if (proxy)\n            setupFn(proxy.proxiedTarget);\n    }\n}\n","/*!\n  * vue-router v4.0.14\n  * (c) 2022 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, watchEffect, defineComponent, reactive, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\nconst hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\r\nconst PolySymbol = (name) => \r\n// vr = vue router\r\nhasSymbol\r\n    ? Symbol((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' + name : name)\r\n    : ((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' : '_vr_') + name;\r\n// rvlm = Router View Location Matched\r\n/**\r\n * RouteRecord being rendered by the closest ancestor Router View. Used for\r\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\r\n * Location Matched\r\n *\r\n * @internal\r\n */\r\nconst matchedRouteKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : 'rvlm');\r\n/**\r\n * Allows overriding the router view depth to control which component in\r\n * `matched` is rendered. rvd stands for Router View Depth\r\n *\r\n * @internal\r\n */\r\nconst viewDepthKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : 'rvd');\r\n/**\r\n * Allows overriding the router instance returned by `useRouter` in tests. r\r\n * stands for router\r\n *\r\n * @internal\r\n */\r\nconst routerKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router' : 'r');\r\n/**\r\n * Allows overriding the current route returned by `useRoute` in tests. rl\r\n * stands for route location\r\n *\r\n * @internal\r\n */\r\nconst routeLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'route location' : 'rl');\r\n/**\r\n * Allows overriding the current route used by router-view. Internally this is\r\n * used when the `route` prop is passed.\r\n *\r\n * @internal\r\n */\r\nconst routerViewLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location' : 'rvl');\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module');\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nconst noop = () => { };\n\nfunction warn(msg) {\r\n    // avoid using ...args as it breaks in older Edge builds\r\n    const args = Array.from(arguments).slice(1);\r\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\r\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms an URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    const searchPos = location.indexOf('?');\r\n    const hashPos = location.indexOf('#', searchPos > -1 ? searchPos : 0);\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    const query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non\r\n * case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || !pathname.toLowerCase().startsWith(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    const aLastIndex = a.matched.length - 1;\r\n    const bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (const key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return Array.isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : Array.isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return Array.isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\r\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\r\nfunction resolveRelativePath(to, from) {\r\n    if (to.startsWith('/'))\r\n        return to;\r\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\r\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\r\n        return to;\r\n    }\r\n    if (!to)\r\n        return from;\r\n    const fromSegments = from.split('/');\r\n    const toSegments = to.split('/');\r\n    let position = fromSegments.length - 1;\r\n    let toPosition;\r\n    let segment;\r\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\r\n        segment = toSegments[toPosition];\r\n        // can't go below zero\r\n        if (position === 1 || segment === '.')\r\n            continue;\r\n        if (segment === '..')\r\n            position--;\r\n        // found something that is not relative path\r\n        else\r\n            break;\r\n    }\r\n    return (fromSegments.slice(0, position).join('/') +\r\n        '/' +\r\n        toSegments\r\n            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))\r\n            .join('/'));\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        const positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    const foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location -\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash bases like #, /#, #/, #!, #!/, /#!/, or even /folder#end\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        let slicePos = hash.includes(base.slice(hashPos))\r\n            ? base.slice(hashPos).length\r\n            : 1;\r\n        let pathFromHash = hash.slice(slicePos);\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, location);\r\n        const from = currentLocation.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            currentLocation.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(currentLocation.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = currentLocation.value;\r\n    }\r\n    function listen(callback) {\r\n        // setup the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // setup the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    window.addEventListener('beforeunload', beforeUnloadListener);\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history, location } = window;\r\n    // private variables\r\n    const currentLocation = {\r\n        value: createCurrentLocation(base, location),\r\n    };\r\n    const historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(currentLocation.value, {\r\n            back: null,\r\n            current: currentLocation.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        /**\r\n         * if a base tag is provided and we are on a normal domain, we have to\r\n         * respect the provided `base` attribute because pushState() will use it and\r\n         * potentially erase anything before the `#` like at\r\n         * https://github.com/vuejs/router/issues/685 where a base of\r\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\r\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\r\n         * base tag we can just use everything after the `#`.\r\n         */\r\n        const hashIndex = base.indexOf('#');\r\n        const url = hashIndex > -1\r\n            ? (location.host && document.querySelector('base')\r\n                ? base\r\n                : base.slice(hashIndex)) + to\r\n            : createBaseLocation() + base + to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Error with push/replace State', err);\r\n            }\r\n            else {\r\n                console.error(err);\r\n            }\r\n            // Force the navigation, this also resets the call count\r\n            location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        currentLocation.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, \r\n        // use current history state to gracefully handle a wrong call to\r\n        // history.replaceState\r\n        // https://github.com/vuejs/router/issues/366\r\n        historyState.value, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\r\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\r\n                `history.replaceState(history.state, '', url)\\n\\n` +\r\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\r\n        }\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\r\n        changeLocation(to, state, false);\r\n        currentLocation.value = to;\r\n    }\r\n    return {\r\n        location: currentLocation,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    base = normalizeBase(base);\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (const callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        // TODO: should be kept in queue\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n            queue = [START];\r\n            position = 0;\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g.\r\n * `file://`) or when configuring a server to handle any URL is not possible.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname +\r\n * location.search` If there is a `<base>` tag in the `head`, its value will be\r\n * ignored in favor of this parameter **but note it affects all the\r\n * history.pushState() calls**, meaning that if you use a `<base>` tag, it's\r\n * `href` value **has to match this parameter** (ignoring anything after the\r\n * `#`).\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname + location.search : '';\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (!base.includes('#'))\r\n        base += '#';\r\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\r\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\r\n    }\r\n    return createWebHistory(base);\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\r\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : 'nf');\r\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    /**\r\n     * An aborted navigation is a navigation that failed because a navigation\r\n     * guard returned `false` or called `next(false)`\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    /**\r\n     * A cancelled navigation is a navigation that failed because a more recent\r\n     * navigation finished started (not necessarily finished).\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    /**\r\n     * A duplicated navigation is a navigation that failed because it was\r\n     * initiated while already being at the exact same location.\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    // keep full error messages in cjs versions\r\n    if ((process.env.NODE_ENV !== 'production') || !true) {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n    else {\r\n        return assign(new Error(), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    const score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub segment /:a-other-:b\r\n            let subSegmentScore = 40 /* Segment */ +\r\n                (options.sensitive ? 0.25 /* BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* Static */;\r\n            }\r\n            else if (token.type === 1 /* Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern =\r\n                        // avoid an optional / if there are more segments e.g. /:p?-static\r\n                        // or /:p?-:p2\r\n                        optional && segment.length < 2\r\n                            ? `(?:/${subPattern})`\r\n                            : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (Array.isArray(param) && !repeatable)\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    const text = Array.isArray(param) ? param.join('/') : param;\r\n                    if (!text) {\r\n                        if (optional) {\r\n                            // if we have more than one optional param like /:a?-static we\r\n                            // don't need to care about the optional param\r\n                            if (segment.length < 2) {\r\n                                // remove the last slash as we could be at the end\r\n                                if (path.endsWith('/'))\r\n                                    path = path.slice(0, -1);\r\n                                // do not append a slash on the next iteration\r\n                                else\r\n                                    avoidDuplicatedSlash = true;\r\n                            }\r\n                        }\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n *\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n *\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    if (!path.startsWith('/')) {\r\n        throw new Error((process.env.NODE_ENV !== 'production')\r\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\r\n            : `Invalid path \"${path}\"`);\r\n    }\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* Static */) {\r\n            segment.push({\r\n                type: 0 /* Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* Param */ ||\r\n            state === 2 /* ParamRegExp */ ||\r\n            state === 3 /* ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* ParamRegExp */;\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* ParamRegExp */:\r\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\r\n                // it already works by escaping the closing )\r\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\r\n                // is this really something people need since you can also write\r\n                // /prefix_:p()_suffix\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                customRe = '';\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\r\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        const isRootAdd = !originalRecord;\r\n        const mainNormalizedRecord = normalizeRouteRecord(record);\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                    // the aliases are always of the same kind as the original since they\r\n                    // are defined on the same record\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            const { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                const parentPath = parent.record.path;\r\n                const connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\r\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\r\n                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\r\n            }\r\n            // create the object before hand so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if ('children' in mainNormalizedRecord) {\r\n                const children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other alias (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            // TODO: add normalized records for more flexibility\r\n            // if (parent && isAliasRecord(originalRecord)) {\r\n            //   parent.children.push(originalRecord)\r\n            // }\r\n            insertMatcher(matcher);\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            const index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0 &&\r\n            // Adding children with empty path should still appear before the parent\r\n            // https://github.com/vuejs/router/issues/1124\r\n            (matcher.record.path !== matchers[i].record.path ||\r\n                !isRecordChildOf(matcher, matchers[i])))\r\n            i++;\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, \r\n            // only keep params that exist in the resolved location\r\n            // TODO: only keep optional params coming from a parent record\r\n            matcher.keys.filter(k => !k.optional).map(k => k.name)), location.params);\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/router.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // TODO: dev warning of unused params if provided\r\n                // we know the matcher works because we tested the regexp\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    const newParams = {};\r\n    for (const key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: new Set(),\r\n        updateGuards: new Set(),\r\n        enterCallbacks: {},\r\n        components: 'components' in record\r\n            ? record.components || {}\r\n            : { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (const name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    const options = {};\r\n    for (const key in defaults) {\r\n        options[key] = key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\n/**\r\n * Check if a path and its alias have the same required params\r\n *\r\n * @param a - original record\r\n * @param b - alias record\r\n */\r\nfunction checkSameParams(a, b) {\r\n    for (const key of a.keys) {\r\n        if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (const key of b.keys) {\r\n        if (!key.optional && !a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (const key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" should have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\r\nfunction isRecordChildOf(record, parent) {\r\n    return parent.children.some(child => child === record || isRecordChildOf(record, child));\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving unencoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\nconst PLUS_RE = /\\+/g; // %2B\r\n/**\r\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\r\n * seems to be less flexible than not doing so and I can't find out the legacy\r\n * systems requiring this for regular requests like text/html. In the standard,\r\n * the encoding of the plus character is only mentioned for\r\n * application/x-www-form-urlencoded\r\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\r\n * leave the plus character as is in queries. To be more flexible, we allow the\r\n * plus character on the query but it can also be manually encoded by the user.\r\n *\r\n * Resources:\r\n * - https://url.spec.whatwg.org/#urlencoded-parsing\r\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\r\n */\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\nconst ENC_SPACE_RE = /%20/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryValue(text) {\r\n    return (commonEncode(text)\r\n        // Encode the space as +, encode the + to differentiate it from the space\r\n        .replace(PLUS_RE, '%2B')\r\n        .replace(ENC_SPACE_RE, '+')\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^'));\r\n}\r\n/**\r\n * Like `encodeQueryValue` but also encodes the `=` character.\r\n *\r\n * @param text - string to encode\r\n */\r\nfunction encodeQueryKey(text) {\r\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character. If `text` is `null` or `undefined`, returns an empty\r\n * string instead.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return text == null ? '' : encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        // pre decode the + into space\r\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\r\n        // allow the = character\r\n        const eqPos = searchParam.indexOf('=');\r\n        const key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\r\n        const value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!Array.isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        const value = query[key];\r\n        key = encodeQueryKey(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined) {\r\n                search += (search.length ? '&' : '') + key;\r\n            }\r\n            continue;\r\n        }\r\n        // keep null values\r\n        const values = Array.isArray(value)\r\n            ? value.map(v => v && encodeQueryValue(v))\r\n            : [value && encodeQueryValue(value)];\r\n        values.forEach(value => {\r\n            // skip undefined values in arrays as if they were not present\r\n            // smaller code than using filter\r\n            if (value !== undefined) {\r\n                // only append & with non-empty search\r\n                search += (search.length ? '&' : '') + key;\r\n                if (value != null)\r\n                    search += '=' + value;\r\n            }\r\n        });\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (const key in query) {\r\n        const value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = Array.isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\nfunction registerGuard(record, name, guard) {\r\n    const removeFromList = () => {\r\n        record[name].delete(guard);\r\n    };\r\n    onUnmounted(removeFromList);\r\n    onDeactivated(removeFromList);\r\n    onActivated(() => {\r\n        record[name].add(guard);\r\n    });\r\n    record[name].add(guard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, \r\n    // to avoid warning\r\n    {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found when calling `onBeforeRouteLeave()`. Make sure you call this function inside of a component child of <router-view>. Maybe you called it inside of App.vue?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'leaveGuards', leaveGuard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, \r\n    // to avoid warning\r\n    {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found when calling `onBeforeRouteUpdate()`. Make sure you call this function inside of a component child of <router-view>. Maybe you called it inside of App.vue?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'updateGuards', updateGuard);\r\n}\r\nfunction guardToPromiseFn(guard, to, from, record, name) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record &&\r\n        // name is defined if record is because of the function overload\r\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false)\r\n                reject(createRouterError(4 /* NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (enterCallbackArray &&\r\n                    // since enterCallbackArray is truthy, both record and name also are\r\n                    record.enterCallbacks[name] === enterCallbackArray &&\r\n                    typeof valid === 'function')\r\n                    enterCallbackArray.push(valid);\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        const guardReturn = guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next);\r\n        let guardCall = Promise.resolve(guardReturn);\r\n        if (guard.length < 3)\r\n            guardCall = guardCall.then(next);\r\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\r\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\r\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\r\n                guardCall = guardCall.then(resolvedValue => {\r\n                    // @ts-expect-error: _called is added at canOnlyBeCalledOnce\r\n                    if (!next._called) {\r\n                        warn(message);\r\n                        return Promise.reject(new Error('Invalid navigation guard'));\r\n                    }\r\n                    return resolvedValue;\r\n                });\r\n                // TODO: test me!\r\n            }\r\n            else if (guardReturn !== undefined) {\r\n                // @ts-expect-error: _called is added at canOnlyBeCalledOnce\r\n                if (!next._called) {\r\n                    warn(message);\r\n                    reject(new Error('Invalid navigation guard'));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        guardCall.catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        // @ts-expect-error: we put it in the original one because it's easier to check\r\n        next._called = true;\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!rawComponent ||\r\n                    (typeof rawComponent !== 'object' &&\r\n                        typeof rawComponent !== 'function')) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\r\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\r\n                    // throw to ensure we stop here but warn to ensure the message isn't\r\n                    // missed by the user\r\n                    throw new Error('Invalid route component');\r\n                }\r\n                else if ('then' in rawComponent) {\r\n                    // warn if user wrote import('/component.vue') instead of () =>\r\n                    // import('./component.vue')\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\r\n                        `Promise instead of a function that returns a Promise. Did you ` +\r\n                        `write \"import('./MyPage.vue')\" instead of ` +\r\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\r\n                        `production if not fixed.`);\r\n                    const promise = rawComponent;\r\n                    rawComponent = () => promise;\r\n                }\r\n                else if (rawComponent.__asyncLoader &&\r\n                    // warn only once per component\r\n                    !rawComponent.__warnedDefineAsync) {\r\n                    rawComponent.__warnedDefineAsync = true;\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` +\r\n                        `using \"defineAsyncComponent()\". ` +\r\n                        `Write \"() => import('./MyPage.vue')\" instead of ` +\r\n                        `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\r\n                }\r\n            }\r\n            // skip update and leave guards if the route component is not mounted\r\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\r\n                continue;\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                const options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    record.components[name] = resolvedComponent;\r\n                    // __vccOpts is added by vue-class-component and contain the regular options\r\n                    const options = resolvedComponent.__vccOpts || resolvedComponent;\r\n                    const guard = options[guardType];\r\n                    return guard && guardToPromiseFn(guard, to, from, record, name)();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n *\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        const { matched } = route.value;\r\n        const { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        const currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        const index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        const parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the parent and matched route have the same path, this link is\r\n            // referring to the empty child. Or we currently are on a different\r\n            // child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e)) {\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to)\r\n            // avoid uncaught errors are they are logged anyway\r\n            ).catch(noop);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    // devtools only\r\n    if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n        const instance = getCurrentInstance();\r\n        if (instance) {\r\n            const linkContextDevtools = {\r\n                route: route.value,\r\n                isActive: isActive.value,\r\n                isExactActive: isExactActive.value,\r\n            };\r\n            // @ts-expect-error: this is internal\r\n            instance.__vrl_devtools = instance.__vrl_devtools || [];\r\n            // @ts-expect-error: this is internal\r\n            instance.__vrl_devtools.push(linkContextDevtools);\r\n            watchEffect(() => {\r\n                linkContextDevtools.route = route.value;\r\n                linkContextDevtools.isActive = isActive.value;\r\n                linkContextDevtools.isExactActive = isExactActive.value;\r\n            }, { flush: 'post' });\r\n        }\r\n    }\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterLink',\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        replace: Boolean,\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n        ariaCurrentValue: {\r\n            type: String,\r\n            default: 'page',\r\n        },\r\n    },\r\n    useLink,\r\n    setup(props, { slots }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', {\r\n                    'aria-current': link.isExactActive\r\n                        ? props.ariaCurrentValue\r\n                        : null,\r\n                    href: link.href,\r\n                    // this would override user added attrs but Vue will still add\r\n                    // the listener so we end up triggering both\r\n                    onClick: link.navigate,\r\n                    class: elClass.value,\r\n                }, children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-expect-error getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-expect-error getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (const key in inner) {\r\n        const innerValue = inner[key];\r\n        const outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!Array.isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterView',\r\n    // #674 we manually inherit them\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    setup(props, { attrs, slots }) {\r\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\r\n        const injectedRoute = inject(routerViewLocationKey);\r\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\r\n        const depth = inject(viewDepthKey, 0);\r\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth]);\r\n        provide(viewDepthKey, depth + 1);\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        provide(routerViewLocationKey, routeToDisplay);\r\n        const viewRef = ref();\r\n        // watch at the same time the component instance, the route record we are\r\n        // rendering, and the name\r\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\r\n            // copy reused instances\r\n            if (to) {\r\n                // this will update the instance for new instances as well as reused\r\n                // instances when navigating to a new route\r\n                to.instances[name] = instance;\r\n                // the component instance is reused for a different route or name so\r\n                // we copy any saved update or leave guards. With async setup, the\r\n                // mounting component will mount before the matchedRoute changes,\r\n                // making instance === oldInstance, so we check if guards have been\r\n                // added before. This works because we remove guards when\r\n                // unmounting/deactivating components\r\n                if (from && from !== to && instance && instance === oldInstance) {\r\n                    if (!to.leaveGuards.size) {\r\n                        to.leaveGuards = from.leaveGuards;\r\n                    }\r\n                    if (!to.updateGuards.size) {\r\n                        to.updateGuards = from.updateGuards;\r\n                    }\r\n                }\r\n            }\r\n            // trigger beforeRouteEnter next callbacks\r\n            if (instance &&\r\n                to &&\r\n                // if there is no instance but to and from are the same this might be\r\n                // the first visit\r\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\r\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\r\n            }\r\n        }, { flush: 'post' });\r\n        return () => {\r\n            const route = routeToDisplay.value;\r\n            const matchedRoute = matchedRouteRef.value;\r\n            const ViewComponent = matchedRoute && matchedRoute.components[props.name];\r\n            // we need the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            if (!ViewComponent) {\r\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\r\n            }\r\n            // props from route configuration\r\n            const routePropsOption = matchedRoute.props[props.name];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            const onVnodeUnmounted = vnode => {\r\n                // remove the instance reference to prevent leak\r\n                if (vnode.component.isUnmounted) {\r\n                    matchedRoute.instances[currentName] = null;\r\n                }\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) &&\r\n                isBrowser &&\r\n                component.ref) {\r\n                // TODO: can display if it's an alias, its props\r\n                const info = {\r\n                    depth,\r\n                    name: matchedRoute.name,\r\n                    path: matchedRoute.path,\r\n                    meta: matchedRoute.meta,\r\n                };\r\n                const internalInstances = Array.isArray(component.ref)\r\n                    ? component.ref.map(r => r.i)\r\n                    : [component.ref.i];\r\n                internalInstances.forEach(instance => {\r\n                    // @ts-expect-error\r\n                    instance.__vrv_devtools = info;\r\n                });\r\n            }\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            normalizeSlot(slots.default, { Component: component, route }) ||\r\n                component);\r\n        };\r\n    },\r\n});\r\nfunction normalizeSlot(slot, data) {\r\n    if (!slot)\r\n        return null;\r\n    const slotContent = slot(data);\r\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\r\n}\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to display the current route the user is at.\r\n */\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\nfunction formatRouteLocation(routeLocation, tooltip) {\r\n    const copy = assign({}, routeLocation, {\r\n        // remove variables that can contain vue instances\r\n        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),\r\n    });\r\n    return {\r\n        _custom: {\r\n            type: null,\r\n            readOnly: true,\r\n            display: routeLocation.fullPath,\r\n            tooltip,\r\n            value: copy,\r\n        },\r\n    };\r\n}\r\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\n// to support multiple router instances\r\nlet routerId = 0;\r\nfunction addDevtools(app, router, matcher) {\r\n    // Take over router.beforeEach and afterEach\r\n    // make sure we are not registering the devtool twice\r\n    if (router.__hasDevtools)\r\n        return;\r\n    router.__hasDevtools = true;\r\n    // increment to support multiple router instances\r\n    const id = routerId++;\r\n    setupDevtoolsPlugin({\r\n        id: 'org.vuejs.router' + (id ? '.' + id : ''),\r\n        label: 'Vue Router',\r\n        packageName: 'vue-router',\r\n        homepage: 'https://router.vuejs.org',\r\n        logo: 'https://router.vuejs.org/logo.png',\r\n        componentStateTypes: ['Routing'],\r\n        app,\r\n    }, api => {\r\n        // display state added by the router\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            if (payload.instanceData) {\r\n                payload.instanceData.state.push({\r\n                    type: 'Routing',\r\n                    key: '$route',\r\n                    editable: false,\r\n                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),\r\n                });\r\n            }\r\n        });\r\n        // mark router-link as active and display tags on router views\r\n        api.on.visitComponentTree(({ treeNode: node, componentInstance }) => {\r\n            if (componentInstance.__vrv_devtools) {\r\n                const info = componentInstance.__vrv_devtools;\r\n                node.tags.push({\r\n                    label: (info.name ? `${info.name.toString()}: ` : '') + info.path,\r\n                    textColor: 0,\r\n                    tooltip: 'This component is rendered by &lt;router-view&gt;',\r\n                    backgroundColor: PINK_500,\r\n                });\r\n            }\r\n            // if multiple useLink are used\r\n            if (Array.isArray(componentInstance.__vrl_devtools)) {\r\n                componentInstance.__devtoolsApi = api;\r\n                componentInstance.__vrl_devtools.forEach(devtoolsData => {\r\n                    let backgroundColor = ORANGE_400;\r\n                    let tooltip = '';\r\n                    if (devtoolsData.isExactActive) {\r\n                        backgroundColor = LIME_500;\r\n                        tooltip = 'This is exactly active';\r\n                    }\r\n                    else if (devtoolsData.isActive) {\r\n                        backgroundColor = BLUE_600;\r\n                        tooltip = 'This link is active';\r\n                    }\r\n                    node.tags.push({\r\n                        label: devtoolsData.route.path,\r\n                        textColor: 0,\r\n                        tooltip,\r\n                        backgroundColor,\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        watch(router.currentRoute, () => {\r\n            // refresh active state\r\n            refreshRoutesView();\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(routerInspectorId);\r\n            api.sendInspectorState(routerInspectorId);\r\n        });\r\n        const navigationsLayerId = 'router:navigations:' + id;\r\n        api.addTimelineLayer({\r\n            id: navigationsLayerId,\r\n            label: `Router${id ? ' ' + id : ''} Navigations`,\r\n            color: 0x40a8c4,\r\n        });\r\n        // const errorsLayerId = 'router:errors'\r\n        // api.addTimelineLayer({\r\n        //   id: errorsLayerId,\r\n        //   label: 'Router Errors',\r\n        //   color: 0xea5455,\r\n        // })\r\n        router.onError((error, to) => {\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'Error during Navigation',\r\n                    subtitle: to.fullPath,\r\n                    logType: 'error',\r\n                    time: api.now(),\r\n                    data: { error },\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        // attached to `meta` and used to group events\r\n        let navigationId = 0;\r\n        router.beforeEach((to, from) => {\r\n            const data = {\r\n                guard: formatDisplay('beforeEach'),\r\n                from: formatRouteLocation(from, 'Current Location during this navigation'),\r\n                to: formatRouteLocation(to, 'Target location'),\r\n            };\r\n            // Used to group navigations together, hide from devtools\r\n            Object.defineProperty(to.meta, '__navigationId', {\r\n                value: navigationId++,\r\n            });\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: api.now(),\r\n                    title: 'Start of navigation',\r\n                    subtitle: to.fullPath,\r\n                    data,\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        router.afterEach((to, from, failure) => {\r\n            const data = {\r\n                guard: formatDisplay('afterEach'),\r\n            };\r\n            if (failure) {\r\n                data.failure = {\r\n                    _custom: {\r\n                        type: Error,\r\n                        readOnly: true,\r\n                        display: failure ? failure.message : '',\r\n                        tooltip: 'Navigation Failure',\r\n                        value: failure,\r\n                    },\r\n                };\r\n                data.status = formatDisplay('❌');\r\n            }\r\n            else {\r\n                data.status = formatDisplay('✅');\r\n            }\r\n            // we set here to have the right order\r\n            data.from = formatRouteLocation(from, 'Current Location during this navigation');\r\n            data.to = formatRouteLocation(to, 'Target location');\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'End of navigation',\r\n                    subtitle: to.fullPath,\r\n                    time: api.now(),\r\n                    data,\r\n                    logType: failure ? 'warning' : 'default',\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        /**\r\n         * Inspector of Existing routes\r\n         */\r\n        const routerInspectorId = 'router-inspector:' + id;\r\n        api.addInspector({\r\n            id: routerInspectorId,\r\n            label: 'Routes' + (id ? ' ' + id : ''),\r\n            icon: 'book',\r\n            treeFilterPlaceholder: 'Search routes',\r\n        });\r\n        function refreshRoutesView() {\r\n            // the routes view isn't active\r\n            if (!activeRoutesPayload)\r\n                return;\r\n            const payload = activeRoutesPayload;\r\n            // children routes will appear as nested\r\n            let routes = matcher.getRoutes().filter(route => !route.parent);\r\n            // reset match state to false\r\n            routes.forEach(resetMatchStateOnRouteRecord);\r\n            // apply a match state if there is a payload\r\n            if (payload.filter) {\r\n                routes = routes.filter(route => \r\n                // save matches state based on the payload\r\n                isRouteMatching(route, payload.filter.toLowerCase()));\r\n            }\r\n            // mark active routes\r\n            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\r\n            payload.rootNodes = routes.map(formatRouteRecordForInspector);\r\n        }\r\n        let activeRoutesPayload;\r\n        api.on.getInspectorTree(payload => {\r\n            activeRoutesPayload = payload;\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                refreshRoutesView();\r\n            }\r\n        });\r\n        /**\r\n         * Display information about the currently selected route record\r\n         */\r\n        api.on.getInspectorState(payload => {\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                const routes = matcher.getRoutes();\r\n                const route = routes.find(route => route.record.__vd_id === payload.nodeId);\r\n                if (route) {\r\n                    payload.state = {\r\n                        options: formatRouteRecordMatcherForStateInspector(route),\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        api.sendInspectorTree(routerInspectorId);\r\n        api.sendInspectorState(routerInspectorId);\r\n    });\r\n}\r\nfunction modifierForKey(key) {\r\n    if (key.optional) {\r\n        return key.repeatable ? '*' : '?';\r\n    }\r\n    else {\r\n        return key.repeatable ? '+' : '';\r\n    }\r\n}\r\nfunction formatRouteRecordMatcherForStateInspector(route) {\r\n    const { record } = route;\r\n    const fields = [\r\n        { editable: false, key: 'path', value: record.path },\r\n    ];\r\n    if (record.name != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'name',\r\n            value: record.name,\r\n        });\r\n    }\r\n    fields.push({ editable: false, key: 'regexp', value: route.re });\r\n    if (route.keys.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'keys',\r\n            value: {\r\n                _custom: {\r\n                    type: null,\r\n                    readOnly: true,\r\n                    display: route.keys\r\n                        .map(key => `${key.name}${modifierForKey(key)}`)\r\n                        .join(' '),\r\n                    tooltip: 'Param keys',\r\n                    value: route.keys,\r\n                },\r\n            },\r\n        });\r\n    }\r\n    if (record.redirect != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'redirect',\r\n            value: record.redirect,\r\n        });\r\n    }\r\n    if (route.alias.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'aliases',\r\n            value: route.alias.map(alias => alias.record.path),\r\n        });\r\n    }\r\n    fields.push({\r\n        key: 'score',\r\n        editable: false,\r\n        value: {\r\n            _custom: {\r\n                type: null,\r\n                readOnly: true,\r\n                display: route.score.map(score => score.join(', ')).join(' | '),\r\n                tooltip: 'Score used to sort routes',\r\n                value: route.score,\r\n            },\r\n        },\r\n    });\r\n    return fields;\r\n}\r\n/**\r\n * Extracted from tailwind palette\r\n */\r\nconst PINK_500 = 0xec4899;\r\nconst BLUE_600 = 0x2563eb;\r\nconst LIME_500 = 0x84cc16;\r\nconst CYAN_400 = 0x22d3ee;\r\nconst ORANGE_400 = 0xfb923c;\r\n// const GRAY_100 = 0xf4f4f5\r\nconst DARK = 0x666666;\r\nfunction formatRouteRecordForInspector(route) {\r\n    const tags = [];\r\n    const { record } = route;\r\n    if (record.name != null) {\r\n        tags.push({\r\n            label: String(record.name),\r\n            textColor: 0,\r\n            backgroundColor: CYAN_400,\r\n        });\r\n    }\r\n    if (record.aliasOf) {\r\n        tags.push({\r\n            label: 'alias',\r\n            textColor: 0,\r\n            backgroundColor: ORANGE_400,\r\n        });\r\n    }\r\n    if (route.__vd_match) {\r\n        tags.push({\r\n            label: 'matches',\r\n            textColor: 0,\r\n            backgroundColor: PINK_500,\r\n        });\r\n    }\r\n    if (route.__vd_exactActive) {\r\n        tags.push({\r\n            label: 'exact',\r\n            textColor: 0,\r\n            backgroundColor: LIME_500,\r\n        });\r\n    }\r\n    if (route.__vd_active) {\r\n        tags.push({\r\n            label: 'active',\r\n            textColor: 0,\r\n            backgroundColor: BLUE_600,\r\n        });\r\n    }\r\n    if (record.redirect) {\r\n        tags.push({\r\n            label: 'redirect: ' +\r\n                (typeof record.redirect === 'string' ? record.redirect : 'Object'),\r\n            textColor: 0xffffff,\r\n            backgroundColor: DARK,\r\n        });\r\n    }\r\n    // add an id to be able to select it. Using the `path` is not possible because\r\n    // empty path children would collide with their parents\r\n    let id = record.__vd_id;\r\n    if (id == null) {\r\n        id = String(routeRecordId++);\r\n        record.__vd_id = id;\r\n    }\r\n    return {\r\n        id,\r\n        label: record.path,\r\n        tags,\r\n        children: route.children.map(formatRouteRecordForInspector),\r\n    };\r\n}\r\n//  incremental id for route records and inspector state\r\nlet routeRecordId = 0;\r\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\r\nfunction markRouteRecordActive(route, currentRoute) {\r\n    // no route will be active if matched is empty\r\n    // reset the matching state\r\n    const isExactActive = currentRoute.matched.length &&\r\n        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\r\n    route.__vd_exactActive = route.__vd_active = isExactActive;\r\n    if (!isExactActive) {\r\n        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\r\n    }\r\n    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\r\n}\r\nfunction resetMatchStateOnRouteRecord(route) {\r\n    route.__vd_match = false;\r\n    route.children.forEach(resetMatchStateOnRouteRecord);\r\n}\r\nfunction isRouteMatching(route, filter) {\r\n    const found = String(route.re).match(EXTRACT_REGEXP_RE);\r\n    route.__vd_match = false;\r\n    if (!found || found.length < 3) {\r\n        return false;\r\n    }\r\n    // use a regexp without $ at the end to match nested routes better\r\n    const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\r\n    if (nonEndingRE.test(filter)) {\r\n        // mark children as matches\r\n        route.children.forEach(child => isRouteMatching(child, filter));\r\n        // exception case: `/`\r\n        if (route.record.path !== '/' || filter === '/') {\r\n            route.__vd_match = route.re.test(filter);\r\n            return true;\r\n        }\r\n        // hide the / route\r\n        return false;\r\n    }\r\n    const path = route.record.path.toLowerCase();\r\n    const decodedPath = decode(path);\r\n    // also allow partial matching on the path\r\n    if (!filter.startsWith('/') &&\r\n        (decodedPath.includes(filter) || path.includes(filter)))\r\n        return true;\r\n    if (decodedPath.startsWith(filter) || path.startsWith(filter))\r\n        return true;\r\n    if (route.record.name && String(route.record.name).includes(filter))\r\n        return true;\r\n    return route.children.some(child => isRouteMatching(child, filter));\r\n}\r\nfunction omit(obj, keys) {\r\n    const ret = {};\r\n    for (const key in obj) {\r\n        if (!keys.includes(key)) {\r\n            // @ts-expect-error\r\n            ret[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    const parseQuery$1 = options.parseQuery || parseQuery;\r\n    const stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    const routerHistory = options.history;\r\n    if ((process.env.NODE_ENV !== 'production') && !routerHistory)\r\n        throw new Error('Provide the \"history\" option when calling \"createRouter()\":' +\r\n            ' https://next.router.vuejs.org/api/#history.');\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = \r\n    // @ts-expect-error: intentionally avoid the type check\r\n    applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        const recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        // we create a copy to modify it later\r\n        currentLocation = assign({}, currentLocation || currentRoute.value);\r\n        if (typeof rawLocation === 'string') {\r\n            const locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            const matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            const href = routerHistory.createHref(locationNormalized.fullPath);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                hash: decode(locationNormalized.hash),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                // @ts-expect-error: the type is never\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${\r\n                // @ts-expect-error: the type is never\r\n                rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            // remove any nullish param\r\n            const targetParams = assign({}, rawLocation.params);\r\n            for (const key in targetParams) {\r\n                if (targetParams[key] == null) {\r\n                    delete targetParams[key];\r\n                }\r\n            }\r\n            // pass encoded values to the matcher so it can produce encoded path and fullPath\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(rawLocation.params),\r\n            });\r\n            // current location params are decoded, we need to encode them in case the\r\n            // matcher merges the params\r\n            currentLocation.params = encodeParams(currentLocation.params);\r\n        }\r\n        const matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = rawLocation.hash || '';\r\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // decoding them) the matcher might have merged current location params so\r\n        // we need to run the decoding again\r\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash: encodeHash(hash),\r\n            path: matchedRoute.path,\r\n        }));\r\n        const href = routerHistory.createHref(fullPath);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (href.startsWith('//')) {\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            }\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/router/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : (rawLocation.query || {}),\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string'\r\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\r\n            : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function handleRedirectRecord(to) {\r\n        const lastMatched = to.matched[to.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\r\n            if (typeof newTargetLocation === 'string') {\r\n                newTargetLocation =\r\n                    newTargetLocation.includes('?') || newTargetLocation.includes('#')\r\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\r\n                        : // force empty params\r\n                            { path: newTargetLocation };\r\n                // @ts-expect-error: force empty params when a string is passed to let\r\n                // the router parse them again\r\n                newTargetLocation.params = {};\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                throw new Error('Invalid redirect');\r\n            }\r\n            return assign({\r\n                query: to.query,\r\n                hash: to.hash,\r\n                params: to.params,\r\n            }, newTargetLocation);\r\n        }\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const shouldRedirect = handleRedirectRecord(targetLocation);\r\n        if (shouldRedirect)\r\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\r\n                state: data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a push\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => isNavigationFailure(error)\r\n            ? // navigation redirects still mark the router as ready\r\n                isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)\r\n                    ? error\r\n                    : markAsReady(error) // also returns the error\r\n            : // reject any unknown error\r\n                triggerError(error, toLocation, from))\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    if ((process.env.NODE_ENV !== 'production') &&\r\n                        // we are redirecting to the same location we were already at\r\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\r\n                        // and we have done it a couple of times\r\n                        redirectedFrom &&\r\n                        // @ts-expect-error: added only in dev\r\n                        (redirectedFrom._count = redirectedFrom._count\r\n                            ? // @ts-expect-error\r\n                                redirectedFrom._count + 1\r\n                            : 1) > 10) {\r\n                        warn(`Detected an infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);\r\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\r\n                    }\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign(locationAsObject(failure.to), {\r\n                        state: data,\r\n                        force,\r\n                        replace,\r\n                    }), \r\n                    // preserve the original redirectedFrom if any\r\n                    redirectedFrom || toLocation);\r\n                }\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        const [leavingRecords, updatingRecords, enteringRecords] = extractChangingRecords(to, from);\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\r\n        // leavingRecords is already reversed\r\n        for (const record of leavingRecords) {\r\n            record.leaveGuards.forEach(guard => {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            });\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                record.updateGuards.forEach(guard => {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                });\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && !from.matched.includes(record)) {\r\n                    if (Array.isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = {}));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list())\r\n            guard(to, from, failure);\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            // cannot be a redirect route because it was in history\r\n            const toLocation = resolve(to);\r\n            // due to dynamic routing, and to hash history with manual navigation\r\n            // (manually changing the url or calling history.hash = '#/somewhere'),\r\n            // there could be a redirect record in history\r\n            const shouldRedirect = handleRedirectRecord(toLocation);\r\n            if (shouldRedirect) {\r\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\r\n                return;\r\n            }\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ | 8 /* NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\r\n                    // false) but this is bug prone as we have no way to wait the\r\n                    // navigation to be finished before calling pushWithRedirect. Using\r\n                    // a setTimeout of 16ms seems to work but there is not guarantee for\r\n                    // it to work on every browser. So Instead we do not restore the\r\n                    // history entry and trigger a new navigation as requested by the\r\n                    // navigation guard.\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection, let push call triggerError\r\n                    )\r\n                        .then(failure => {\r\n                        // manual change in hash history #916 ending up in the URL not\r\n                        // changing but it was changed by the manual url change, so we\r\n                        // need to manually change it ourselves\r\n                        if (isNavigationFailure(failure, 4 /* NAVIGATION_ABORTED */ |\r\n                            16 /* NAVIGATION_DUPLICATED */) &&\r\n                            !info.delta &&\r\n                            info.type === NavigationType.pop) {\r\n                            routerHistory.go(-1, false);\r\n                        }\r\n                    })\r\n                        .catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error, toLocation, from);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure) {\r\n                    if (info.delta) {\r\n                        routerHistory.go(-info.delta, false);\r\n                    }\r\n                    else if (info.type === NavigationType.pop &&\r\n                        isNavigationFailure(failure, 4 /* NAVIGATION_ABORTED */ | 16 /* NAVIGATION_DUPLICATED */)) {\r\n                        // manual change in hash history #916\r\n                        // it's like a push but lacks the information of the direction\r\n                        routerHistory.go(-1, false);\r\n                    }\r\n                }\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     *\r\n     * @param error - error to throw\r\n     * @param to - location we were navigating to when the error happened\r\n     * @param from - location we were navigating from when the error happened\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error, to, from) {\r\n        markAsReady(error);\r\n        const list = errorHandlers.list();\r\n        if (list.length) {\r\n            list.forEach(handler => handler(error, to, from));\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('uncaught error during route navigation:');\r\n            }\r\n            console.error(error);\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    function markAsReady(err) {\r\n        if (!ready) {\r\n            // still not ready if an error happened\r\n            ready = !err;\r\n            setupListeners();\r\n            readyHandlers\r\n                .list()\r\n                .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n            readyHandlers.reset();\r\n        }\r\n        return err;\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        const { scrollBehavior } = options;\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        const scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(err => triggerError(err, to, from));\r\n    }\r\n    const go = (delta) => routerHistory.go(delta);\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                enumerable: true,\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    if ((process.env.NODE_ENV !== 'production'))\r\n                        warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (const key in START_LOCATION_NORMALIZED) {\r\n                // @ts-expect-error: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            app.provide(routerViewLocationKey, currentRoute);\r\n            const unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                // the router is not attached to an app anymore\r\n                if (installedApps.size < 1) {\r\n                    // invalidate the current navigation\r\n                    pendingLocation = START_LOCATION_NORMALIZED;\r\n                    removeHistoryListener && removeHistoryListener();\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp();\r\n            };\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n                addDevtools(app, router, matcher);\r\n            }\r\n        },\r\n    };\r\n    return router;\r\n}\r\nfunction runGuardQueue(guards) {\r\n    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    const len = Math.max(from.matched.length, to.matched.length);\r\n    for (let i = 0; i < len; i++) {\r\n        const recordFrom = from.matched[i];\r\n        if (recordFrom) {\r\n            if (to.matched.find(record => isSameRouteRecord(record, recordFrom)))\r\n                updatingRecords.push(recordFrom);\r\n            else\r\n                leavingRecords.push(recordFrom);\r\n        }\r\n        const recordTo = to.matched[i];\r\n        if (recordTo) {\r\n            // the type doesn't matter because we are comparing per reference\r\n            if (!from.matched.find(record => isSameRouteRecord(record, recordTo))) {\r\n                enteringRecords.push(recordTo);\r\n            }\r\n        }\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\r\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };\n","import * as Vue from 'vue'\nimport * as VueRouter from 'vue-router'\nimport * as Apollo from '@apollo/client/core'\nimport { DefaultApolloClient } from '@vue/apollo-composable'\n\nimport App from './components/App.vue'\nimport Home from './components/Home.vue'\nimport Page from './components/Page.vue'\nimport SermonSerie from './components/sermons/Serie.vue'\nimport SermonSeries from './components/sermons/Series.vue'\n\nconst apolloClient = new Apollo.ApolloClient({\n  link: Apollo.createHttpLink({ uri: `/graphql` }),\n  cache: new Apollo.InMemoryCache(),\n})\n\nconst router = VueRouter.createRouter({\n  history: VueRouter.createWebHistory(),\n  routes: [\n    { path: '/', component: Home, },\n    { path: '/sermoes/series', component: SermonSeries },\n    { path: '/sermoes/series/:serie', component: SermonSerie, props: true },\n    { path: '/ministerio/:uri+', component: Page, props: true, },\n    { path: '/:uri+', component: Page, props: true, },\n  ],\n  scrollBehavior(to, _, savedPosition) {\n    return new Promise(resolve => {\n      app.once('pageLoaded', () => {\n        if (savedPosition) {\n          return resolve(savedPosition)\n        }\n\n        if (to.hash) {\n          // timer was needed to get consistent behaviour\n          // maybe vue-router scrolling to hash works after\n          // https://github.com/vuejs/vue-router/pull/3592 ?\n          // return resolve({ selector: to.hash, behavior: 'smooth' })\n          return setTimeout(() => document.querySelector(to.hash)?.scrollIntoView(), 100)\n        }\n\n        // timer was needed to get consistent behaviour\n        setTimeout(() => resolve({ left: 0, top: 0 }), 50)\n      })\n    })\n  }\n})\n\nvar app = Vue.createApp(App)\n  .use(router)\n  .provide(DefaultApolloClient, apolloClient)\n  .mount('#app')\n"],"names":["$0b19d744f65e59ab$export$b41394a5437791c8","str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","root","$9zJPz","parcelRequire","self","window","$parcel$global","module","default","$6f8aeef5d23ad0c5$export$2e2bcd8739ae039","result","Symbol","observable","for","err","$hlNA2","$b0fe14423f154688$export$2e2bcd8739ae039","components","$5vlUq","$ghPRb","setup","loading","data","$fduJt","home","bus","$lqgTp","menu","$5f6aa8fade9cc028$export$eff4d24c3ff7876e","methods","once","event","f","this","onPageLoaded","emit","onScrolledToSection","section","activate","$ca1adb6d643b0376$var$script","__esModule","render","__cssModules","__scopeId","__file","$ca1adb6d643b0376$export$2e2bcd8739ae039","$4aab7aeb65d01867$export$2e2bcd8739ae039","props","$8141ee9fc15e5e72$var$_hoisted_1","class","$78da16583ad93b9f$export$e7eaa45e502fe5cc","$78da16583ad93b9f$export$167055419fc69ec1","$78da16583ad93b9f$export$42098e0eaa15c48e","id","$0b19d744f65e59ab$export$4f7022d2d68e2c5a","_ctx","flow","title","$8141ee9fc15e5e72$var$_hoisted_2","$0b19d744f65e59ab$export$b5b1545233b45293","$78da16583ad93b9f$export$4abee4c34694ada1","$slots","$0b19d744f65e59ab$var$specialBooleanAttrs","$0b19d744f65e59ab$export$d186f5eb2e810715","$0b19d744f65e59ab$export$e3f3cdb1390d56ce","value","$0b19d744f65e59ab$export$8756898546458274","$0b19d744f65e59ab$export$43bee75e5e14138e","res","item","normalized","$0b19d744f65e59ab$export$844ec244b1367d54","$0b19d744f65e59ab$export$76a205ce979d066a","key","$0b19d744f65e59ab$export$a6cdc56e425d0d0a","$0b19d744f65e59ab$var$listDelimiterRE","$0b19d744f65e59ab$var$propertyDelimiterRE","cssText","ret","forEach","tmp","trim","name","toString","$0b19d744f65e59ab$export$830c053460e5ddf6","$0b19d744f65e59ab$export$f6e2535fb5126e54","JSON","stringify","$0b19d744f65e59ab$var$replacer","String","_key","val1","__v_isRef","$0b19d744f65e59ab$export$5c90113a285f2241","size","entries","reduce","$0b19d744f65e59ab$export$6750766a7c7ec627","values","$0b19d744f65e59ab$export$53b83ca8eaab0383","$0b19d744f65e59ab$export$cf583d23ab39677c","$0b19d744f65e59ab$export$6bd8558f433f1cc1","$0b19d744f65e59ab$export$c01351c0af048e39","$0b19d744f65e59ab$var$onRE","test","$0b19d744f65e59ab$export$793aa5469768d691","startsWith","$0b19d744f65e59ab$export$8b58be045bf06082","assign","$0b19d744f65e59ab$export$cd7f480d6b8286c3","arr","el","indexOf","splice","$0b19d744f65e59ab$var$hasOwnProperty","prototype","hasOwnProperty","$0b19d744f65e59ab$export$b5a638e9b3fff9f3","call","Array","isArray","$0b19d744f65e59ab$export$1dccc787cc36538b","$0b19d744f65e59ab$export$4369c812aac99591","then","catch","$0b19d744f65e59ab$export$5ad0a3c360b8fbb5","slice","$5f6aa8fade9cc028$var$activeEffectScope","$5f6aa8fade9cc028$export$1168ed9dbc71ddbd","constructor","detached","active","effects","cleanups","parent","index","scopes","push","run","fn","on","off","stop","fromParent","l","last","pop","$5f6aa8fade9cc028$var$recordEffectScope","$5f6aa8fade9cc028$export$dc573d8a6576cdb3","scope","$5f6aa8fade9cc028$var$createDep","dep","Set","w","n","$5f6aa8fade9cc028$var$wasTracked","$5f6aa8fade9cc028$var$trackOpBit","$5f6aa8fade9cc028$var$newTracked","$5f6aa8fade9cc028$var$targetMap","WeakMap","$5f6aa8fade9cc028$var$effectTrackDepth","$5f6aa8fade9cc028$var$activeEffect","scheduler","deps","undefined","lastShouldTrack","$5f6aa8fade9cc028$var$shouldTrack","$5f6aa8fade9cc028$var$initDepMarkers","$5f6aa8fade9cc028$var$cleanupEffect","ptr","delete","$5f6aa8fade9cc028$var$finalizeDepMarkers","onStop","$5f6aa8fade9cc028$var$trackStack","$5f6aa8fade9cc028$export$938a971395fef855","$5f6aa8fade9cc028$export$c39176b1babaa8b8","$5f6aa8fade9cc028$export$6b2a7d5132615086","target","type","depsMap","get","set","Map","$5f6aa8fade9cc028$var$trackEffects","debuggerEventExtraInfo","shouldTrack","has","add","$5f6aa8fade9cc028$export$e614dc9140f7ae71","key1","newValue","oldValue","oldTarget","$0b19d744f65e59ab$export$e2a2b93446ec9fe","$5f6aa8fade9cc028$export$3c41b1a4e06acc14","$5f6aa8fade9cc028$var$MAP_KEY_ITERATE_KEY","$5f6aa8fade9cc028$var$triggerEffects","allowRecurse","$5f6aa8fade9cc028$var$isNonTrackableKeys","$5f6aa8fade9cc028$var$builtInSymbols","getOwnPropertyNames","filter","$0b19d744f65e59ab$export$a244864fd9645c7f","$5f6aa8fade9cc028$var$get","$5f6aa8fade9cc028$var$createGetter","$5f6aa8fade9cc028$var$shallowGet","$5f6aa8fade9cc028$var$readonlyGet","$5f6aa8fade9cc028$var$createArrayInstrumentations","instrumentations","args","$5f6aa8fade9cc028$export$ab18938b9fc5f28e","apply","$5f6aa8fade9cc028$export$92d09b48637741e7","shallow","receiver","$5f6aa8fade9cc028$var$shallowReadonlyMap","$5f6aa8fade9cc028$var$readonlyMap","$5f6aa8fade9cc028$var$shallowReactiveMap","$5f6aa8fade9cc028$var$reactiveMap","targetIsArray","$5f6aa8fade9cc028$var$arrayInstrumentations","Reflect","$5f6aa8fade9cc028$export$4f9f5282de18fc69","$5f6aa8fade9cc028$export$6ec456bd5b7b3c51","$5f6aa8fade9cc028$export$90a44edba14e47be","$5f6aa8fade9cc028$var$createSetter","$5f6aa8fade9cc028$export$7f3fe6025abfa26e","hadKey","Number","$0b19d744f65e59ab$export$f619eb8b89076d23","$5f6aa8fade9cc028$var$mutableHandlers","deleteProperty","ownKeys","$5f6aa8fade9cc028$var$readonlyHandlers","$5f6aa8fade9cc028$var$shallowReactiveHandlers","$5f6aa8fade9cc028$var$toShallow","$5f6aa8fade9cc028$var$getProto","v","getPrototypeOf","$5f6aa8fade9cc028$var$get$1","rawTarget","rawKey","wrap","$5f6aa8fade9cc028$var$toReadonly","$5f6aa8fade9cc028$var$toReactive","$5f6aa8fade9cc028$var$has$1","$5f6aa8fade9cc028$var$size","$5f6aa8fade9cc028$var$add","$5f6aa8fade9cc028$var$set$1","$5f6aa8fade9cc028$var$deleteEntry","$5f6aa8fade9cc028$var$clear","hadItems","clear","$5f6aa8fade9cc028$var$createForEach","callback","thisArg","observed","$5f6aa8fade9cc028$var$createIterableMethod","method","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","next","$5f6aa8fade9cc028$var$createReadonlyMethod","$5f6aa8fade9cc028$var$createInstrumentations","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","$5f6aa8fade9cc028$var$readonlyInstrumentations","$5f6aa8fade9cc028$var$shallowInstrumentations","$5f6aa8fade9cc028$var$shallowReadonlyInstrumentations","$5f6aa8fade9cc028$var$mutableInstrumentations","$5f6aa8fade9cc028$var$mutableCollectionHandlers","$5f6aa8fade9cc028$var$createInstrumentationGetter","$5f6aa8fade9cc028$var$shallowCollectionHandlers","$5f6aa8fade9cc028$var$readonlyCollectionHandlers","$5f6aa8fade9cc028$var$createReactiveObject","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","isExtensible","rawType","$5f6aa8fade9cc028$var$targetTypeMap","proxy","Proxy","$5f6aa8fade9cc028$export$352205f445242f02","$5f6aa8fade9cc028$export$5f3ca29d057519b3","raw","$5f6aa8fade9cc028$export$995ab8b13ad7a9d0","$0b19d744f65e59ab$export$8afb76124cf08683","$5f6aa8fade9cc028$var$trackRefValue","$5f6aa8fade9cc028$var$triggerRefValue","newVal","r","$5f6aa8fade9cc028$var$createRef","rawValue","$5f6aa8fade9cc028$var$RefImpl","__v_isShallow","_rawValue","_value","$5f6aa8fade9cc028$export$a239a76781616204","$5f6aa8fade9cc028$export$f353fd1b97db3fa0","objectWithRefs","$5f6aa8fade9cc028$var$shallowUnwrapHandlers","$5f6aa8fade9cc028$var$ComputedRefImpl","getter","_setter","isSSR","_dirty","effect","$5f6aa8fade9cc028$export$28352bb4dd362521","computed","_cacheable","Promise","resolve","$78da16583ad93b9f$export$b22fcaf88446e9bf","instance","$78da16583ad93b9f$export$d3da1ecaf1206c58","$78da16583ad93b9f$export$dae85862a8d94378","throwInDev","vnode","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","contextVNode","console","error","$78da16583ad93b9f$var$logError","$78da16583ad93b9f$var$isFlushing","$78da16583ad93b9f$var$isFlushPending","$78da16583ad93b9f$var$queue","$78da16583ad93b9f$var$flushIndex","$78da16583ad93b9f$var$pendingPreFlushCbs","$78da16583ad93b9f$var$activePreFlushCbs","$78da16583ad93b9f$var$preFlushIndex","$78da16583ad93b9f$var$pendingPostFlushCbs","$78da16583ad93b9f$var$activePostFlushCbs","$78da16583ad93b9f$var$postFlushIndex","$78da16583ad93b9f$var$resolvedPromise","$78da16583ad93b9f$var$currentFlushPromise","$78da16583ad93b9f$var$currentPreFlushParentJob","$78da16583ad93b9f$export$bdd553fddd433dcb","p","bind","$78da16583ad93b9f$var$queueJob","job","includes","start","end","middle","$78da16583ad93b9f$var$getId","$78da16583ad93b9f$var$findInsertionIndex","$78da16583ad93b9f$var$queueFlush","$78da16583ad93b9f$var$flushJobs","$78da16583ad93b9f$var$queueCb","cb","activeQueue","pendingQueue","$78da16583ad93b9f$export$59536a0199721cab","$78da16583ad93b9f$var$flushPreFlushCbs","seen","parentJob","$78da16583ad93b9f$var$flushPostFlushCbs","deduped","sort","a","b","Infinity","$78da16583ad93b9f$export$6922d3b3a607469e","$78da16583ad93b9f$var$buffer","$78da16583ad93b9f$var$devtoolsNotInstalled","$78da16583ad93b9f$var$emit","$78da16583ad93b9f$export$b0c258b32c26c785","hook","target1","_a","_b","enabled","HTMLElement","navigator","userAgent","__VUE_DEVTOOLS_HOOK_REPLAY__","newHook","setTimeout","$78da16583ad93b9f$var$devtoolsComponentAdded","$78da16583ad93b9f$var$createDevtoolsComponentHook","$78da16583ad93b9f$var$devtoolsComponentUpdated","$78da16583ad93b9f$var$devtoolsComponentRemoved","component","app","uid","$78da16583ad93b9f$var$emit$1","rawArgs","isModelListener","modelArg","modifiersKey","number","$0b19d744f65e59ab$export$a0a81dc3380ce7d3","handlerName","__VUE_PROD_DEVTOOLS__","params","$78da16583ad93b9f$var$devtoolsComponentEmit","handler","$0b19d744f65e59ab$export$8c022799eeaaefcd","$0b19d744f65e59ab$export$161d051f5dd25de7","$0b19d744f65e59ab$export$6e6a0a3676c4b8bb","onceHandler","emitted","$78da16583ad93b9f$var$normalizeEmitsOptions","comp","asMixin","cache","emitsCache","cached","raw1","emits","hasExtends","__VUE_OPTIONS_API__","extendEmits","normalizedFromExtend","mixins","extends","$78da16583ad93b9f$var$isEmitListener","options","$0b19d744f65e59ab$export$1a2d97de39ecbb75","replace","$78da16583ad93b9f$var$currentRenderingInstance","$78da16583ad93b9f$var$currentScopeId","$78da16583ad93b9f$var$setCurrentRenderingInstance","prev","$78da16583ad93b9f$export$ac020265ca2cc4cd","$78da16583ad93b9f$export$f2dc6805dc11834e","$78da16583ad93b9f$export$694b237e827a3d23","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","$78da16583ad93b9f$export$c20bee82f26f1e27","prevInstance","_c","$78da16583ad93b9f$var$renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","renderCache","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","$78da16583ad93b9f$var$normalizeVNode","$78da16583ad93b9f$var$getFunctionalFallthrough","$78da16583ad93b9f$var$blockStack","$78da16583ad93b9f$export$bf5c4cf060303d58","$78da16583ad93b9f$export$4d299b491347818a","keys","some","$78da16583ad93b9f$var$filterModelListeners","$78da16583ad93b9f$export$ee4f9e12c0a92a1a","dirs","concat","transition","$78da16583ad93b9f$var$hasPropsChanged","prevProps","nextProps","emitsOptions","nextKeys","$78da16583ad93b9f$var$updateHOCHostEl","subTree","$78da16583ad93b9f$var$queueEffectWithSuspense","suspense","pendingBranch","$78da16583ad93b9f$export$abe1e183e22e10ad","$78da16583ad93b9f$var$currentInstance","provides","parentProvides","$78da16583ad93b9f$export$a976684a0efeb93f","defaultValue","treatDefaultAsFactory","arguments","$78da16583ad93b9f$export$ede35fc0e5500309","$78da16583ad93b9f$var$doWatch","source","immediate","deep","flush","onTrack","onTrigger","forceTrigger","isMultiSource","s","$78da16583ad93b9f$var$traverse","isUnmounted","cleanup","onCleanup","$0b19d744f65e59ab$export$5702a91a6f42969f","baseGetter","$78da16583ad93b9f$var$isInSSRComponentSetup","$78da16583ad93b9f$var$INITIAL_WATCHER_VALUE","$78da16583ad93b9f$var$queuePostRenderEffect","isMounted","$78da16583ad93b9f$var$queuePreFlushCb","$78da16583ad93b9f$var$instanceWatch","publicThis","$78da16583ad93b9f$var$createPathGetter","$78da16583ad93b9f$var$setCurrentInstance","$78da16583ad93b9f$var$unsetCurrentInstance","path","segments","$78da16583ad93b9f$export$d2a0a1bc267c90f6","state","isLeaving","isUnmounting","leavingVNodes","$78da16583ad93b9f$export$6d1641039221b5cb","Boolean","$78da16583ad93b9f$var$TransitionHookValidator","$78da16583ad93b9f$export$f13e630aa3915748","$78da16583ad93b9f$export$a67f9b1229c7c97a","children","mode","rawProps","child","$78da16583ad93b9f$var$emptyPlaceholder","$78da16583ad93b9f$var$getKeepAliveChild","$78da16583ad93b9f$export$76ac1779589cd824","innerChild","enterHooks","oldChild","getTransitionKey","prevTransitionKey","transitionKeyChanged","oldInnerChild","$78da16583ad93b9f$var$isSameVNodeType","leavingHooks","$78da16583ad93b9f$export$7770a22486565649","afterLeave","update","delayLeave","earlyRemove","delayedLeave","$78da16583ad93b9f$var$getLeavingNodesForType","_leaveCb","leavingVNodesCache","vnode2","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","leavingVNode","callHook","afterHook","cancelHook","_enterCb","cancelled","called","hooks","leave","remove","$78da16583ad93b9f$var$isKeepAlive","ssContent","clone","ssFallback","keepComment","keyedFragmentCount","$78da16583ad93b9f$export$ffb0004e005737fa","patchFlag","i1","$78da16583ad93b9f$var$isAsyncWrapper","__asyncLoader","__isKeepAlive","RegExp","$78da16583ad93b9f$var$matches","pattern","$78da16583ad93b9f$export$ba52d824b95a2154","target2","$78da16583ad93b9f$var$registerKeepAliveHook","$78da16583ad93b9f$export$bf1440eeaf5fa709","target3","target4","wrappedHook","__wdc","current","isDeactivated","$78da16583ad93b9f$var$injectToKeepAliveRoot","target5","keepAliveRoot","injected","$78da16583ad93b9f$var$injectHook","$78da16583ad93b9f$var$resetShapeFlag","$78da16583ad93b9f$var$getInnerChild","target6","prepend","__weh","unshift","$78da16583ad93b9f$var$createHook","lifecycle","target7","$78da16583ad93b9f$export$23b7aeb0d671f804","$78da16583ad93b9f$export$ab91988a13872e4c","$78da16583ad93b9f$export$5876c47052fb88b1","$78da16583ad93b9f$export$40c420df62d2614","$78da16583ad93b9f$export$13348a43ccacfe58","$78da16583ad93b9f$export$ebf0c601f267bceb","$78da16583ad93b9f$export$898295a813d662eb","$78da16583ad93b9f$export$2b41f4235363e921","$78da16583ad93b9f$export$6a3a15856e50ad19","target8","$78da16583ad93b9f$var$shouldCacheAccess","$78da16583ad93b9f$var$applyOptions","$78da16583ad93b9f$var$resolveMergedOptions","beforeCreate","$78da16583ad93b9f$var$callHook","computedOptions","watch","watchOptions","provide","provideOptions","inject","injectOptions","created","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","directives","filters","checkDuplicateProperties","unwrapRef","$78da16583ad93b9f$var$normalizeInject","opt","from","defineProperty","enumerable","configurable","$78da16583ad93b9f$var$resolveInjections","unwrapInjectedRef","key4","methodHandler","dataOptions","key2","c","$78da16583ad93b9f$export$2983e091f1a1e8e2","key3","$78da16583ad93b9f$var$createWatcher","registerLifecycleHook","register","_hook","exposed","$78da16583ad93b9f$export$dda1d9f60106f0e9","$78da16583ad93b9f$export$3db5d71bdb2d5499","base","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","m","$78da16583ad93b9f$var$mergeOptions","to","strats","strat","$78da16583ad93b9f$var$internalOptionMergeStrats","$78da16583ad93b9f$var$mergeDataFn","$78da16583ad93b9f$var$mergeObjectOptions","$78da16583ad93b9f$var$mergeAsArray","merged","isStateful","$78da16583ad93b9f$var$InternalObjectKey","$5f6aa8fade9cc028$export$8d81cefd22d22260","needCastKeys","camelKey","rawCastValues","hasAttrsChanged","rawCurrentProps","castValues","$78da16583ad93b9f$var$resolvePropValue","isAbsent","hasDefault","Function","propsDefaults","propsCache","extendProps","$78da16583ad93b9f$var$normalizePropsOptions","raw2","normalizedKey","$78da16583ad93b9f$var$validatePropName","prop","booleanIndex","$78da16583ad93b9f$var$getTypeIndex","stringIndex","$78da16583ad93b9f$var$getType","ctor","match","expectedTypes","findIndex","t","$78da16583ad93b9f$var$isSameType","rawSlot","rawSlots","$78da16583ad93b9f$var$isInternalKey","$78da16583ad93b9f$var$normalizeSlot","$78da16583ad93b9f$var$normalizeSlotValue","$78da16583ad93b9f$var$normalizeVNodeSlots","prevVNode","bindings","binding","oldBindings","dir","isNativeTag","hydrate","rootComponent","rootProps","$78da16583ad93b9f$var$createAppContext","_container","context","$78da16583ad93b9f$export$83d89fbfd8236492","use","plugin","installedPlugins","install","mixin","directive","mount","rootContainer","isHydrate","isSVG","__vue_app__","Fragment","Text","$78da16583ad93b9f$export$5f1af8db9871e1d6","Comment","Static","$78da16583ad93b9f$export$c1b9a1d3af45b7b6","_instance","$78da16583ad93b9f$var$devtoolsUnmountApp","$78da16583ad93b9f$var$setRef","rawRef","oldRawRef","parentSuspense","isUnmount","refValue","$78da16583ad93b9f$var$getExposeProxy","owner","ref","refs","oldRef","_isString","_isRef","doSet","existing","k","$78da16583ad93b9f$var$baseCreateRenderer","createHydrationFns","$0b19d744f65e59ab$export$ff5f2eeb11fc7e14","target9","__VUE__","__VUE_DEVTOOLS_GLOBAL_HOOK__","insert","hostInsert","hostRemove","patchProp","hostPatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","slotScopeIds","optimized","dynamicChildren","getNextHostNode","unmount","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","process","internals","removeStaticNode","mountElement","patchElement","is","mountChildren","$78da16583ad93b9f$var$invokeDirectiveHook","$0b19d744f65e59ab$export$bf7d3c0236f0aa85","unmountChildren","vnodeHook","onVnodeBeforeMount","$78da16583ad93b9f$var$invokeVNodeHook","scopeId","needCallTransitionHooks","beforeEnter","onVnodeMounted","enter","parentVNode","$78da16583ad93b9f$var$cloneIfMounted","oldProps","newProps","$78da16583ad93b9f$var$toggleRecurse","onVnodeBeforeUpdate","areChildrenSVG","patchBlockChildren","patchProps","style","propsToUpdate","dynamicProps","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentSlotScopeIds","fragmentStartAnchor","fragmentEndAnchor","$78da16583ad93b9f$var$traverseStaticChildren","mountComponent","initialVNode","$78da16583ad93b9f$var$createComponentInstance","renderer","asyncDep","registerDep","setupRenderEffect","placeholder","nextVNode","prevChildren","nextChildren","$stable","asyncResolved","updateComponentPreRender","$78da16583ad93b9f$var$invalidateJob","bu","u","originNext","$0b19d744f65e59ab$export$39951422d618a9d3","nextTree","prevTree","bm","isAsyncWrapperVNode","hydrateNode","hydrateSubTree","scopedInitialVNode","rawPrevProps","kebabKey","camelizedKey","$78da16583ad93b9f$var$updateProps","needDeletionCheck","_","$78da16583ad93b9f$var$normalizeObjectSlots","deletionComparisonTarget","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","Math","min","oldLength","newLength","commonLength","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","newIndexToOldIndexMap","toBePatched","prevChild","patched","newIndex","maxNewIndexSoFar","moved","increasingNewIndexSequence","len","arrI","$78da16583ad93b9f$var$getSequence","nextIndex","move","moveType","moveStaticNode","performLeave","doRemove","deactivate","shouldInvokeDirs","shouldInvokeVnodeHook","onVnodeBeforeUnmount","unmountComponent","remove1","onVnodeUnmounted","removeFragment","performRemove","bum","um","suspenseId","pendingId","_vnode","mt","mc","patchChildren","$78da16583ad93b9f$var$createAppAPI","allowed","ch1","ch2","$78da16583ad93b9f$export$681d65eec9d1d1e8","maybeSelfReference","$78da16583ad93b9f$var$resolveAsset","$78da16583ad93b9f$var$COMPONENTS","warnMissing","selfName","$78da16583ad93b9f$var$getComponentName","$0b19d744f65e59ab$export$9a00dee1beb8f576","$78da16583ad93b9f$var$resolve","registry","$78da16583ad93b9f$var$currentBlock","disableTracking","$78da16583ad93b9f$var$closeBlock","$78da16583ad93b9f$var$isBlockTreeEnabled","$78da16583ad93b9f$var$setupBlock","$78da16583ad93b9f$export$9f2dfe8048dfb22b","$78da16583ad93b9f$export$3868d13f8734ae81","__v_isVNode","$78da16583ad93b9f$var$normalizeKey","$78da16583ad93b9f$var$normalizeRef","ref_key","ref_for","isBlockNode","needFullChildrenNormalization","__v_skip","normalize","$78da16583ad93b9f$var$_createVNode","$78da16583ad93b9f$var$NULL_DYNAMIC_COMPONENT","cloned","$78da16583ad93b9f$var$normalizeChildren","$78da16583ad93b9f$var$isClassComponent","__vccOpts","$78da16583ad93b9f$export$1f1be0e0e384d7d2","klass","__isSuspense","$78da16583ad93b9f$var$isSuspense","__isTeleport","$78da16583ad93b9f$var$isTeleport","extraProps","mergeRef","mergedProps","toMerge","incoming","$78da16583ad93b9f$export$9d1611c77c2fe928","targetAnchor","staticCount","$78da16583ad93b9f$export$22f9b5ffd89dac9","text","flag","$78da16583ad93b9f$export$49553837c7236d3c","asBlock","memo","slot","slotFlag","$78da16583ad93b9f$export$4bf387f59bfc6d67","renderItem","isCE","fallback","validSlotContent","$78da16583ad93b9f$var$ensureValidVNode","rendered","vnodes","$78da16583ad93b9f$var$getPublicInstance","$78da16583ad93b9f$var$isStatefulComponent","$78da16583ad93b9f$var$publicPropertiesMap","$","accessCache","normalizedProps","publicGetter","cssModule","globalProperties","target16","descriptor","$78da16583ad93b9f$var$emptyAppContext","exposeProxy","setupContext","bc","da","rtg","rtc","sp","ce","$78da16583ad93b9f$var$setupComponent","$78da16583ad93b9f$var$initProps","$78da16583ad93b9f$var$initSlots","setupResult","$78da16583ad93b9f$var$PublicInstanceProxyHandlers","$78da16583ad93b9f$var$createSetupContext","resolvedResult","$78da16583ad93b9f$var$handleSetupResult","e","$78da16583ad93b9f$var$finishComponentSetup","$78da16583ad93b9f$var$setupStatefulComponent","__ssrInlineRender","ssrRender","devtoolsRawSetupState","skipOptions","$78da16583ad93b9f$var$compile","template","isCustomElement","compilerOptions","delimiters","componentCompilerOptions","finalCompilerOptions","$78da16583ad93b9f$var$installWithProxy","target19","$78da16583ad93b9f$var$createAttrsProxy","target20","displayName","getterOrOptions","debugOptions","setter","onlyGetter","$9ee3aa3420ae2c81$var$doc","document","$9ee3aa3420ae2c81$var$templateContainer","$9ee3aa3420ae2c81$var$nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","setAttribute","createTextNode","node","nodeValue","textContent","querySelector","selector","content","before","previousSibling","lastChild","innerHTML","wrapper","firstChild","appendChild","$9ee3aa3420ae2c81$var$importantRE","$9ee3aa3420ae2c81$var$setStyle","setProperty","prefixed","rawName","$9ee3aa3420ae2c81$var$prefixCache","$9ee3aa3420ae2c81$var$prefixes","$9ee3aa3420ae2c81$var$autoPrefix","$9ee3aa3420ae2c81$var$xlinkNS","$9ee3aa3420ae2c81$var$_getNow","Date","now","$9ee3aa3420ae2c81$var$skipTimestampCheck","createEvent","timeStamp","performance","ffMatch","$9ee3aa3420ae2c81$var$cachedNow","$9ee3aa3420ae2c81$var$p","$9ee3aa3420ae2c81$var$reset","$9ee3aa3420ae2c81$var$addEventListener","addEventListener","$9ee3aa3420ae2c81$var$patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","$9ee3aa3420ae2c81$var$optionsModifierRE","$9ee3aa3420ae2c81$var$parseName","invoker","initialValue","attached","originalStop","stopImmediatePropagation","_stopped","$9ee3aa3420ae2c81$var$patchStopImmediatePropagation","$9ee3aa3420ae2c81$var$getNow","$9ee3aa3420ae2c81$var$createInvoker","removeEventListener","$9ee3aa3420ae2c81$var$removeEventListener","$9ee3aa3420ae2c81$var$nativeOnRE","$78da16583ad93b9f$export$abd95b5f5e8a8837","$9ee3aa3420ae2c81$var$resolveTransitionProps","$9ee3aa3420ae2c81$var$DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","$9ee3aa3420ae2c81$var$callHook","$9ee3aa3420ae2c81$export$be58926105124dd4","h","$9ee3aa3420ae2c81$var$hasExplicitCallback","baseProps","appearFromClass","$9ee3aa3420ae2c81$var$NumberOf","$9ee3aa3420ae2c81$var$normalizeDuration","durations","isAppear","makeEnterHook","finishEnter","$9ee3aa3420ae2c81$var$removeTransitionClass","$9ee3aa3420ae2c81$var$addTransitionClass","$9ee3aa3420ae2c81$var$whenTransitionEnds","enterDuration","finishLeave","$9ee3aa3420ae2c81$var$forceReflow","$9ee3aa3420ae2c81$var$nextFrame","leaveDuration","cls","classList","_vtc","requestAnimationFrame","expectedType","explicitTimeout","_endId","$9ee3aa3420ae2c81$var$endId","resolveIfNotStale","timeout","propCount","$9ee3aa3420ae2c81$var$getTransitionInfo","endEvent","ended","onEnd","getComputedStyle","getStyleProperties","styles","$9ee3aa3420ae2c81$var$TRANSITION","$9ee3aa3420ae2c81$var$getTimeout","transitionDelays","transitionDurations","animationDelays","$9ee3aa3420ae2c81$var$ANIMATION","animationDurations","animationTimeout","transitionTimeout","max","hasTransform","delays","d","$9ee3aa3420ae2c81$var$toMs","body","offsetHeight","$9ee3aa3420ae2c81$var$rendererOptions","transitionClasses","join","removeAttribute","className","$9ee3aa3420ae2c81$var$patchClass","isCssString","currentDisplay","display","$9ee3aa3420ae2c81$var$patchStyle","tagName","$9ee3aa3420ae2c81$var$shouldSetAsProp","$9ee3aa3420ae2c81$var$patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","$9ee3aa3420ae2c81$var$patchAttr","$9ee3aa3420ae2c81$var$ensureRenderer","$9ee3aa3420ae2c81$var$renderer","$3ef3ffeff8c52b50$export$2e2bcd8739ae039","script","$4020d7ac40220e7e$var$script","$4020d7ac40220e7e$export$2e2bcd8739ae039","$259dc96c8fa9e7cf$export$2e2bcd8739ae039","$el","$refs","selected","$8591bac0d74720af$var$_hoisted_1","$8591bac0d74720af$var$_hoisted_2","$8591bac0d74720af$var$_hoisted_3","$8591bac0d74720af$var$_hoisted_4","$8591bac0d74720af$var$_hoisted_5","$8591bac0d74720af$var$_hoisted_6","$8591bac0d74720af$var$_hoisted_7","$8591bac0d74720af$var$_hoisted_8","$8591bac0d74720af$var$_hoisted_9","$8591bac0d74720af$var$_hoisted_10","_component_router_link","$eb4c73a25dc649bc$export$2e2bcd8739ae039","$bdb67589e50ad1fc$var$script","$bdb67589e50ad1fc$export$2e2bcd8739ae039","$c5b78c5eedf15ec1$export$2e2bcd8739ae039","menuVisible","toggleMenu","$35350f870d8aa82e$var$_hoisted_1","$35350f870d8aa82e$var$_withScopeId","onclick","hidden","href","$35350f870d8aa82e$var$_hoisted_6","$35350f870d8aa82e$var$_hoisted_7","$35350f870d8aa82e$var$_hoisted_8","$35350f870d8aa82e$var$_hoisted_9","$e1fd7a0732ced288$export$2e2bcd8739ae039","$f9892132c8290d79$export$2e2bcd8739ae039","callbacks","shift","$b13fe8b659593e59$export$2e2bcd8739ae039","$a4f2ef37ad9f9c5c$export$dd0a697e1782aedd","$dctsr","$a4f2ef37ad9f9c5c$export$eceeba1a83a2f82e","site","subtitle","description","logo","theme","welcome","welcomeTitle","welcomeSubtitle","video","welcomeVideo","banners","banner","image","uri","page","aboutUs","about","buttons","actions","action","sermons","nodes","series","slug","count","groups","group","contact","whatsapp","contactWhatsapp","phone","contactPhone","location","contactLocation","email","contactEmail","footer","first","footerFirstTitle","footerFirst","second","footerSecondTitle","footerSecond","social","youtube","socialYoutube","instagram","socialInstagram","facebook","socialFacebook","spotify","socialSpotify","bannerStandalonePage","sermonSeries","sermonSerie","serie","sermon","passage","embedCode","date","preached","preacher","preachers","getTime","$58f9518dbf72f95d$export$de363e709c412c8a","delay","noTrailing","debounceMode","timeoutID","lastExec","clearExistingTimeout","clearTimeout","_len","arguments_","elapsed","exec","cancel","$58f9518dbf72f95d$export$61fc7d43ac8f84b0","atBegin","throttle","$c106e002a49a00cb$var$extendStatics","d1","b1","setPrototypeOf","__proto__","$c106e002a49a00cb$export$a8ba968b8961cb8a","TypeError","__","$c106e002a49a00cb$export$18ce0697a983be9b","$c106e002a49a00cb$export$3c9a16f847548506","getOwnPropertySymbols","propertyIsEnumerable","$c106e002a49a00cb$export$1050f835b63b671e","_arguments","P","generator","reject","fulfilled","step","rejected","$c106e002a49a00cb$export$67ebef60e6f28a6","g","label","sent","verb","throw","return","op","y","ops","trys","$c106e002a49a00cb$export$1216008129fb82ed","pack","ar","$a3f84e94050aaf3e$var$genericMessage","$a3f84e94050aaf3e$var$_a","$a3f84e94050aaf3e$var$setPrototypeOf","obj","proto","$a3f84e94050aaf3e$export$cea12affaee22fe8","message","_this","_super","framesToPop","Error","$a3f84e94050aaf3e$export$f5708dca728d7177","condition","$a3f84e94050aaf3e$var$verbosityLevels","$a3f84e94050aaf3e$var$verbosityLevel","$a3f84e94050aaf3e$var$wrapConsoleMethod","log","debug","warn","$55478c0b9b5a727a$export$f8b8b9ce72e9ccbf","thunk","$84d09c85a9a7b402$export$2e2bcd8739ae039","globalThis","$4c0039ba18a24edd$var$__","$4c0039ba18a24edd$var$GLOBAL_KEY","$d3c1734dacb01657$var$cachedSetTimeout","$d3c1734dacb01657$var$cachedClearTimeout","$4c0039ba18a24edd$export$2e2bcd8739ae039","__DEV__","writable","$4c0039ba18a24edd$var$getDEV","$d3c1734dacb01657$var$process","$d3c1734dacb01657$exports","$d3c1734dacb01657$var$defaultSetTimout","$d3c1734dacb01657$var$defaultClearTimeout","$d3c1734dacb01657$var$runTimeout","fun","$d3c1734dacb01657$var$currentQueue","$d3c1734dacb01657$var$queue","$d3c1734dacb01657$var$draining","$d3c1734dacb01657$var$queueIndex","$d3c1734dacb01657$var$cleanUpNextTick","$d3c1734dacb01657$var$drainQueue","marker","$d3c1734dacb01657$var$runClearTimeout","$d3c1734dacb01657$var$Item","array","$d3c1734dacb01657$var$noop","$eabd000a137c195f$var$maybe","nextTick","browser","env","argv","version","versions","addListener","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","cwd","chdir","umask","$eabd000a137c195f$var$safeGlobal","$eabd000a137c195f$var$needToRemove","$eabd000a137c195f$export$cd7f480d6b8286c3","$34b01444e3f50510$export$b6cb5906f04696c8","NODE_ENV","$87816c05f8bc32b9$export$9dec5d1b3b6a130d","$87816c05f8bc32b9$var$formatValue","seenValues","previouslySeenValues","toJSON","$87816c05f8bc32b9$var$isJSONable","jsonValue","remaining","items","$87816c05f8bc32b9$var$formatArray","object","$87816c05f8bc32b9$var$getObjectTag","properties","$87816c05f8bc32b9$var$formatObject","$87816c05f8bc32b9$var$formatObjectValue","$6ecd855f8439b8b2$export$1d2df86270c81ecb","locationOffset","line","column","toStringTag","$0fc25cbfeb3ea3c6$export$f5708dca728d7177","$f29a6c46f98e3b4e$var$LineRegExp","$f29a6c46f98e3b4e$export$e7fd20fad3cf4b5f","position","lastLineStart","matchAll","$77496046d2bf7ae5$export$96a9681e539deed","$77496046d2bf7ae5$export$867940333fd9f869","sourceLocation","firstLineColumnOffset","padStart","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","lines","locationLine","subLineIndex","floor","subLineColumnNum","subLines","$77496046d2bf7ae5$var$printPrefixedLines","subLine","existingLines","padLen","prefix","$ad59fcda558936ed$export$92d6ed0888e7cb7f","_this$nodes","_nodeLocations$","_ref","positions","originalError","extensions","firstArg","$ad59fcda558936ed$var$toNormalizedArgs","super","$ad59fcda558936ed$var$undefinedIfEmpty","nodeLocations","loc","locations","pos","originalExtensions","defineProperties","stack","captureStackTrace","output","formattedError","$6871b5530caf6380$export$bbee0c6176c019d4","$ecc889ad2ba38890$export$18a2be9195644f38","startToken","endToken","$ecc889ad2ba38890$export$50792b0e93539fde","kind","$ecc889ad2ba38890$export$4fcd777a40ccf407","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","$ecc889ad2ba38890$var$kindValues","$ecc889ad2ba38890$export$8ee0fc9ee280b4ee","maybeNode","maybeKind","$ecc889ad2ba38890$export$f58c50edb4aef9d4","$d47719a8ccd8a4e7$export$b45ffd2948484c41","$d97bc7149e91d740$export$a84bdc57c5122798","$a951c1e68c6e3c1b$export$8b9d26ab11394711","$fe1e55f01afa9ff5$export$3c52dd84024ae72c","code","$fe1e55f01afa9ff5$export$727d9dbc4fbb948f","$fe1e55f01afa9ff5$export$79c5d5217943d6a7","$fe1e55f01afa9ff5$export$45a677ea7cb6d5c8","$fe1e55f01afa9ff5$export$d3f406ff46035894","$e8d32533cecba28b$export$d5ee19b441e8d2ae","_firstNonEmptyLine2","commonIndent","MAX_SAFE_INTEGER","firstNonEmptyLine","lastNonEmptyLine","_firstNonEmptyLine","indent","$e8d32533cecba28b$var$leadingWhitespace","charCodeAt","$e8d6374a74b04f56$export$6168dc8908a6c652","startOfFileToken","SOF","lastToken","token","lineStart","advance","lookahead","EOF","nextToken","$e8d6374a74b04f56$var$readNextToken","COMMENT","$e8d6374a74b04f56$var$isUnicodeScalarValue","$e8d6374a74b04f56$var$isSupplementaryCodePoint","$e8d6374a74b04f56$var$isLeadingSurrogate","$e8d6374a74b04f56$var$isTrailingSurrogate","$e8d6374a74b04f56$var$printCodePointAt","lexer","codePointAt","char","fromCodePoint","toUpperCase","$e8d6374a74b04f56$var$createToken","col","bodyLength","$e8d6374a74b04f56$var$readComment","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","$e8d6374a74b04f56$var$readBlockString","$e8d6374a74b04f56$var$readString","$e8d6374a74b04f56$var$readNumber","$e8d6374a74b04f56$var$readName","firstCode","isFloat","$e8d6374a74b04f56$var$readDigits","FLOAT","INT","chunkStart","STRING","escape","$e8d6374a74b04f56$var$readEscapedUnicodeVariableWidth","$e8d6374a74b04f56$var$readEscapedUnicodeFixedWidth","$e8d6374a74b04f56$var$readEscapedCharacter","point","$e8d6374a74b04f56$var$readHexDigit","$e8d6374a74b04f56$var$read16BitHexCode","trailingCode","currentLine","blockLines","BLOCK_STRING","NAME","$7c984526aefdf116$export$7acfa6ed01010e37","sourceObj","$6ecd855f8439b8b2$export$75135ee9ed6e435b","_lexer","_options","parseName","expectToken","parseDocument","DOCUMENT","definitions","many","parseDefinition","peek","parseOperationDefinition","hasDescription","peekDescription","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseFragmentDefinition","parseTypeSystemExtension","unexpected","OPERATION_DEFINITION","operation","QUERY","variableDefinitions","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","MUTATION","SUBSCRIPTION","optionalMany","parseVariableDefinition","VARIABLE_DEFINITION","variable","parseVariable","parseTypeReference","expectOptionalToken","parseConstValueLiteral","parseConstDirectives","VARIABLE","SELECTION_SET","selections","parseSelection","parseFragment","parseField","nameOrAlias","alias","FIELD","parseArguments","isConst","parseConstArgument","parseArgument","ARGUMENT","parseValueLiteral","hasTypeCondition","expectOptionalKeyword","FRAGMENT_SPREAD","parseFragmentName","INLINE_FRAGMENT","typeCondition","parseNamedType","_this$_options","expectKeyword","allowLegacyFragmentVariables","FRAGMENT_DEFINITION","parseList","parseObject","parseStringLiteral","BOOLEAN","NULL","ENUM","varName","block","LIST","any","OBJECT","fields","parseObjectField","OBJECT_FIELD","parseDirective","DIRECTIVE","innerType","LIST_TYPE","NON_NULL_TYPE","NAMED_TYPE","parseDescription","operationTypes","parseOperationTypeDefinition","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","interfaces","parseImplementsInterfaces","parseFieldsDefinition","OBJECT_TYPE_DEFINITION","delimitedMany","parseFieldDefinition","parseArgumentDefs","FIELD_DEFINITION","parseInputValueDef","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","types","parseUnionMemberTypes","UNION_TYPE_DEFINITION","parseEnumValuesDefinition","ENUM_TYPE_DEFINITION","parseEnumValueDefinition","parseEnumValueName","ENUM_VALUE_DEFINITION","$7c984526aefdf116$var$getTokenDesc","parseInputFieldsDefinition","INPUT_OBJECT_TYPE_DEFINITION","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","repeatable","parseDirectiveLocations","DIRECTIVE_DEFINITION","parseDirectiveLocation","_this$_options2","noLocation","$7c984526aefdf116$var$getTokenKindDesc","atToken","openKind","parseFn","closeKind","delimiterKind","$e8d6374a74b04f56$export$59ac0f4da287406a","$ec77a3ed94739a3d$var$escapedRegExp","$ec77a3ed94739a3d$var$escapedReplacer","$ec77a3ed94739a3d$var$escapeSequences","$5b314d72cd5fda48$export$a89c95c098ac2a58","freeze","$5b314d72cd5fda48$export$bf638b60ea8b89b7","visitor","visitorKeys","enterLeaveMap","$5b314d72cd5fda48$export$736de8489257458","inArray","edits","ancestors","isEdited","editOffset","editKey","editValue","arrayKey","getOwnPropertyDescriptors","_enterLeaveMap$get","_enterLeaveMap$get2","visitFn","_node$kind","kindVisitor","$00c1965f52f432ef$export$c2d084dc44961371","ast","$00c1965f52f432ef$var$printDocASTReducer","$00c1965f52f432ef$var$join","varDefs","$00c1965f52f432ef$var$wrap","$00c1965f52f432ef$var$block","argsLine","$00c1965f52f432ef$var$indent","isBlockString","escapedValue","isSingleLine","forceLeadingNewLine","every","hasTrailingTripleQuotes","endsWith","hasTrailingQuote","hasTrailingSlash","forceTrailingNewline","printAsMultipleLines","minimize","skipLeadingNewLine","$e8d32533cecba28b$export$adb6ca997eeb1f45","$00c1965f52f432ef$var$hasMultilineItems","maybeArray","separator","_maybeArray$filter$jo","x","maybeString","_maybeArray$some","$83336e06d48e9800$export$3dc388a5f013b4a5","_a1","variables","directiveArguments","directiveName","ifArgument","ifValue","$83336e06d48e9800$export$b7bdffb7e6f1ef53","evaledValue","$83336e06d48e9800$export$2dafb573e282fe8d","names","$83336e06d48e9800$export$1b217de6ce18b9a","$83336e06d48e9800$export$8d1e9e5bbfa5d09a","$a13c94568f5e6715$export$abbf37c7cf644e41","fragmentName","actualFragmentName","fragments","definition","$a13c94568f5e6715$export$193789b4c8246dd4","symTable","fragment","$a13c94568f5e6715$export$f80bdb85f299186","selection","fragmentMap","$5537c8132578479e$export$417207af72fad9c9","$b388177190ce6014$export$634ae0e932e9be99","__ref","$b388177190ce6014$export$fa99cac1c0883c47","$b388177190ce6014$export$a1dab82d368d6525","argObj","$b388177190ce6014$var$isIntValue","$b388177190ce6014$var$isFloatValue","$b388177190ce6014$var$isBooleanValue","$b388177190ce6014$var$isStringValue","$b388177190ce6014$var$isObjectValue","nestedArgObj_1","$b388177190ce6014$var$isVariable","variableValue","$b388177190ce6014$var$isListValue","listValue","nestedArgArrayObj","$b388177190ce6014$var$isEnumValue","$b388177190ce6014$var$isNullValue","$b388177190ce6014$var$KNOWN_DIRECTIVES","$b388177190ce6014$export$3cdb6c178b88cabe","fieldName","filterKeys","filteredArgs_1","$b388177190ce6014$var$stringify","completeFieldName","stringifiedArgs","setStringify","previous","$b388177190ce6014$var$stringifyReplacer","copy","$b388177190ce6014$export$3f5a60fb6a781b4f","field","argObj_1","$b388177190ce6014$export$7d1ad22471852218","$b388177190ce6014$export$cf7bf7e4f289cc26","__typename","_i","$b388177190ce6014$export$fb56ad75dd311c12","typename","$b388177190ce6014$export$22a1cdafaf27bcff","$f2d277d3b1c65317$export$a7d0d8111d2386df","doc","operations","$f2d277d3b1c65317$export$7a5b1fa979d2c158","$f2d277d3b1c65317$export$41bca9dc6871dd4e","$f2d277d3b1c65317$export$5320a7ba9466a3df","$f2d277d3b1c65317$export$d96b2213c1b9d3a9","queryDef","$f2d277d3b1c65317$export$f431198736b7f96d","queryDoc","fragmentDefinition","$f2d277d3b1c65317$export$84c19026e616569e","defaultValues","defs","def","$85b5d3f8b97f10fa$export$21c5d5745f10f2e","elem","$20ecffafd7deb557$var$TYPENAME_FIELD","$20ecffafd7deb557$var$isEmpty","$20ecffafd7deb557$var$nullIfDocIsEmpty","fragmentDef","$f2d277d3b1c65317$export$772111caef41b3f5","$20ecffafd7deb557$var$getDirectiveMatcher","$20ecffafd7deb557$export$e5ae0530da5fe96c","variablesInUse","variablesToRemove","fragmentSpreadsInUse","fragmentSpreadsToRemove","modifiedDoc","arg","$20ecffafd7deb557$var$getAllFragmentSpreadsFromSelectionSet","frag","argMatcher","argument","aConfig","$20ecffafd7deb557$var$getArgumentMatcher","varDef","argConfig","argMatchCount_1","$20ecffafd7deb557$export$ecd5bb739c4a8b38","fs","$20ecffafd7deb557$export$7c9d17c333033c13","$20ecffafd7deb557$export$43b332f87950a467","lastIndexOf","added","$20ecffafd7deb557$var$connectionRemoveConfig","willRemove","allFragments","$20ecffafd7deb557$export$57c368c23873f32b","$2be6387a1c8e7847$var$_createForOfIteratorHelperLoose","o","allowArrayLike","it","minLen","$2be6387a1c8e7847$var$_arrayLikeToArray","$2be6387a1c8e7847$var$_unsupportedIterableToArray","arr2","$2be6387a1c8e7847$var$_defineProperties","$2be6387a1c8e7847$var$_createClass","Constructor","protoProps","staticProps","$2be6387a1c8e7847$var$hasSymbols","$2be6387a1c8e7847$var$hasSymbol","$2be6387a1c8e7847$var$getSymbol","$2be6387a1c8e7847$var$SymbolIterator","$2be6387a1c8e7847$var$SymbolObservable","$2be6387a1c8e7847$var$SymbolSpecies","$2be6387a1c8e7847$var$getMethod","$2be6387a1c8e7847$var$getSpecies","$2be6387a1c8e7847$export$77cea355fa80b5f4","$2be6387a1c8e7847$var$isObservable","$2be6387a1c8e7847$var$hostReportError","$2be6387a1c8e7847$var$enqueue","$2be6387a1c8e7847$var$cleanupSubscription","subscription","_cleanup","unsubscribe","$2be6387a1c8e7847$var$closeSubscription","_observer","_queue","_state","$2be6387a1c8e7847$var$notifySubscription","observer","$2be6387a1c8e7847$var$onNotify","queue","$2be6387a1c8e7847$var$flushSubscription","$2be6387a1c8e7847$var$Subscription","Subscription","subscriber","subscriptionObserver","$2be6387a1c8e7847$var$SubscriptionObserver","SubscriptionObserver","_subscription","_proto2","complete","_subscriber","_proto3","subscribe","_this2","_this3","_this4","C","hasSeed","hasValue","seed","acc","_this5","sources","startNext","flatMap","_this6","subscriptions","outer","value1","inner","completeIfDone","closed","_step","_iterator","of","_len2","_key2","symbol","hostReportError","$4b8f51561f15b678$var$prototype","$4b8f51561f15b678$var$fakeObsSymbol","$339149f45d08b972$var$hasOwnProperty","$339149f45d08b972$export$dd702b3c8240390c","$339149f45d08b972$export$160070228be94b08","merger","$339149f45d08b972$export$509e11c221f576c0","merge","$339149f45d08b972$var$defaultReconciler","property","reconciler","isObject","pastCopies","sourceKey","targetValue","shallowCopyForMerge","isFrozen","$8d7118e9965d9076$var$toString","$8d7118e9965d9076$export$629a2bd3f5a49ecc","$8d7118e9965d9076$var$cloneDeepHelper","copy_1","copy_2","$5b8d2485452e2fc6$var$deepFreeze","workSet","$5b8d2485452e2fc6$var$shallowFreeze","$5b8d2485452e2fc6$export$7f9c177735b71f18","$8be78a1ff61e0695$export$9f6c99ae166dbeca","observers","observersWithMethod","obs","$784513d87a02d230$export$707ee4c4c95d39e3","mapFn","catchFn","error1","activeCallbackCount","completed","promiseQueue","makeCallback","examiner","delegate","both","caught","sub","$11a8cd3787abe194$export$772fbc04a0ad4ce9","product","$11a8cd3787abe194$export$7293b8a0b474028d","WeakSet","$11a8cd3787abe194$export$23ba675b4b838b92","$b1c030913d6409b8$export$33c8bd820eece9b2","subclass","species","$c202a75408d1e8f9$var$isPromiseLike","$c202a75408d1e8f9$export$ae0cf2ec7a6fa78e","addObserver","removeObserver","addCount","promise","handlers","latest","reason","iterable","deliverLastMessage","nextOrError","quietly","$567b0a851db9ce84$export$d307f5934e447d0e","$5c5a4aa7af6365bb$export$b4df399e879e53ab","errors","$cf90a3eb212c53fb$export$8e16b83750b44988","objects","$d510321921a165fa$var$prefixCounts","$d510321921a165fa$export$d0c8ec0fe1b18b70","random","$aef203517fec552d$export$4fd972edbe7450d3","errorValue","$53a0931aa17b61f8$export$c33ef9219f27efd7","response","statusCode","status","$9ec7f3d732285c7b$var$passthrough","forward","$9ec7f3d732285c7b$var$toLink","$9ec7f3d732285c7b$export$2fed3d61f740bc7f","$9ec7f3d732285c7b$var$isTerminating","link","request","$9ec7f3d732285c7b$var$LinkError","LinkError","empty","links","left","right","leftLink","rightLink","execute","starting","$6be621cf36871f3d$export$f29bedd62f56fcb2","transformedOperation","operationName","query","$fbd9a931fc2518ea$export$4f3f7df1b558c729","OPERATION_FIELDS","$1e14adcce52b5065$export$a92a48117d546c9","firstLink","nextLink","onError","setOnError","$69f6cc1e97218945$export$51396ec711da548b","$45d57bbf05f73c56$export$5f8e80ac52052e28","serialized","parseError","$8e8298abd1b48bc1$var$hasOwnProperty","$05826a9715da1c6e$export$dd86f00dc866e75d","http","includeQuery","includeExtensions","headers","accept","$05826a9715da1c6e$export$e88934976ca4fd65","printer","$05826a9715da1c6e$export$12d90ccf75844275","configs","$05826a9715da1c6e$var$headersToLowerCase","credentials","normalized_1","$6c992965bb1ce098$var$backupFetch","fetch","$6c992965bb1ce098$export$95180a16573d6675","linkOptions","preferredFetch","_b1","print","useGETForQueries","_c1","includeUnusedVariables","requestOptions","fetcher","$4bf33c0ff2d16551$export$8423f0cd3773115e","linkConfig","fetchOptions","chosenURI","fallbackURI","getContext","$9c22454ad254be19$export$63ccc2571850f81a","clientAwarenessHeaders","clientAwareness","name_1","controller","contextHeaders","contextConfig","unusedNames_1","signal","AbortController","$2dc9f9bf261084b2$export$f5853cd1fc39aea6","_controller","queryParams","addQueryParam","encodeURIComponent","serializedVariables","serializedExtensions","preFragment","fragmentStart","substr","queryParamsPrefix","newURI","$0b4eb4caa0a48d79$export$fb82bb094b6f76b5","setContext","bodyText","parse","abort","$0fc6b6d26c07cd5c$export$f4bbf1aec241cc1","$4cb02e43560e660e$var$_a","$4cb02e43560e660e$var$toString","$4cb02e43560e660e$var$hasOwnProperty","$4cb02e43560e660e$var$fnToStr","$4cb02e43560e660e$var$previousComparisons","$4cb02e43560e660e$export$2e2bcd8739ae039","$4cb02e43560e660e$var$check","full","suffix","fromIndex","aTag","$4cb02e43560e660e$var$previouslyCompared","keyCount","bKeys","aKeys","aIterator","isMap","info","aKey","aValue","Uint8Array","byteLength","$4cb02e43560e660e$var$isDefinedKey","$4cb02e43560e660e$var$nativeCodeSuffix","bSet","$01d835513210545b$var$defaultMakeData","$01d835513210545b$var$_a","$01d835513210545b$var$forEach","$01d835513210545b$var$slice","$01d835513210545b$export$73571c50d0f2507e","weakness","makeData","lookup","lookupArray","getChildTrie","$01d835513210545b$var$isObjRef","weak","strong","$c56b3f616b64e09a$var$currentContext","$c56b3f616b64e09a$var$MISSING_VALUE","$c56b3f616b64e09a$var$idCounter","$c56b3f616b64e09a$var$globalKey","$c56b3f616b64e09a$var$host","$c56b3f616b64e09a$export$8c6ed5c666ac1360","context_1","getValue","withValue","saved","noContext","$a32bd6eac5fa9ec8$var$defaultDispose","$a32bd6eac5fa9ec8$var$Cache","Cache","dispose","newest","oldest","getNode","older","newer","clean","$a32bd6eac5fa9ec8$var$parentEntrySlot","$a32bd6eac5fa9ec8$var$hasOwnProperty","$a32bd6eac5fa9ec8$var$toArray","$a32bd6eac5fa9ec8$var$_a","collection","$a32bd6eac5fa9ec8$var$maybeUnsubscribe","entryOrDep","$a32bd6eac5fa9ec8$var$emptySetPool","$a32bd6eac5fa9ec8$var$assert","optionalMessage","$a32bd6eac5fa9ec8$var$valueGet","$a32bd6eac5fa9ec8$var$Entry","Entry","parents","childValues","dirtyChildren","dirty","recomputing","$a32bd6eac5fa9ec8$var$mightBeDirty","$a32bd6eac5fa9ec8$var$rememberParent","recompute","entry","$a32bd6eac5fa9ec8$var$forgetChildren","$a32bd6eac5fa9ec8$var$recomputeNewValue","setDirty","$a32bd6eac5fa9ec8$var$maybeSubscribe","$a32bd6eac5fa9ec8$var$reportClean","$a32bd6eac5fa9ec8$var$setClean","$a32bd6eac5fa9ec8$var$reallyRecompute","$a32bd6eac5fa9ec8$var$reportDirty","$a32bd6eac5fa9ec8$var$eachParent","$a32bd6eac5fa9ec8$var$forgetChild","forget","dependOn","$a32bd6eac5fa9ec8$export$c723b7eff9d8f870","forgetDeps","$a32bd6eac5fa9ec8$var$reportDirtyChild","$a32bd6eac5fa9ec8$var$reportCleanChild","parentCount","parentWasClean","childValue","$a32bd6eac5fa9ec8$var$removeDirtyChild","dc","$a32bd6eac5fa9ec8$var$EntryMethods","depsByKey","depend","dep_1","entryMethodName","m_1","$a32bd6eac5fa9ec8$var$makeDefaultMakeCacheKeyFunction","keyTrie","$a32bd6eac5fa9ec8$var$caches","$a32bd6eac5fa9ec8$export$4997ffc0176396a6","originalFunction","cache1","pow","keyArgs","makeCacheKey","optimistic","dirtyKey","peekKey","forgetKey","getKey","$9427f060fd271642$export$5fc74f25506aa9c","getFragmentDoc","batch","updateResult","optimisticId","performTransaction","recordOptimisticTransaction","transaction","transformDocument","identify","gc","modify","transformForLink","readQuery","read","rootId","readFragment","writeQuery","write","dataId","writeFragment","updateQuery","updateFragment","$257ce6c90abcf5e1$export$257c68286583b0f9","$237d6260c2314564$export$b5a638e9b3fff9f3","$237d6260c2314564$export$bd03c5a9c99d6bce","_id","keyObject","$237d6260c2314564$var$defaultConfig","dataIdFromObject","addTypename","resultCaching","canonizeResults","$237d6260c2314564$export$3ac2a95fbd99c479","$237d6260c2314564$export$6ed54d4784f1ce28","$237d6260c2314564$export$37874422037b6029","storeFieldName","$237d6260c2314564$export$60bd1cbb09c1a4a2","$237d6260c2314564$export$43bee75e5e14138e","$237d6260c2314564$export$4f39afca21bd938e","$a2a2550715192135$var$DELETE","$a2a2550715192135$var$delModifier","$a2a2550715192135$var$INVALIDATE","$a2a2550715192135$export$cb507f57054c7321","policies","rootIds","getFieldValue","objectOrReference","canRead","objOrRef","toReference","objOrIdOrRef","mergeIntoStore","toObject","storeObject","rootTypenamesById","$a2a2550715192135$var$Layer","dependOnExistence","$a2a2550715192135$var$storeObjectReconciler","caching","fieldsToDirty_1","__exists","hasKeyArgs","changedFields_1","needToMerge_1","allDeleted_1","sharedDetails_1","DELETE","INVALIDATE","isReference","readField","fieldNameOrOptions","store","fieldValue","storage","getStorage","getStoreFieldName","evict","limit","evicted","extract","extraRootIds","getRootIdSet","__META","newData","rest_1","retain","release","ids","snapshot","findChildRefIds","idsToRemove","root_1","found_1","workSet_1","keyMaker","$a2a2550715192135$var$CacheGroup","CacheGroup","resetCaching","$a2a2550715192135$var$makeDepKey","$a2a2550715192135$export$f8068a30967ddc18","entityId","$a2a2550715192135$export$488c0743feab3d61","Root1","Root","stump","$a2a2550715192135$var$Stump","storageTrie","addLayer","layerId","replay","removeLayer","Layer","ownStoreObject","parentStoreObject","Stump","existingObject","incomingObject","existingValue","incomingValue","$19ecdbc073a8798b$var$stringifyCanon","$19ecdbc073a8798b$var$stringifyCache","$19ecdbc073a8798b$export$c2e7fdd82233f4a4","known","pool","passes","keysByJSON","admit","isKnown","pass","$19ecdbc073a8798b$var$shallowCopy","original","proto_1","array_1","sortedKeys","json","firstValueIndex_1","sorted","obj_1","$19ecdbc073a8798b$export$88a0ad9b6f961b51","$19ecdbc073a8798b$var$resetCanonicalStringify","canonical","reset","$73934812392b291b$var$execSelectionSetKeyArgs","$73934812392b291b$export$628ef07ba8965f12","knownResults","canon","executeSelectionSet","peekArgs","other","enclosingRef","execSelectionSetImpl","resultCacheMaxSize","varString","executeSubSelectedArray","execSubSelectedArrayImpl","resetCanon","diffQueryAgainstStore","returnPartialData","missing","rootRef","execResult","$73934812392b291b$var$firstMissing","isFresh","result1","handleMissing","resultName","rootIdsByTypename","fragmentMatches","finalResult","frozen","_a2","childResult","$237d6260c2314564$export$fdef206c83ff2c09","$73934812392b291b$var$assertSelectionSetForIdValue","tree","$1c939e52cd624a16$export$ac9723609f5c76c2","$1c939e52cd624a16$var$cacheInfoMap","$1c939e52cd624a16$var$getCacheInfo","vars","$1c939e52cd624a16$export$cbe12faed7725318","rv","forgetCache","$1c939e52cd624a16$export$5345c8ac69b4a9db","caches","$1c939e52cd624a16$var$broadcast","oldListeners","listener","attach","onNextChange","attachCache","broadcastWatches","$1934d770913b4ac6$var$specifierInfoCache","$1934d770913b4ac6$var$lookupSpecifierInfo","spec","cacheKey","$1934d770913b4ac6$export$f1953a0407594d2c","specifier","keyFieldsFn","$1934d770913b4ac6$export$2db31da99613c21f","schemaKeyPath","extracted","$1934d770913b4ac6$export$e8f64f7a025887d3","$1934d770913b4ac6$var$extractKey","$1934d770913b4ac6$export$550737ee0cc371ac","keyArgsFn","collected","keyPath","firstKey","firstChar","charAt","variableName","varKeyPath","directiveName_1","find","directiveArgs","extractor","$1934d770913b4ac6$export$eca459f173e85801","paths","paths_1","currentPath_1","$1934d770913b4ac6$var$normalize","reducer","$0379df566dc6e8e1$var$argsFromFieldSpecifier","$0379df566dc6e8e1$var$nullKeyFieldsFn","$0379df566dc6e8e1$var$simpleKeyArgsFn","_args","$0379df566dc6e8e1$var$mergeTrueFn","mergeObjects","$0379df566dc6e8e1$var$mergeFalseFn","$0379df566dc6e8e1$export$e9859ad90648930b","typePolicies","toBeAdded","supertypeMap","fuzzySubtypes","usingPossibleTypes","setRootTypename","possibleTypes","addPossibleTypes","addTypePolicies","partialContext","ROOT_QUERY","$0379df566dc6e8e1$export$1ad7a877581bdf2e","policy","getTypePolicy","keyFn","specifierOrId","queryType","mutationType","subscriptionType","updateTypePolicy","incoming1","existing1","keyFields","setMerge","getFieldPolicy","which","old","supertype","getSupertypeSet","subtype","policy_1","supertypes","rest","inbox","createIfMissing","fieldPolicies","supertypeSet","typenameSupertypeSet","workQueue_1","maybeEnqueue_1","needToCheckFuzzySubtypes","checkingFuzzySubtypes","supertypeSet1","regExp","fuzzyString","fieldSpec","specifierOrString","directivesObj","$b388177190ce6014$export$54be8689c65f3b56","readOptions","$0379df566dc6e8e1$var$makeFieldFunctionOptions","getReadFunction","getMergeFunction","parentTypename","childTypename","runMergeFunction","$0379df566dc6e8e1$var$makeMergeObjectsFunction","overwrite","readFieldArgs","undefId","argc","eType","iType","$30b1d870164f3a27$var$getContextFlavor","clientOnly","deferred","flavored","flavors","$30b1d870164f3a27$export$eb8361c5d132fb8f","reader","writeToStore","dataId1","operationDefinition","written","incomingById","processSelectionSet","mergeTree","fieldNodeSet","entityRef","applied","applyMerges","fieldsWithSelectionSets_1","hasSelectionSet_1","childTree","hasMergeFunction_1","existingRef","incomingObj","getChild","parentType","typeDotName","$30b1d870164f3a27$var$warnings","childTypenames","$30b1d870164f3a27$var$warnAboutDataLoss","context1","result_1","flattenFields","resultFieldKey","$30b1d870164f3a27$var$getChildMergeTree","processFieldValue","$30b1d870164f3a27$var$maybeRecycleChildMergeTree","substring","dataRef","sets","previous_1","$30b1d870164f3a27$var$mergeMergeTrees","$30b1d870164f3a27$var$mergeTreeIsEmpty","selectionSet1","fieldMap","limitingTrie","flatten","inheritedContext","visitedNode","visited","if","getStorageArgs","e_1","i_1","getValue_1","eVal","iVal","aVal","$30b1d870164f3a27$var$emptyMergeTreePool","needToMergeMaps","remainingRightKeys_1","leftTree","$80f39fc2fdae3cc1$export$467265324939f47f","watches","typenameDocumentCache","makeVar","txCount","$237d6260c2314564$export$fa542f9ee3f7f4e2","init","rootStore","optimisticData","resetResultCache","resetResultIdentities","previousReader","storeReader","storeWriter","maybeBroadcastWatch","broadcastWatch","restore","broadcast","diff","discardWatches","removeOptimistic","idToRemove","newOptimisticData","onWatchUpdated","perform","layer","alreadyDirty","lastDiff","fromOptimisticTransaction","$fa648b8a9a52e44b$export$17f5e6bd290bb15d","$49da3f9343f89220$export$bd096ddbd246c79c","$fa648b8a9a52e44b$export$26a337512320b8c6","graphQLErrors","clientErrors","networkError","errorMessage","extraInfo","$49da3f9343f89220$export$37509604341a3464","networkStatus","$493d70bec1143de5$var$assign","$493d70bec1143de5$var$hasOwnProperty","$493d70bec1143de5$var$warnedAboutUpdateQuery","$493d70bec1143de5$export$6c1b56eac59c9584","queryManager","queryInfo","subObserver","$493d70bec1143de5$var$defaultSubscriptionObserverErrorCallback","reobserve","tearDownQuery","isTornDown","queryId","generateQueryId","opDef","queryName","initialFetchPolicy","fetchPolicy","removeQuery","getCurrentResult","saveAsLastResult","lastResult","getLastResult","ready","transform","hasForcedResolvers","getDiff","partial","partialRefetch","$493d70bec1143de5$export$b7e1973aacac3ae7","updateLastResult","isDifferentFromLastResult","newResult","getLast","variablesMustMatch","getLastError","resetLastResults","resetQueryStoreErrors","resetErrors","refetch","reobserveOptions","pollInterval","resetLastWrite","fetchMore","fetchMoreOptions","combinedOptions","qid","notifyOnNetworkStatusChange","observe","fetchQuery","fetchMoreResult","finally","stopQuery","subscribeToMore","startGraphQLSubscription","subscriptionData","setOptions","newOptions","setVariables","broadcastQueries","startPolling","updatePolling","stopPolling","newNetworkStatus","setObservableQuery","fetchQueryObservable","ssrMode","pollingInfo","interval","maybeFetch","poll","assumeImmutableResults","useDisposableConcast","oldVariables","concast","reportResult","reportError","lastError","errorResult","hasObservers","$2b9af9f8e7b32243$export$19901bcd339c3ded","client","resolvers","fragmentMatcher","addResolvers","setFragmentMatcher","resolverGroup","setResolvers","getResolvers","runResolvers","remoteResult","onlyRunForcedResolvers","resolveDocument","localResult","getFragmentMatcher","clientQuery","serverQuery","$20ecffafd7deb557$export$8eae69e876ee321e","prepareContext","getCacheKey","addExportedVariables","buildRootValueFromCache","exportedVariables","shouldForceResolvers","forceResolvers","rootValue","mainDefinition","definitionOperation","defaultOperationType","execContext","resolveSelectionSet","resultsToMerge","resolveField","fieldResult","fragmentResult","all","aliasedFieldName","aliasUsed","defaultResult","resultPromise","resolverType","resolverMap","resolveSubSelectedArray","$a90fe5a40c5c788c$var$destructiveMethodCounts","$a90fe5a40c5c788c$var$wrapDestructiveCacheMethod","methodName","$a90fe5a40c5c788c$var$cancelNotifyTimeout","$a90fe5a40c5c788c$export$79a6120a39c90b6a","lastRequestId","stopped","observableQuery","getDiffOptions","updateWatch","oq","updateLastDiff","setDiff","oldDiff","notifyTimeout","notify","oqListener","shouldNotify","watcher","lastWatch","lastWrite","shouldWrite","dmCount","markResult","cacheWriteBehavior","$a90fe5a40c5c788c$export$5f47a9fb9a521654","errorPolicy","diffOptions","markReady","markError","ignoreErrors","writeWithErrors","$ac1a7f8930d4d2ad$var$hasOwnProperty","$ac1a7f8930d4d2ad$export$b986383a50b53ea4","queryDeduplication","onBroadcast","localState","queries","fetchCancelFns","transformCache","queryIdCounter","requestIdCounter","mutationIdCounter","inFlightLinkObservables","mutationStore","_info","stopQueryNoBroadcast","cancelPendingFetches","mutate","mutation","optimisticResponse","updateQueries","refetchQueries","awaitRefetchQueries","updateWithProxyFn","onQueryUpdated","_e","keepRootFields","mutationId","generateMutationId","getVariables","hasClientExports","mutationStoreValue","markMutationOptimistic","getObservableFromLink","storeResult","markMutationResult","cacheWrites","skipCache","updateQueries_1","updater","currentQueryResult","nextQueryResult","mutationResult","queryVariables","results_1","updateCache","asQuery","include","getQueryStore","transformed","forLink","cacheEntry_1","defaultVars","watchQuery","generateRequestId","stopQueryInStore","stopQueryInStoreNoBroadcast","clearStore","getObservableQueries","queryNamesAndDocs","legacyQueryOptions","desc","getQuery","included","nameOrDoc","reFetchObservableQueries","includeStandby","observableQueryPromises","variables1","makeObservable","observablePromise_1","getLocalState","deduplication","inFlightLinkObservables_1","forceFetch","byVariables_1","varJson_1","getResultsFromLink","requestId","hasErrors","aqr","variables2","fromVariables","fetchQueryByPolicy","nextFetchPolicy","$493d70bec1143de5$export$8c5b00bbde02330","includedQueriesById","results","networkStatus1","refetchWritePolicy","oldNetworkStatus","readCache","resultsFromCache","data1","fromData","resultsFromLink","diff1","newContext","$7ebfeb54385b6a36$var$hasSuggestedDevtools","$7ebfeb54385b6a36$export$235b7fc70b9fc359","defaults","$a4f2ef37ad9f9c5c$var$currentApolloClient","$7ebfeb54385b6a36$export$13f5a5f0f1dbab88","defaultOptions","resetStoreCallbacks","clearStoreCallbacks","ssrForceFetchDelay","connectToDevTools","__APOLLO_CLIENT__","typeDefs","clientAwarenessName","clientAwarenessVersion","disableNetworkFetches","resetStore","top","__APOLLO_DEVTOOLS_GLOBAL_HOOK__","nav","ua","url","devToolsHookCb","mutations","dataWithOptimisticResults","__actionHookForDevTools","__requestRaw","payload","onResetStore","onClearStore","obsQuery","serializedState","setLocalStateFragmentMatcher","setLink","newLink","$a4f2ef37ad9f9c5c$export$94cf8e70e4c497e0","$a4f2ef37ad9f9c5c$export$43f5b31e2139a8e9","$a4f2ef37ad9f9c5c$export$eb9a56e7a29e494","clientId","resolveImpl","savedCurrentClient","providedApolloClients","providedApolloClient","$a4f2ef37ad9f9c5c$var$resolveClientWithId","$a4f2ef37ad9f9c5c$var$resolveDefaultClient","resolveClient","$a4f2ef37ad9f9c5c$var$paramToRef","param","$a4f2ef37ad9f9c5c$var$paramToReactive","$a4f2ef37ad9f9c5c$var$useEventHook","fns","$a4f2ef37ad9f9c5c$var$getAppTracking","vm","$root","appTracking","_apolloAppTracking","$a4f2ef37ad9f9c5c$var$getCurrentTracking","tracking","$a4f2ef37ad9f9c5c$var$track","mod","$a4f2ef37ad9f9c5c$var$toApolloError","$a4f2ef37ad9f9c5c$var$isServer","$a4f2ef37ad9f9c5c$var$useQueryImpl","lazy","currentOptions","documentRef","variablesRef","optionsRef","resultEvent","errorEvent","$a4f2ef37ad9f9c5c$var$trackQuery","firstResolve","firstReject","isEnabled","prefetch","apolloError","started","currentDocument","currentVariables","startQuerySubscription","currentResult","onNextResult","subscribeToMoreItems","addSubscribeToMore","queryResult","processNextResult","processError","trigger","queryError","resubscribeToQuery","onStopHandlers","debouncedRestart","restarting","baseRestart","currentVariablesSerialized","isRestartDebounceSetup","updateRestartFn","debounce","restart","unsubscribeFns","forceDisabled","enabledOption","options2","item2","onResult","pick","$babe50d3fc546cfa$export$c22522a4dfa48e9c","$99c33f0dbd4ac4a3$var$docCache","$99c33f0dbd4ac4a3$var$fragmentSourceMap","$99c33f0dbd4ac4a3$var$printFragmentWarnings","$99c33f0dbd4ac4a3$var$experimentalFragmentVariables","$99c33f0dbd4ac4a3$var$normalize","string","$99c33f0dbd4ac4a3$var$processFragments","seenKeys","sourceKeySet","$99c33f0dbd4ac4a3$var$parseDocument","parsed","$7c984526aefdf116$export$98e6a39c04603d36","experimentalFragmentVariables","$99c33f0dbd4ac4a3$var$stripLoc","$99c33f0dbd4ac4a3$export$72e4926bf8358653","literals","gql_1","$99c33f0dbd4ac4a3$var$extras","gql","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","$99c33f0dbd4ac4a3$export$2e2bcd8739ae039","$0d9c45f62ccee457$var$_hoisted_1","$0d9c45f62ccee457$var$_hoisted_3","$0d9c45f62ccee457$var$_hoisted_4","$0d9c45f62ccee457$var$_hoisted_5","$0d9c45f62ccee457$var$_hoisted_6","$0d9c45f62ccee457$var$_hoisted_7","$0d9c45f62ccee457$var$_hoisted_8","$0d9c45f62ccee457$var$_hoisted_9","$0d9c45f62ccee457$var$_hoisted_10","$0d9c45f62ccee457$var$_hoisted_11","$0d9c45f62ccee457$var$_withScopeId","_component_Section","src","_component_MenuHorizontal","_component_MenuCollapsible","_component_router_view","$4e40de3ae2ab0eed$export$2e2bcd8739ae039","$a17b7616fd611076$export$2e2bcd8739ae039","$3FjR9","$exRu3","inicio","sermoes","ministerios","contato","SERMONS_LENGTH","onDataMounted","onScroll","$emit","anchors","whatsappNumber","replaceAll","whatsappLink","buildWhatsappLink","phoneLink","locationLink","encodeURI","emailLink","$router","currentRoute","onContact","getBoundingClientRect","innerHeight","documentElement","clientHeight","activeSection","preventDefault","open","focus","$2ab49a7eeedb15d2$var$script","$2ab49a7eeedb15d2$export$2e2bcd8739ae039","$ed288bb0aaa7fe33$export$2e2bcd8739ae039","timer","slides","pagination","touchEventX","touchEventY","touchDirection","setupPagination","changeToSlide","stopTimer","passive","restartTimer","handleTouchStart","handleTouchMove","handleTouchEnd","button","startTimer","changeToNextSlide","nextSlideIndex","changeToPrevSlide","prevSlideIndex","touches","clientX","clientY","xUp","yUp","xDiff","yDiff","abs","$a03a85ccda0f2fdc$var$_hoisted_1","$a03a85ccda0f2fdc$var$_hoisted_2","$a03a85ccda0f2fdc$var$_hoisted_3","$b27ccd792fb43337$export$2e2bcd8739ae039","$a96da2897749b8a3$var$script","$a96da2897749b8a3$export$2e2bcd8739ae039","$257797b2a688d11c$export$2e2bcd8739ae039","$93b8a1bfd0675724$var$_hoisted_1","$0147af8ae3b0b25a$export$2e2bcd8739ae039","$c469b5b8677a50e6$var$_hoisted_3","$c469b5b8677a50e6$var$_hoisted_4","$c469b5b8677a50e6$var$_hoisted_5","$c469b5b8677a50e6$var$_hoisted_6","$c469b5b8677a50e6$var$_hoisted_7","$c469b5b8677a50e6$var$_hoisted_11","$c469b5b8677a50e6$var$_hoisted_13","$c469b5b8677a50e6$var$_hoisted_15","$c469b5b8677a50e6$var$_hoisted_17","$c469b5b8677a50e6$var$_hoisted_19","$c469b5b8677a50e6$var$_hoisted_21","$c469b5b8677a50e6$var$_hoisted_24","$c469b5b8677a50e6$var$_hoisted_25","$c469b5b8677a50e6$var$_hoisted_27","$c469b5b8677a50e6$var$_withScopeId","$c469b5b8677a50e6$var$_hoisted_28","$c469b5b8677a50e6$var$_hoisted_29","$c469b5b8677a50e6$var$_hoisted_31","$c469b5b8677a50e6$var$_hoisted_32","$c469b5b8677a50e6$var$_hoisted_33","$c469b5b8677a50e6$var$_hoisted_35","$c469b5b8677a50e6$var$_hoisted_36","$c469b5b8677a50e6$var$_hoisted_37","$c469b5b8677a50e6$var$_hoisted_39","$c469b5b8677a50e6$var$_hoisted_40","$c469b5b8677a50e6$var$_hoisted_41","rows","$c469b5b8677a50e6$var$_hoisted_1","$c469b5b8677a50e6$var$_hoisted_2","_component_Carousel","controls","$c469b5b8677a50e6$var$_hoisted_10","alternate","border","_component_Button","$c469b5b8677a50e6$var$_hoisted_14","$c469b5b8677a50e6$var$_hoisted_20","$c469b5b8677a50e6$var$_hoisted_23","$c469b5b8677a50e6$var$_hoisted_42","$c469b5b8677a50e6$var$_hoisted_46","$b2751f176fb3d95e$export$2e2bcd8739ae039","$73f720a7270bf434$export$2e2bcd8739ae039","$nextTick","$6953ec216bc9c7a1$var$_hoisted_1","$6953ec216bc9c7a1$var$_hoisted_2","$a2c2ec96c0f0e847$export$2e2bcd8739ae039","$c5b180b245275cfb$export$2e2bcd8739ae039","play","dataset","sermonContent","toggle","$1dc1327d180297ab$var$_hoisted_3","$1dc1327d180297ab$var$_hoisted_4","$1dc1327d180297ab$var$_hoisted_7","$1dc1327d180297ab$var$_hoisted_8","$1dc1327d180297ab$var$_withScopeId","$1dc1327d180297ab$var$_hoisted_12","$1dc1327d180297ab$var$_hoisted_13","$1dc1327d180297ab$var$_hoisted_14","$1dc1327d180297ab$var$_hoisted_15","$1dc1327d180297ab$var$_hoisted_16","$1dc1327d180297ab$var$_hoisted_17","$1dc1327d180297ab$var$_hoisted_1","$1dc1327d180297ab$var$_hoisted_2","toLocaleDateString","$9bd2e5c8209a0dc8$export$2e2bcd8739ae039","$a01a54bda35c29a4$export$2e2bcd8739ae039","$705ebf3812d66f06$var$_hoisted_2","$705ebf3812d66f06$var$_hoisted_4","$705ebf3812d66f06$var$_hoisted_1","$34fa141ac038c16c$export$2e2bcd8739ae039","$babe50d3fc546cfa$export$bc32a04c49ed7464","$efc49d9c17851a9d$var$supported","$efc49d9c17851a9d$var$perf","$efc49d9c17851a9d$export$461939dd4422153","perf_hooks","$8e12b756c61c1b85$export$5728f3776e9b2ac1","targetQueue","onQueue","defaultSettings","settings","localSettingsSaveId","currentSettings","localStorage","getItem","fallbacks","getSettings","setSettings","setItem","pluginId","proxiedOn","_target","proxiedTarget","async","item1","$36aa92c7adf41d43$export$63b9a9bba9f20f3e","pluginDescriptor","setupFn","enableProxy","enableEarlyProxy","__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__","__VUE_DEVTOOLS_PLUGINS__","$b890561290d3c2b9$var$hasSymbol","$b890561290d3c2b9$var$PolySymbol","$b890561290d3c2b9$export$7f4879db1558672d","$b890561290d3c2b9$export$9b3825c34ca1427a","$b890561290d3c2b9$export$b6c0da8b9dae491f","$b890561290d3c2b9$export$3aca783e9a3e6e9e","$b890561290d3c2b9$export$54c8124bead129f8","$b890561290d3c2b9$var$isBrowser","$b890561290d3c2b9$var$applyToParams","newParams","$b890561290d3c2b9$var$noop","$b890561290d3c2b9$var$TRAILING_SLASH_RE","$b890561290d3c2b9$var$parseURL","$b890561290d3c2b9$export$1e8473eaf75b0d10","currentLocation","searchString","hash","searchPos","hashPos","toSegments","toPosition","segment","fromSegments","$b890561290d3c2b9$var$resolveRelativePath","fullPath","$b890561290d3c2b9$var$stripBase","pathname","$b890561290d3c2b9$var$isSameRouteRecord","aliasOf","$b890561290d3c2b9$var$isSameRouteLocationParams","$b890561290d3c2b9$var$isSameRouteLocationParamsValue","$b890561290d3c2b9$var$isEquivalentArray","$b890561290d3c2b9$var$NavigationType","NavigationType","$b890561290d3c2b9$var$NavigationDirection","NavigationDirection","$b890561290d3c2b9$var$normalizeBase","baseEl","getAttribute","$b890561290d3c2b9$var$BEFORE_HASH_RE","$b890561290d3c2b9$var$createHref","pageXOffset","pageYOffset","$b890561290d3c2b9$var$scrollToPosition","scrollToOptions","positionEl","isIdSelector","getElementById","offset","docRect","elRect","behavior","$b890561290d3c2b9$var$getElementPosition","scrollTo","$b890561290d3c2b9$var$getScrollKey","delta","history","$b890561290d3c2b9$var$createBaseLocation","protocol","host","$b890561290d3c2b9$var$createCurrentLocation","search","slicePos","pathFromHash","$b890561290d3c2b9$var$buildState","back","replaced","computeScroll","scroll","$b890561290d3c2b9$var$computeScrollPosition","$b890561290d3c2b9$export$7b4942f78e7b8a49","historyNavigation","historyState","changeLocation","hashIndex","currentState","$b890561290d3c2b9$var$assign","$b890561290d3c2b9$var$useHistoryStateNavigation","historyListeners","teardowns","pauseState","popStateHandler","fromState","direction","unknown","beforeUnloadListener","replaceState","pauseListeners","listen","teardown","destroy","$b890561290d3c2b9$var$useHistoryListeners","routerHistory","go","triggerListeners","createHref","$b890561290d3c2b9$var$isRouteName","$b890561290d3c2b9$export$e44be9a9779c480b","meta","$b890561290d3c2b9$export$35710516f95d6a57","$b890561290d3c2b9$var$createRouterError","$b890561290d3c2b9$var$NavigationFailureSymbol","$b890561290d3c2b9$export$873de56207a30e5a","$b890561290d3c2b9$var$BASE_PARAM_PATTERN","$b890561290d3c2b9$var$BASE_PATH_PARSER_OPTIONS","sensitive","strict","$b890561290d3c2b9$var$REGEX_CHARS_RE","$b890561290d3c2b9$var$compareScoreArray","$b890561290d3c2b9$var$comparePathParserScore","aScore","score","bScore","$b890561290d3c2b9$var$createRouteRecordMatcher","record","parser","extraOptions","segment1","segmentScores","tokenIndex","subSegmentScore","optional","regexp","re","subPattern","avoidDuplicatedSlash","$b890561290d3c2b9$var$tokensToParser","crash","buffer","finalizeSegment","tokens","consumeBuffer","customRe","addCharToBuffer","previousState","$b890561290d3c2b9$var$VALID_PARAM_RE","$b890561290d3c2b9$var$tokenizePath","matcher","$b890561290d3c2b9$export$36302c85fdcc95a8","routes","globalOptions","matchers","matcherMap","addRoute","originalRecord","isRootAdd","mainNormalizedRecord","redirect","$b890561290d3c2b9$var$normalizeRecordProps","instances","leaveGuards","updateGuards","enterCallbacks","$b890561290d3c2b9$var$normalizeRouteRecord","$b890561290d3c2b9$var$mergeOptions","normalizedRecords","aliases","originalMatcher","normalizedRecord","parentPath","connectingSlash","$b890561290d3c2b9$var$isAliasRecord","removeRoute","insertMatcher","matcherRef","$b890561290d3c2b9$var$isRecordChildOf","route","$b890561290d3c2b9$var$paramsFromLocation","matched","parentMatcher","$b890561290d3c2b9$var$mergeMetaFields","getRoutes","getRecordMatcher","propsObject","partialOptions","$b890561290d3c2b9$var$HASH_RE","$b890561290d3c2b9$var$AMPERSAND_RE","$b890561290d3c2b9$var$SLASH_RE","$b890561290d3c2b9$var$EQUAL_RE","$b890561290d3c2b9$var$IM_RE","$b890561290d3c2b9$var$PLUS_RE","$b890561290d3c2b9$var$ENC_BRACKET_OPEN_RE","$b890561290d3c2b9$var$ENC_CURLY_OPEN_RE","$b890561290d3c2b9$var$ENC_PIPE_RE","$b890561290d3c2b9$var$ENC_CURLY_CLOSE_RE","$b890561290d3c2b9$var$ENC_SPACE_RE","$b890561290d3c2b9$var$commonEncode","$b890561290d3c2b9$var$ENC_BRACKET_CLOSE_RE","$b890561290d3c2b9$var$encodeQueryValue","$b890561290d3c2b9$var$ENC_BACKTICK_RE","$b890561290d3c2b9$var$ENC_CARET_RE","$b890561290d3c2b9$var$encodeParam","$b890561290d3c2b9$var$encodePath","$b890561290d3c2b9$var$decode","searchParams","searchParam","eqPos","currentValue","$b890561290d3c2b9$export$d33b45a8f796a30","$b890561290d3c2b9$var$normalizeQuery","normalizedQuery","$b890561290d3c2b9$var$useCallbacks","guard","valid","enterCallbackArray","guardReturn","guardCall","guardType","rawComponent","guards","$b890561290d3c2b9$var$guardToPromiseFn","componentPromise","resolvedComponent","router","activeRecordIndex","currentMatched","routeMatched","parentRecordPath","$b890561290d3c2b9$var$getOriginalPath","innerValue","outerValue","$b890561290d3c2b9$var$includesParams","isActive","isExactActive","__vrl_devtools","linkContextDevtools","altKey","ctrlKey","shiftKey","currentTarget","$78da16583ad93b9f$export$afa64b67e5a01c3b","$b890561290d3c2b9$export$dcf14c9974fe2767","$b890561290d3c2b9$var$getLinkClass","activeClass","linkActiveClass","exactActiveClass","linkExactActiveClass","custom","ariaCurrentValue","onClick","navigate","elClass","propClass","globalClass","defaultClass","$b890561290d3c2b9$var$normalizeSlot","slotContent","$b890561290d3c2b9$export$d941f00e9b9a537","injectedRoute","depth","matchedRouteRef","routeToDisplay","viewRef","oldInstance","oldName","matchedRoute","ViewComponent","currentName","routePropsOption","routeProps","__vrv_devtools","$b890561290d3c2b9$var$formatRouteLocation","routeLocation","tooltip","$b890561290d3c2b9$var$omit","_custom","readOnly","$b890561290d3c2b9$var$formatDisplay","$b890561290d3c2b9$var$routerId","$b890561290d3c2b9$var$addDevtools","__hasDevtools","packageName","homepage","componentStateTypes","api","inspectComponent","instanceData","editable","visitComponentTree","treeNode","componentInstance","tags","textColor","backgroundColor","$b890561290d3c2b9$var$PINK_500","__devtoolsApi","devtoolsData","$b890561290d3c2b9$var$ORANGE_400","$b890561290d3c2b9$var$LIME_500","$b890561290d3c2b9$var$BLUE_600","refreshRoutesView","notifyComponentUpdate","sendInspectorTree","routerInspectorId","sendInspectorState","navigationsLayerId","addTimelineLayer","color","addTimelineEvent","logType","time","groupId","__navigationId","navigationId","beforeEach","afterEach","failure","activeRoutesPayload","$b890561290d3c2b9$var$resetMatchStateOnRouteRecord","$b890561290d3c2b9$var$isRouteMatching","$b890561290d3c2b9$var$markRouteRecordActive","rootNodes","$b890561290d3c2b9$var$formatRouteRecordForInspector","addInspector","icon","treeFilterPlaceholder","getInspectorTree","inspectorId","getInspectorState","route1","__vd_id","nodeId","$b890561290d3c2b9$var$formatRouteRecordMatcherForStateInspector","$b890561290d3c2b9$var$modifierForKey","__vd_match","__vd_exactActive","__vd_active","$b890561290d3c2b9$var$routeRecordId","childRoute","$b890561290d3c2b9$var$EXTRACT_REGEXP_RE","found","decodedPath","$ad3705cc9a88001a$var$script","$ad3705cc9a88001a$export$2e2bcd8739ae039","$b274568e620124ef$var$script","$b274568e620124ef$export$2e2bcd8739ae039","$3001c95f9abec598$var$script","$3001c95f9abec598$export$2e2bcd8739ae039","$d3efea287217c175$var$script","$d3efea287217c175$export$2e2bcd8739ae039","$1067929c1b5d8da9$var$script","$1067929c1b5d8da9$export$2e2bcd8739ae039","$f9ccc1fa0d22629a$var$apolloClient","$f9ccc1fa0d22629a$var$router","parseQuery$1","parseQuery","stringifyQuery$1","stringifyQuery","beforeGuards","beforeResolveGuards","afterGuards","pendingLocation","scrollBehavior","scrollRestoration","normalizeParams","paramValue","encodeParams","decodeParams","resolve1","rawLocation","locationNormalized","redirectedFrom","matcherLocation","targetParams","$b890561290d3c2b9$var$stringifyURL","pushWithRedirect","handleRedirectRecord","lastMatched","newTargetLocation","locationAsObject","targetLocation","force","shouldRedirect","aLastIndex","bLastIndex","scrollPosition","$b890561290d3c2b9$var$scrollPositions","parentOrRoute","recordMatcher","routeMatcher","$b890561290d3c2b9$export$baddd0131ee8c05b","savedPosition","$f9ccc1fa0d22629a$var$app","scrollIntoView","createApp","containerOrSelector","$9ee3aa3420ae2c81$var$normalizeContainer","_component","SVGElement","Element","$9ee3aa3420ae2c81$export$4e373c34abfa8c68"],"version":3,"file":"index.js.map"}